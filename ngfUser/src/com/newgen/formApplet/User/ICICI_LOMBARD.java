// Decompiled by DJ v3.7.7.81 Copyright 2004 Atanas Neshkov  Date: 6/19/2009 10:05:08 PM
// Decompiled by DJ v3.7.7.81 Copyright 2004 Atanas Neshkov  Date: 6/19/2009 10:05:08 PM
// Home Page : http://members.fortunecity.com/neshkov/dj.html  - Check often for new version!
// Decompiler options: packimports(3)
// Source File Name:   ngfUser.java
package com.newgen.formApplet.User;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.URL;
import java.security.SecureRandom;
import java.security.cert.X509Certificate;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;
import javax.swing.JOptionPane;

import com.ms.io.SystemOutputStream;
import com.newgen.encryption.DataEncryption;
import com.newgen.formApplet.NGPickList;
import com.newgen.formApplet.XMLParser;
import com.newgen.formApplet.Controls.InputVerifier.NGTextComponent;

import netscape.javascript.JSObject;

// Referenced classes of package com.newgen.formApplet.User:
//            NGFUserAdapter
public class ICICI_LOMBARD {

	private NGFPropInterface formObject = null;
	ICICI_Common icicicmn = null;
	XMLParser xmlParser = null;
	ICICI_Validations ICICIval = null;
	SimpleDateFormat dateformat = new SimpleDateFormat("dd/MM/yyyy");
	DateFormat dateFormat1 = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss.S");
	SimpleDateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S");
	// Date currDate = new Date();
	String BBGKRGVAL = "";
	int bBGKRGID = 0;
	String sMainCode = "";
	String sRowsAry[];
	String sColAry[];
	String sOutputxml = "";
	String sInputxml = "";
	JSObject js = null;
	Object obj = new Object();
	String[] str = new String[1];
	String url = "";
	// String str1[] = "";
	String sGenData = "";
	int UserId;
	XMLParser xmlParserGenData = null;
	boolean bError = false;
	boolean bBrncInfoErr = false;
	private boolean bchkBranchid = false;
	String Message = "";
	int sourceID = 0;
	ArrayList Frames = new ArrayList();
	Map<String, String> FramesAndHeight = new HashMap<String, String>();
	int MainFrameHg = 0;
	String CoInsIdFlag = "";
	String iSWeather = "";
	String Flag = "";
	/******************* CR 46 CPU DataWashing *******************/
	String cpuDataWashingFlag = "";
	String userCoinsuranceGroup = "coinsurance";
	String userCpucustomerGroup = "cpucustomer";

	/***************** End CR 46 CPU DataWashing *****************/
	public ICICI_LOMBARD() {
		xmlParser = new XMLParser();
		ICICIval = new ICICI_Validations();

	}

	public void set_CPI(NGFPropInterface pObj) {
		this.formObject = pObj;
		sGenData = formObject.getWFGeneralData();
		xmlParserGenData = new XMLParser(sGenData);
		//////// //System.out.println("xmlParserGenData:::: " +
		//////// xmlParserGenData);
		icicicmn = new ICICI_Common(pObj);

	}

	public void paintFrame() {
		// System.out.println("Entering paintFrame attttt : " +
		// dateFormat1.format(new Date()));
		String strActivityName = formObject.getWFActivityName();
		//////// //System.out.println("strActivityName:" + strActivityName);

		for (int i = 1; i < Frames.size(); i++) {
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
					&& !formObject.getNGValue("CPI_MAIL_ALIASID").equalsIgnoreCase("2")) // CR-8001-70893
																							// Marine
																							// CR
			{
				Frames.remove(1);
				Frames.add(1, "Frame Corporate Policy Issuance");
			}
			MainFrameHg = formObject.getNGControlTop((String) Frames.get(i - 1))
					+ formObject.getNGControlHeight((String) Frames.get(i - 1)) + 4;
			formObject.setNGVisible((String) Frames.get(i), true);
			formObject.setNGControlTop((String) Frames.get(i), MainFrameHg);
			//////// //System.out.println("FramesAndHeight at : " +
			//////// FramesAndHeight.get((String) Frames.get(i)));
			//////// //System.out.println("Frames.get(i) : " + Frames.get(i));
			formObject.setNGControlHeight((String) Frames.get(i),
					Integer.parseInt(FramesAndHeight.get((String) Frames.get(i))));
		}
		// System.out.println("Exiting paintFrame attttt : " +
		// dateFormat1.format(new Date()));
	}

	public String executeCommand(String strInputXml) {
		//////// //System.out.println("Entering executeCommand at : " +
		//////// dateFormat1.format(new Date()));

		String lstrProcessId = xmlParserGenData.getValueOf("ProcessInstanceId");
		String lstrProcessName = formObject.getWFProcessName();
		String sActivityName = formObject.getWFActivityName();
		String sUserName = formObject.getUserName(); // added on 13/05/2010 by
														// Ravi Shankar Tiwari
		//////// //System.out.println("sUserName" + sUserName);
		String sCommandName;

		//////// //System.out.println("sActivityName:::" + sActivityName);
		xmlParser.setInputXML(strInputXml);
		sCommandName = xmlParser.getValueOf("CommandName");
		js = formObject.getJSObject();
		if (sCommandName.equalsIgnoreCase("load")) {
			// //System.out.println("Entering executeCommand at checkign form
			// height7: " );
			formObject.setNGFormHeight(2500); // 1900 by default (height changed
												// due to Vendor Frames Not
												// visible on
												// clarifications)(Vendor CR)
												// //2200 : Before GST
												// CR-8127-95325
			//////// //System.out.println("Checking For New FormHeight Vendor
			//////// CR");
			if (sActivityName.equalsIgnoreCase("Exit") || sActivityName.equalsIgnoreCase("Discard")
					|| sActivityName.equalsIgnoreCase("ProcHubClarification")
					|| sActivityName.equalsIgnoreCase("PH_Print") || sActivityName.equalsIgnoreCase("BSG Dispatch")
					|| sActivityName.equalsIgnoreCase("PHPrintClarification")
					|| sActivityName.equalsIgnoreCase("Corporate_UW")
					|| sActivityName.equalsIgnoreCase("Coins_Lead_Policy")
					|| sActivityName.equalsIgnoreCase("BSG_Clarification")
					|| sActivityName.equalsIgnoreCase("Corp_UWClarification")
					|| sActivityName.equalsIgnoreCase("Rejected_To_IT")
					|| sActivityName.equalsIgnoreCase("Re-Insurance")
					|| sActivityName.equalsIgnoreCase("RI_Clarification")) {
				// formObject.setNGFormHeight(1900);//PID_CPI process changes
				formObject.setNGFormHeight(3000);// PID_CPI process changes
													// //2500 : Before GST
													// CR-8127-95325
			}

			//////// //System.out.println("Height" +
			//////// formObject.getNGFormHeight());

			// setting form height for print setting
			if (sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
					|| sActivityName.equalsIgnoreCase("CPU_Assignment")
					|| sActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")/* CR 46 CPU DataWashing */
					|| sActivityName.equalsIgnoreCase(
							"CPU_DW_Clarification")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 */) {
				//////// //System.out.println("Inside Endorsement form load:
				//////// Height: " + formObject.getNGFormHeight());
				/*
				 * if(sActivityName.equalsIgnoreCase("CPU_Data_Washing"))
				 * formObject.setNGFormHeight(1400); else
				 */
				// formObject.setNGFormHeight(1600);
				// //System.out.println("Entering executeCommand at checkign
				// form height7: " );
				formObject.setNGFormHeight(2100);// PID_CPI process changes
													// //1900 : Before GST
													// CR-8127-95325
				//////// //System.out.println("Height CPI_DATAWASHING_TYPE: " +
				//////// (formObject.getNGValue("CPI_DATAWASHING_TYPE")) + "\t"
				//////// + formObject.getNGFormHeight());
			}
			/************************* CR 18### **********************/
			if (sActivityName.equalsIgnoreCase("Work Introduction1")) {
				//////// //System.out.println("IN:");
				CoInsIdFlag = "F";
				cpuDataWashingFlag = "F";/* CR 46 CPU DataWashing */
				// satish
				String sQuery = "select Emp_ID,EMP_GROUP from ng_cpi_coins_emp_master";
				ArrayList getUser = formObject.getNGDataFromDataSource(sQuery, 2);
				//////// //System.out.println("Login User :: " + sUserName);
				//////// //System.out.println("userCoinsuranceGroup :: " +
				//////// userCoinsuranceGroup);
				//////// //System.out.println("userCpucustomerGroup :: " +
				//////// userCpucustomerGroup);
				//////// //System.out.println("List of User in Master table
				//////// ng_cpi_coins_emp_master ");
				for (int i = 0; i < getUser.size(); i++) {
					String userName = "", userGroupFlag = "";
					String s_CoUser = (getUser.get(i)).toString();
					// s_CoUser=s_CoUser.substring((s_CoUser.indexOf("[")+1),(s_CoUser.indexOf("]")));
					/*******************
					 * CR 46 CPU DataWashing
					 ********************/
					userName = s_CoUser.substring((s_CoUser.indexOf("[") + 1), (s_CoUser.indexOf(",")));
					userGroupFlag = s_CoUser.substring((s_CoUser.indexOf(",") + 1), (s_CoUser.indexOf("]")));
					//////// //System.out.println("userName :: " + userName);
					//////// //System.out.println("userGroupFlag :: " +
					//////// userGroupFlag);
					// getData(sQuery,"1");
					if (userName.equalsIgnoreCase(sUserName)) {
						//////// //System.out.println("Inside CR 46 work
						//////// introducion ::");
						if (userGroupFlag.trim().equalsIgnoreCase(userCoinsuranceGroup)) {
							CoInsIdFlag = "T";
							//////// //System.out.println("coinsurance Flag : "
							//////// + CoInsIdFlag);
							break;
						}
						if (userGroupFlag.trim().equalsIgnoreCase(userCpucustomerGroup)) {
							cpuDataWashingFlag = "T";
							//////// //System.out.println("cpucustomer Flag : "
							//////// + cpuDataWashingFlag);
							break;
						}
					}
					//////// //System.out.println("Exiting CR 46 work
					//////// introducion ::");
					/*****************
					 * end CR 46 CPU DataWashing
					 *******************/
				}
				// satish
				if (CoInsIdFlag.equalsIgnoreCase("T")) {
					formObject.setNGVisible("Frame2", false);
					formObject.setNGVisible("Frame4",
							false);/* CR 46 CPU DataWashing */
					formObject.setNGControlTop("Frame3", 100);
					formObject.NGAddItem("CPI_CO_INSURANCE_STATUS", "Co Insurance");
				} /*******************
					 * CR 46 CPU DataWashing
					 ********************/
				else if (cpuDataWashingFlag.equalsIgnoreCase("T")) {
					formObject.setNGVisible("Frame2", false);
					formObject.setNGVisible("Frame3", false);
					formObject.setNGControlTop("Frame4", 100);
					formObject.NGAddItem("CPI_DATAWASHING_TYPE", "Endorsement");
				} /*****************
					 * end CR 46 CPU DataWashing
					 *******************/
				else {
					formObject.setNGVisible("Frame3", false);
					formObject.setNGVisible("Frame4",
							false);/* CR 46 CPU DataWashing */
					formObject.setNGControlTop("Frame2", 100);
					formObject.NGAddItem("CPI_Process_Type", "--Select--");
					formObject.NGAddItem("CPI_Process_Type", "Endorsement");
					formObject.NGAddItem("CPI_Process_Type", "Corporate Policy Insurance");
				}
			}
			/********************** End CR 18### **********************/
			if (!sActivityName.equalsIgnoreCase("Work Introduction1")) {
				formObject.setNGValue("CPI_WORKITEM_NO", lstrProcessId);
				formObject.setNGLocked("CPI_WORKITEM_NO", false);
				formObject.setNGLocked("CPI_PROCESS_TYPE", false);

				/*************************
				 * CPI PID Additional Points
				 *****************************/
				/*
				 * if(!sActivityName.equalsIgnoreCase("Co_Insurance") &&
				 * !sActivityName.equalsIgnoreCase("Co_Insurance_RM")) {
				 * lockPaymentModes(); }
				 */
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				/***************************
				 * PID-CPI process changes
				 ***************************/
				formObject.setSpecificDateFormat("CPI_Instrument_Date", "dd/MM/yyyy");
				formObject.setSpecificDateFormat("CPI_Instrument_Date2", "dd/MM/yyyy");
				formObject.setSpecificDateFormat("CPI_Instrument_Date3", "dd/MM/yyyy");
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				// start
				/*
				 * =============================CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */
				if (sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("Endorsement")) {
					//// //System.out.println("Bucket Mapping Inside if
					//// NGF_EventHandler CPI_SERVICE_RENDERED_JK Enable:");
					formObject.setNGEnable("CPI_SERVICE_RENDERED_JK", true);
					formObject.setNGLocked("CPI_SERVICE_RENDERED_JK", true);
					if (sActivityName.equalsIgnoreCase("BSG_QC")
							&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
							&& formObject.getNGValue("CPI_QUOTE_NO") != "") {
						// //System.out.println("Bucket Mapping Inside if
						// NGF_EventHandler Corp_SERVICE_RENDERED_JK Enable:");
						formObject.setNGEnable("Corp_SERVICE_RENDERED_JK", true);
						formObject.setNGLocked("Corp_SERVICE_RENDERED_JK", true);
					}
				} else {
					// //System.out.println("Bucket Mapping Inside if
					// NGF_EventHandler Disable:");
					formObject.setNGEnable("CPI_SERVICE_RENDERED_JK", false);
					formObject.setNGLocked("CPI_SERVICE_RENDERED_JK", false);
					formObject.setNGEnable("END_SERVICE_RENDERED_JK", false);
					formObject.setNGLocked("END_SERVICE_RENDERED_JK", false);
					formObject.setNGEnable("Corp_SERVICE_RENDERED_JK", false);
					formObject.setNGLocked("Corp_SERVICE_RENDERED_JK", false);
				}
				/*
				 * =============================End CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */
				/***** Start CR-8001-87420-Green File Digitization *****/
				// formObject.setSpecificDateFormat("CPI_POLICY_START_DATE",
				// "dd/MM/yyyy");
				if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
						|| /* //CR GREEN FILE Digitization Phase II (Yogesh) */sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification")
						|| sActivityName.equalsIgnoreCase(
								"RM_Clarification")/*
													 * // End CR GREEN FILE
													 * Digitization Phase II
													 * (Yogesh)
													 */)
						&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {

					// //System.out.println("Inside enable the executeCommand
					// Green File Digitization");
					// formObject.setSpecificDateFormat("CPI_POLICY_START_DATE",
					// "dd/MM/yyyy");
					formObject.setNGEnable("CPI_ADDTNL_CIT_RM_ID", true);
					formObject.setNGLocked("CPI_ADDTNL_CIT_RM_ID", true);
					formObject.setNGEnable("CPI_ADDTNL_CIT_RM_NAME", true);
					formObject.setNGLocked("CPI_ADDTNL_CIT_RM_NAME", false);
					formObject.setNGEnable("CPI_UW_EMP_ID", true);
					formObject.setNGLocked("CPI_UW_EMP_ID", true);
					formObject.setNGEnable("CPI_UW_NAME", true);
					formObject.setNGLocked("CPI_UW_NAME", false);

					if ((formObject.getNGValue("CPI_PRODUCT_IRDACODE") != null
							|| !formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase(""))
							&& (formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4037")
									|| formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4047"))
							&& !(formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1"))) {
						formObject.setNGValue("CPI_IS_PF_FETCH", "No");// hidden
																		// form
																		// control
																		// CPI_IS_PF_FETCH
						//// //System.out.println("inside if value of
						//// CPI_IS_PF_FETCH
						//// ==="+formObject.getNGValue("CPI_IS_PF_FETCH"));
					} else {
						formObject.setNGValue("CPI_IS_PF_FETCH", "Yes");// hidden
																		// form
																		// control
																		// CPI_IS_PF_FETCH
						//// //System.out.println("inside else value of
						//// CPI_IS_PF_FETCH
						//// ==="+formObject.getNGValue("CPI_IS_PF_FETCH"));
					}

					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						//// //System.out.println("Inside enable the
						//// executeCommand Green File
						//// Digitization"+formObject.getNGValue("CPI_Process_Type"));
						formObject.setNGEnable("CPI_PREV_POLICY_NO", true);
						formObject.setNGLocked("CPI_PREV_POLICY_NO", true);
						if (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal")
								&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
							formObject.setNGEnable("CPI_GRNFL_PROPOSAL_NO", true);
							formObject.setNGLocked("CPI_GRNFL_PROPOSAL_NO", true);
						}
						if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")) {
							formObject.setNGEnable("CPI_IL_CO_INS_LEADER", true);
							formObject.setNGLocked("CPI_IL_CO_INS_LEADER", true);
							//// //System.out.println("enable :
							//// CPI_IL_CO_INS_LEADER");
						}
						if (formObject.getNGValue("CPI_IL_CO_INS_LEADER").equalsIgnoreCase("IL Share Payout")) {
							formObject.setNGEnable("CPI_IL_SHARE", true);
							formObject.setNGLocked("CPI_IL_SHARE", true);
							//// //System.out.println("enable :
							//// CPI_IL_CO_INS_LEADER");
						}
						if (formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("Yes")) {
							formObject.setNGEnable("CPI_RI_INWARD_TYPE", true);
							formObject.setNGLocked("CPI_RI_INWARD_TYPE", true);
							//// //System.out.println("enable :
							//// CPI_IL_CO_INS_LEADER");
						}
						if (formObject.getNGValue("CPI_prIMARY_SUB_VERTICAL").equalsIgnoreCase("IBGNP")) {
							formObject.setNGEnable("CPI_RM_EMP_ID_SPG_IBG", true);
							formObject.setNGLocked("CPI_RM_EMP_ID_SPG_IBG", true);
							//// //System.out.println("enable :
							//// CPI_IL_CO_INS_LEADER");
						}
						if (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal") && formObject
								.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("GROUPHEALTHFLOATERPOLICY")) {
							formObject.setNGEnable("CPI_NEFT_DETAILS", true);
							formObject.setNGLocked("CPI_NEFT_DETAILS", true);
							//// //System.out.println("enable :
							//// CPI_IL_CO_INS_LEADER");
						}
						if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")
								|| formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")) {
							//// //System.out.println("enable all :
							//// CPI_IL_CO_INS_LEADER");
							formObject.setNGEnable("CPI_CO_INSURER_NAME1", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME1", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE1", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE1", true);
							formObject.setNGEnable("CPI_CO_INSURER_NAME2", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME2", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE2", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE2", true);
							formObject.setNGEnable("CPI_CO_INSURER_NAME3", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME3", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE3", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE3", true);
							formObject.setNGEnable("CPI_CO_INSURER_NAME4", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME4", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE4", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE4", true);
							formObject.setNGEnable("CPI_CO_INSURER_NAME5", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME5", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE5", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE5", true);
						}
					} else {
						//// //System.out.println("Inside enable the
						//// executeCommand Green File
						//// Digitization"+formObject.getNGValue("CPI_Process_Type"));
						formObject.setNGEnable("CPI_POLICY_NUMBER_BASE", true);
						formObject.setNGLocked("CPI_POLICY_NUMBER_BASE", true);
						//// //System.out.println("enable :
						//// CPI_POLICY_NUMBER_BASE");
					}
				} else {
					//// //System.out.println("Inside main else disable all the
					//// executeCommand Green File Digitization");
					formObject.setNGEnable("CPI_ADDTNL_CIT_RM_ID", false);
					formObject.setNGLocked("CPI_ADDTNL_CIT_RM_ID", false);
					formObject.setNGEnable("CPI_ADDTNL_CIT_RM_NAME", false);
					formObject.setNGLocked("CPI_ADDTNL_CIT_RM_NAME", false);
					formObject.setNGEnable("CPI_UW_EMP_ID", false);
					formObject.setNGLocked("CPI_UW_EMP_ID", false);
					formObject.setNGEnable("CPI_UW_NAME", false);
					formObject.setNGLocked("CPI_UW_NAME", false);

					formObject.setNGEnable("CPI_POLICY_NUMBER_BASE", false);
					formObject.setNGLocked("CPI_POLICY_NUMBER_BASE", false);
					formObject.setNGEnable("CPI_POLICY_START_DATE", false);
					formObject.setNGLocked("CPI_POLICY_START_DATE", false);
					formObject.setNGEnable("CPI_REFUND_TYPE", false);
					formObject.setNGLocked("CPI_REFUND_TYPE", false);

					formObject.setNGEnable("CPI_PREV_POLICY_NO", false);
					formObject.setNGLocked("CPI_PREV_POLICY_NO", false);
					formObject.setNGEnable("CPI_IL_CO_INS_LEADER", false);
					formObject.setNGLocked("CPI_IL_CO_INS_LEADER", false);
					formObject.setNGEnable("CPI_IL_SHARE", false);
					formObject.setNGLocked("CPI_IL_SHARE", false);
					formObject.setNGEnable("CPI_RI_INWARD_TYPE", false);
					formObject.setNGLocked("CPI_RI_INWARD_TYPE", false);
					formObject.setNGEnable("CPI_RM_EMP_ID_SPG_IBG", false);
					formObject.setNGLocked("CPI_RM_EMP_ID_SPG_IBG", false);
					formObject.setNGEnable("CPI_NEFT_DETAILS", false);
					formObject.setNGLocked("CPI_NEFT_DETAILS", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME1", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME1", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE1", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE1", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME2", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME2", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE2", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE2", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME3", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME3", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE3", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE3", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME4", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME4", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE4", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE4", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME5", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME5", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE5", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE5", false);
					formObject.setNGEnable("CPI_GRNFL_PROPOSAL_NO", false);
					formObject.setNGLocked("CPI_GRNFL_PROPOSAL_NO", false);

				}
				/***** End CR-8001-87420-Green File Digitization *****/ /************
																		 * Start
																		 * Yogesh
																		 * Marine
																		 ******/
				/*
				 * if (formObject.getWFActivityName().equalsIgnoreCase("BSG_QC")
				 * || formObject.getWFActivityName().equalsIgnoreCase(
				 * "RM_Clarification") ||
				 * formObject.getWFActivityName().equalsIgnoreCase(
				 * "BSG_Clarification") &&
				 * !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(
				 * "") && formObject.getNGValue("CPI_Process_Type").
				 * equalsIgnoreCase("Corporate Policy Insurance"))//yy { //
				 * //System.out.println("Inside the corp_sp_name validation");
				 * String str=formObject.getNGValue("CORP_SP_NAME"); if(str !=
				 * null && str.length()>=30) {
				 * JOptionPane.showMessageDialog(null,
				 * "Speciiled Person Name should be 30 Character"); } }
				 */
				// commented by 30 character validation issue.

				/*********** End Yogesh Marine ******/
				/****
				 * Start CR-8001-70893 Marine CR
				 *******************************/
				if (sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")
						|| sActivityName.equalsIgnoreCase("COPS_Policy_Endr")
						|| sActivityName.equalsIgnoreCase("COPS_Policy_Print")) {
					// //System.out.println("Inside executeCommand");
					formObject.setNGFormHeight(3000);
					formObject.setSpecificDateFormat("CPI_INSTRUMENT_DATE", "dd/MM/yyyy");
					formObject.setSpecificDateFormat("CPI_RISK_INSPECTION_DATE", "dd/MM/yyyy");
					formObject.setSpecificDateFormat("CPI_RISK_EXPIRY_DATE", "dd/MM/yyyy");// CPI
																							// PID
																							// Additional
																							// Points

					// //System.out.println("COPS_Cpu_Assignment called");
					if (sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")
							|| sActivityName.equalsIgnoreCase("COPS_Policy_Endr")) {
						// setAddItems("CPI_PAS",sActivityName); //commented
						// yogesh
						setAddItems("CPI_BUSINESS_TYPE", sActivityName);
						setAddItems("CPI_Client_Information", sActivityName);
						setAddItems("CPI_BOOKING_TYPE", sActivityName);
						formObject.NGAddItem("CPI_product_category", "Corporate_Endorsement"); // Existing
																								// it
																								// was
																								// Marine
																								// now
																								// changed
																								// to
																								// Corporate_Endorsement
																								// /**
																								// CR-8001-85348
																								// :
																								// Corporate
																								// product
																								// endorsement
																								// (Marine
																								// Modification)
																								// :
																								// Vaibhav
																								// **/
						/**************** Start Yogesh Marine **********/// tt
						// //System.out.println("Inside setAddItem Yogesh");
						formObject.NGAddItem("CPI_PAS", "Pathfinder");
						formObject.setNGEnable("CPI_PAS", false);
						formObject.setNGLocked("CPI_PAS", false);
						System.out.println("Loading value CPI_PID_PAYMENT_TYPE at " + sActivityName);
						setAddItems("CPI_PID_PAYMENT_TYPE", sActivityName);
						setAddItems("CPI_PRODUCT_TYPE", sActivityName);
						setAddItems("CPI_COINSURANCE", sActivityName);
						setAddItems("CPI_VAS", sActivityName);
						setAddItems("CPI_TRANSACTION_TYPE", sActivityName);
						setAddItems("CPI_RI_INWARD", sActivityName);
						setAddItems("CPI_TYPE_OF_ENDORSEMENT", sActivityName);
						setAddItems("CPI_EXTERNAL_ENDORSEMENT_TYPE", sActivityName);
						setAddItems("CPI_INTERNAL_ENDORSEMENT_TYPE", sActivityName);
						/**************** End Yogesh Marine **********/

					}
					setAddItems("CPI_Withdrawn_Reason", sActivityName);
					formObject.setNGEnable("CPI_Withdrawn_Reason", false);
					// formObject.setNGEnable("CPI_NETWORK_PARTNER", true);
					formObject.setNGValue("CPI_NETWORK_PARTNER", "No");
					formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
					formObject.setNGLocked("CPI_PROPOSAL_NO", false);
					formObject.setNGEnable("CPI_PROPOSAL_NO", false);

					if (sActivityName.equalsIgnoreCase(
							"COPS_Policy_Endr")/*
												 * //yy yogesh !sActivityName.
												 * equalsIgnoreCase(
												 * "COPS_Cpu_Assignment")
												 */) {
						formObject.setNGEnable("CPI_PROPOSAL_NO", true);
						formObject.setNGLocked("CPI_PROPOSAL_NO", true);
						System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + sActivityName);
						formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "No");
						formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
						formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
						formObject.setNGValue("CPI_product_category",
								"Corporate_Endorsement"); /**
															 * CR-8001-85348 :
															 * Corporate product
															 * endorsement
															 * (Marine
															 * Modification) :
															 * Vaibhav
															 **/
						enableFields();
						// //System.out.println("COPS_Policy_Endr called");
						// existing sEND_TO varibale using
						setAddItems("CPI_sEND_TO", sActivityName);

						setAddItems("CPI_Route_to", sActivityName);
						formObject.NGClear("CPI_CO_INS_ROUTE_TO_BACK");
						formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", true);
						formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", true);
						formObject.setNGEnable("CPI_BOOKING_TYPE", true);
						formObject.setNGLocked("CPI_BOOKING_TYPE", true);
						formObject.NGAddItem("CPI_CO_INS_ROUTE_TO_BACK", "COPS_Cpu_Assignment");
					}
					/**************** Start Yogesh Marine **********/
					if (sActivityName.equalsIgnoreCase("COPS_Policy_Print")) {
						// //System.out.println("disablefields() are called");
						// //System.out.println("executeCommand:1
						// "+formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE"));
						// //System.out.println("executeCommand:2
						// "+formObject.getNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE"));
						disableFields();
						formObject.setNGEnable("CPI_SAMADHAN_INTERACTION_ID", true);
						formObject.setNGLocked("CPI_SAMADHAN_INTERACTION_ID", true);
						setAddItems("CPI_Route_to", sActivityName);

					}
					/************* End Yogesh Marine *******/
					// //System.out.println("COPS_Cpu_Assignment called end");
				}
				/****
				 * ENd CR-8001-70893 Marine CR
				 *********************************/

				/*****************************
				 * CR 28 by satish
				 *****************************/
				if (!sActivityName.equalsIgnoreCase("Endorsement") && !sActivityName.equalsIgnoreCase("RM_Green_File")
						&& !sActivityName.equalsIgnoreCase("Co_Insurance")
						&& !sActivityName.equalsIgnoreCase("Co_Insurance_RM")
						&& !sActivityName.equalsIgnoreCase("CPU_Assignment")
						&& !sActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")/* CR 46 CPU DataWashing */
						&& !sActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						&& !formObject.getNGValue("CPI_MAIL_ALIASID").equalsIgnoreCase("2")) // CR-8001-70893
																								// Marine
																								// CR
				{
					formObject.setNGLocked("Corp_Channel_Employee_Name", false);
					formObject.setNGLocked("Corp_Infra_Commission", false);
					formObject.setNGLocked("End_Channel_Employee_Name", false);
					formObject.setNGLocked("End_Infra_Commission", false);
					/*****************************
					 * CR 38 by satish
					 *****************************/
					formObject.setNGLocked("End_Business_type", false);
					formObject.setNGLocked("End_Name_of_broker_agent", false);
					/***************************
					 * End CR 38 by satish
					 ***************************/
					/*******************
					 * CR 45 Network Partner
					 ********************/
					formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
					formObject.setNGEnable("CPI_NETWORK_PARTNER", false);
					// formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME",false);
					formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
					formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
					formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
					/*****************
					 * end CR 45 Network Partner
					 *******************/
					/*************************
					 * CPI PID Additional Points
					 *****************************/
					System.out.println("Enabling CPI_PID_PAYMENT_TYPE at " + sActivityName);
					formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", true);
					formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", true);
					formObject.setNGLocked("End_PID_PAYMENT_TYPE", false);
					formObject.setNGEnable("End_PID_PAYMENT_TYPE", false);
					formObject.setNGLocked("Corp_PID_PAYMENT_TYPE", false);
					formObject.setNGEnable("Corp_PID_PAYMENT_TYPE", false);
					if (!sActivityName.equalsIgnoreCase("BSG_QC")) {
						formObject.setNGLocked("Frame_PaymentGrid", false);
						formObject.setNGEnable("Frame_PaymentGrid", false);
					}
					/*************************
					 * End CPI PID Additional Points
					 **************************/
				}
				/***************************
				 * End CR 28 by satish
				 ***************************/
				//////// //System.out.println("sandy###" +
				//////// formObject.getNGValue("CPI_WORKITEM_NO"));
				if (sActivityName.equalsIgnoreCase("Endorsement") || sActivityName.equalsIgnoreCase("CPU_Assignment")
						|| sActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")/* CR 46 CPU DataWashing */
						|| sActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification")/*
														 * CR-OMCPI-1314-03 CPU
														 * DataWashing
														 */
						|| sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification") || sActivityName.equalsIgnoreCase(
								"RM_Clarification")/*
													 * Start CR GREEN FILE
													 * Digitization Phase II
													 * (Yogesh)
													 */) {
					//////// //System.out.println("sandy###1111" +
					//////// formObject.getNGValue("CPI_WORKITEM_NO"));
					formObject.NGAddItem("CPI_PAS", "OM");
					formObject.NGAddItem("CPI_PAS", "Premia");
					formObject.NGAddItem("CPI_PAS", "Pathfinder");

					formObject.NGAddItem("CPI_Client_Information", "Others"); // CR
																				// 6
																				// over
																				// CR
																				// 12
					formObject.NGAddItem("CPI_Client_Information", "HNI"); // CR
																			// 6
																			// over
																			// CR
																			// 12

					/*****************************
					 * CR 38 by satish
					 *****************************/
					formObject.NGAddItem("CPI_Business_Type", "Direct");
					formObject.NGAddItem("CPI_Business_Type", "Agent");
					formObject.NGAddItem("CPI_Business_Type", "Broker");
					/************ CR-OMCPI-1314-02 FIG COB CR ***************/
					formObject.NGAddItem("CPI_Business_Type", "COB");
					/********** End CR-OMCPI-1314-02 FIG COB CR *************/
					formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", false);
					/***************************
					 * End CR 38 by satish
					 ***************************/
					/***************************
					 * PID-CPI process changes
					 ***************************/
					// Commenting blow code because CPI_MODE_OF_PAYMENT field
					// has been changed to textbox, it will be populate from
					// master
					/*
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "Cheque");
					 * formObject.NGAddItem("CPI_//PID_CPI process changes",
					 * "DD"); formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "NA");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "CD");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT",
					 * "Fund Transfer");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "BG");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT",
					 * "Adjustment");
					 */
					/*
					 * formObject.setNGEnable("CPI_moDE_OF_PAYMENT", false);
					 * formObject.setNGLocked("CPI_MODE_OF_PAYMENT", false);
					 * formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT", false);
					 * formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
					 * false); formObject.setNGLocked("CPI_BANK_NAME_CD_NAME",
					 * false); formObject.setNGEnable("CPI_INSTRUMENT_DATE",
					 * false);
					 */ // Suraj
						// formObject.setNGLocked("CPI_INSTRUMENT_DATE", false);
					formObject.setNGEnable("Frame_PaymentGrid", false);

					/***********************
					 * End PID-CPI process changes
					 ***************************/

					/*******************************
					 * CR 44 by satish
					 ****************************/
					formObject.NGAddItem("CPI_CoInsurance", "No Co-Insurance");
					formObject.NGAddItem("CPI_CoInsurance", "Leader");
					formObject.NGAddItem("CPI_CoInsurance", "Follower");
					/****************************
					 * end CR 44 by satish
					 ***************************/
					formObject.NGFocus("CPI_PAS");
					// sand%%
					//////// //System.out.println("CPI_DATAWASHING_TYPE-----" +
					// formObject.getNGValue("CPI_DATAWASHING_TYPE"));
					formObject.setNGVisible("Frame back_Coins", false);
					formObject.setSpecificDateFormat("CPI_Instrument_Date", "dd/MM/yyyy");
					formObject.setSpecificDateFormat("CPI_ENDORSEMENT_EFFECTIVE_DATE", "dd/MM/yyyy");
					/*******************
					 * CR 46 CPU DataWashing
					 ********************/

					/* CR-OMCPI-1314-03 CPU DataWashing Start */
					/*
					 * if(sActivityName.equalsIgnoreCase("CPU_Assignment")) {
					 * formObject.setNGVisible("Datawashing Assignment frame"
					 * ,true);
					 * formObject.setNGControlTop("Datawashing Assignment frame"
					 * ,73); formObject.setNGControlTop("Frame2",163);
					 * formObject.setNGVisible("Frame_Withdrawal",true);
					 * formObject.setNGControlTop("Frame_Withdrawal",1083);
					 * formObject.setNGControlTop("Frame3",1168);
					 * formObject.setNGLocked("CPI_CHANGED_MAIL_STATUS",false);
					 * formObject.setNGEnable("CPI_CPU_ASSIGN_TO",true);
					 * formObject.setNGLocked("CPI_CPU_ASSIGN_TO",false); } else
					 * { formObject.setNGVisible("Datawashing Assignment frame"
					 * ,false); //formObject.
					 * setNGControlTop("Datawashing Assignment frame",73);
					 * formObject.setNGControlTop("Frame2",73);
					 * formObject.setNGVisible("Frame_Withdrawal",false);
					 * //formObject.setNGControlTop("Frame_Withdrawal",1083);
					 * formObject.setNGControlTop("Frame3",1083); }
					 */
					/* CR-OMCPI-1314-03 CPU DataWashing End */
					if (sActivityName.equalsIgnoreCase("CPU_Data_Washing") || sActivityName.equalsIgnoreCase(
							"CPU_DW_Clarification")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 */) {
						formObject.setNGVisible("Label65", true);
						formObject.setNGVisible("CPI_CLIENT_MAIL_RECEIVED_DATE", true);
						formObject.setSpecificDateFormat("CPI_CLIENT_MAIL_RECEIVED_DATE", "dd/MM/yyyy");
						formObject.setNGLocked("CPI_CUSTOMER_ID", true);// CPI
																		// PID
																		// Additional
																		// Points
					}
					/*
					 * if(sActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
					 * formObject.NGAddItem("CPI_Route_to","RM Clarification");
					 * formObject.NGAddItem(
					 * "CPI_Route_to","CPU Customer Clarification"); ////////
					 * //System.out.
					 * println("end field bag set datawashing case ");
					 * //CR-OMCPI-1314-03 CPU DataWashing Start
					 * formObject.NGAddItem(
					 * "CPI_CHANGED_MAIL_STATUS","Pending for Payment Confirmation"
					 * ); formObject.NGAddItem(
					 * "CPI_CHANGED_MAIL_STATUS","Pending for Clarification");
					 * formObject.NGAddItem(
					 * "CPI_CHANGED_MAIL_STATUS","Pending for Payment");
					 * formObject.NGAddItem(
					 * "CPI_CHANGED_MAIL_STATUS","Pending for Booking");
					 * //CR-OMCPI-1314-03 CPU DataWashing End }
					 */

					if (sActivityName.equalsIgnoreCase("CPU_Data_Washing") || sActivityName.equalsIgnoreCase(
							"CPU_Assignment")/*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing
												 */) {
						System.out.println("Adding value into CPI_Withdrawn_Reason at " + sActivityName);
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Wrongly in warded");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Withdrawn due to Customer Request");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "System Issue");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Cheque  Bounce");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Re in warded with modified details");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Others");
						formObject.setNGEnable("CPI_Withdrawn_Reason", false);
					}
					/*****************
					 * end CR 46 CPU DataWashing
					 *******************/
					/**************************************
					 * Client Registration CR Start
					 *****************************************************/
					if (sActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
						// //System.out.println("Entering in Client Registration
						// CR in Executeonload Event");
						formObject.setNGEnable("CPI_POLICYNO_SEARCH", true);
						// //System.out.println("Exiting in Client Registration
						// CR in Executeonload Event");
					}
					/**************************************
					 * Client Registration CR End
					 ******************************************************/
					if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
						// //System.out.println("Inside if 1 enable false1:");
						formObject.setNGEnable("CPI_SOURCE_NAME", false);
						formObject.setNGLocked("CPI_SOURCE_NAME", false);
						formObject.setNGEnable("CPI_BRANCH_NAME", false);
						formObject.setNGLocked("CPI_BRANCH_NAME", false);
						formObject.setNGEnable("CPI_CHANNEL_NAME", false);
						formObject.setNGLocked("CPI_CHANNEL_NAME", false);
						/*****************************
						 * CR 28 by satish
						 *****************************/
						formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", false);
						formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", false);
						formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
						/***************************
						 * End CR 28 by satish
						 ***************************/
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGLocked("CPI_CIF_ID", false);
						formObject.setNGLocked("CPI_OTHER_PIDNO", true);
						formObject.setNGLocked("CPI_CDBG_NO", true);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}

					/********************** CR18### *****************************/
				}

				// satish
				else if (sActivityName.equalsIgnoreCase("Co_Insurance")
						|| sActivityName.equalsIgnoreCase("Co_Insurance_RM")) {
					formObject.setNGFormHeight(810);
					formObject.setSpecificDateFormat("CPI_RISK_INSPECTION_DATE", "dd/MM/yyyy");
					//////// //System.out.println("inside Co
					//////// Insurance::sandeep");
					formObject.NGAddItem("CPI_Process_Type", "Endorsement");
					formObject.NGAddItem("CPI_Process_Type", "Corporate Policy Insurance");
					formObject.setNGEnable("CPI_Process_Type", false);

					formObject.setNGValue("CPI_Product_Type", "NON-OTC");

					formObject.setSpecificDateFormat("CPI_RISK_EXPIRY_DATE", "dd/MM/yyyy");
					if (sActivityName.equalsIgnoreCase("Co_Insurance")) {
						formObject.setNGLocked("CPI_RM_NAME", false);
						formObject.setNGLocked("CPI_RM_ID", false);
						formObject.setNGLocked("CPI_IL_LOCATION", false);
						formObject.NGAddItem("CPI_CO_INS_ROUTE_TO", "WITHDRAW");
						if ((formObject.getNGValue("CPI_LEADER_CATEGORY")).equalsIgnoreCase("")) {
							formObject.setNGEnable("CPI_NAME_OF_LEADER", false);
						} else {
							formObject.setNGEnable("CPI_NAME_OF_LEADER", true);
							formObject.setNGLocked("CPI_NAME_OF_LEADER", false);
						}

						if ((formObject.getNGValue("CPI_PRODUCT_CATEGORY")).equalsIgnoreCase("")) {
							formObject.setNGEnable("CPI_PRODUCT_NAME", false);
						} else {
							formObject.setNGEnable("CPI_PRODUCT_NAME", true);
							formObject.setNGLocked("CPI_PRODUCT_NAME", false);
						}
						// satish
						formObject.setNGVisible("Frame CO_ROUTE", false);
						formObject.setNGVisible("Frame withdraw", true);
						formObject.setNGControlTop("Frame withdraw", 635);
					}
					if (sActivityName.equalsIgnoreCase("Co_Insurance_RM")) {
						formObject.setNGVisible("Frame withdraw", false);
						formObject.setNGEnable("CPI_LEADER_CATEGORY", false);
						formObject.setNGLocked("CPI_LEADER_CATEGORY", false);
						formObject.setNGEnable("CPI_PRODUCT_CATEGORY", false);
						formObject.setNGLocked("CPI_PRODUCT_CATEGORY", false);
						formObject.setNGEnable("CPI_PRODUCT_NAME", true);

						//////// //System.out.println("b4 calling
						//////// CoInsValidation :");
						CoInsValidation();
						// satish
					}
				} // satish
				/**********************
				 * End CR18###
				 *****************************/
				else if (sActivityName.equalsIgnoreCase("RM_Green_File")) {
					//////// //System.out.println("VAlue##" +
					//////// formObject.getNGValue("CPI_PRIMARY_VERTICAL"));

					formObject.setSpecificDateFormat("CPI_INSTRUMENT_DATE", "dd/MM/yyyy");
					formObject.setSpecificDateFormat("CPI_RISK_INSPECTION_DATE", "dd/MM/yyyy");
					formObject.setSpecificDateFormat("CPI_RISK_EXPIRY_DATE", "dd/MM/yyyy");// CPI
																							// PID
																							// Additional
																							// Points

					formObject.NGAddItem("CPI_PAS", "Pathfinder");
					formObject.NGAddItem("CPI_PAS", "Premia");

					formObject.NGAddItem("CPI_Client_Information", "Others");
					formObject.NGAddItem("CPI_Client_Information", "HNI");

					formObject.NGAddItem("CPI_RI_Inward", "Yes");
					formObject.NGAddItem("CPI_RI_Inward", "No");

					formObject.NGAddItem("CPI_Business_Type", "Direct");
					formObject.NGAddItem("CPI_Business_Type", "Agent");
					formObject.NGAddItem("CPI_Business_Type", "Broker");
					/************ CR-OMCPI-1314-02 FIG COB CR ***************/
					formObject.NGAddItem("CPI_Business_Type", "COB");
					/********** End CR-OMCPI-1314-02 FIG COB CR *************/
					formObject.NGAddItem("CPI_Booking_Type", "FINAL");
					formObject.NGAddItem("CPI_Booking_Type", "PROVISIONAL");
					/**********************
					 * Start Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 *************************/
					formObject.NGAddItem("CPI_Booking_Type", "ALTERNATE");
					/**********************
					 * End Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 ***************************/

					formObject.NGAddItem("CPI_Transaction_type", "New Client");
					formObject.NGAddItem("CPI_Transaction_type", "New From Exisiting Client");
					formObject.NGAddItem("CPI_Transaction_type", "Renewal");
					formObject.NGAddItem("CPI_Transaction_type", "Rollover");// CR
																				// GREEN
																				// FILE
																				// Digitization
																				// Phase
																				// II
																				// (Yogesh)

					formObject.NGAddItem("CPI_CoInsurance", "No Co-Insurance");
					formObject.NGAddItem("CPI_CoInsurance", "Leader");
					formObject.NGAddItem("CPI_CoInsurance", "Follower");

					/***************************
					 * PID-CPI process changes
					 ***************************/
					/*
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "Cheque");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "DD");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "NA");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "CD");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT",
					 * "Fund Transfer");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT", "BG");
					 * formObject.NGAddItem("CPI_MODE_OF_PAYMENT",
					 * "Adjustment");
					 */

					/*
					 * formObject.setNGEnable("CPI_moDE_OF_PAYMENT", false);
					 * formObject.setNGLocked("CPI_MODE_OF_PAYMENT", false);
					 * formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
					 * false); formObject.setNGLocked("CPI_BANK_NAME_CD_NAME",
					 * false); formObject.setNGEnable("CPI_INSTRUMENT_DATE",
					 * false);
					 */ // Suraj
					formObject.setNGEnable("Frame_PaymentGrid", false);
					// formObject.setNGLocked("CPI_INSTRUMENT_DATE", false);
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					formObject.setNGLocked("CPI_HYPOTHECATED_TO", false); // Held
																			// Cover
																			// CR
																			// HYPOTHECATED
																			// TO

					/*******************
					 * CR 45 Network Partner
					 ********************/
					formObject.NGAddItem("CPI_NETWORK_PARTNER", "Yes");
					formObject.NGAddItem("CPI_NETWORK_PARTNER", "No");
					/*****************
					 * end CR 45 Network Partner
					 *******************/
					formObject.NGFocus("CPI_PAS");

					formObject.setNGVisible("Frame back_Coins", false);

					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					//////// //System.out.println("In ExecuteCommand Method For
					//////// RM_GREEN_FILE 8001-61339");
					formObject.setNGEnable("CPI_Exception_To_MH", false);
					formObject.setNGLocked("CPI_Exception_To_MH", false);
					formObject.setNGEnable("CPI_MH_Interaction_No", false);
					formObject.setNGLocked("CPI_MH_Interaction_No", false);

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 ********************/
					if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
						// //System.out.println("Inside if 1 enable false2:");
						formObject.setNGEnable("CPI_SOURCE_NAME", false);
						formObject.setNGLocked("CPI_SOURCE_NAME", false);
						formObject.setNGEnable("CPI_BRANCH_NAME", false);
						formObject.setNGLocked("CPI_BRANCH_NAME", false);
						formObject.setNGEnable("CPI_CHANNEL_NAME", false);
						formObject.setNGLocked("CPI_CHANNEL_NAME", false);
						/*****************************
						 * CR 28 by satish
						 *****************************/
						formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", false);
						formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", false);
						formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
						formObject.setNGEnable("CPI_naME_OF_BROKER_AGENT", false);
						/***************************
						 * End CR 28 by satish
						 ***************************/
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGLocked("CPI_CIF_ID", false);
						formObject.setNGLocked("CPI_OTHER_PIDNO", true);
						formObject.setNGLocked("CPI_CDBG_NO", true);

					} else if (formObject.getNGValue("CPI_quOTE_SYS_ID") != null
							&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
						System.out.println("Quote Case in RM_Green_File");
						formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", true);// CR
																				// GREEN
																				// FILE
																				// Digitization
																				// Phase
																				// II
																				// (Yogesh)
																				// locked
																				// true
																				// mean
																				// unlock
						formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", true);
						formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "No");
						formObject.setNGEnable("Frame_PaymentGrid", true);
						/**************************************
						 * CR-8001-92286 Omniflow held cover letter CR Start
						 *****************************************************/
						// //System.out.println("Quote Case in
						// GreenFile..CR-8001-92286 Omniflow held cover
						// letter(vaibhav)");
						formObject.setNGEnable("CPI_NETWORK_PARTNER", true);
						formObject.setNGLocked("CPI_NETWORK_PARTNER", true);
						formObject.NGAddItem("CPI_NETWORK_PARTNER", "Yes");
						formObject.NGAddItem("CPI_NETWORK_PARTNER", "No");
						/**************************************
						 * CR-8001-92286 Omniflow held cover letter CR End
						 ******************************************************/

					} /***********************
						 * End PID-CPI process changes
						 ***************************/

				} else if (sActivityName.equalsIgnoreCase("BSG_QC")) {
					System.out.println("Inside EXECUTECOMMAND METHOD Checking For QC WorkStep ");
					System.out.println("Inside Adding value into  CPI_Withdrawn_Reason at " + sActivityName);
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Wrongly in warded");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Withdrawn due to Customer Request");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "System Issue");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Cheque  Bounce");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Re in warded with modified details");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Others");
					formObject.setNGEnable("CPI_Withdrawn_Reason", false);
					/**********************
					 * Start Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 *************************/
					formObject.NGAddItem("CPI_Booking_Type", "FINAL");
					formObject.NGAddItem("CPI_Booking_Type", "PROVISIONAL");
					formObject.NGAddItem("CPI_Booking_Type", "ALTERNATE");
					/**********************
					 * End Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 ***************************/
					/*****************************
					 * CR 28 by satish
					 *****************************/
					formObject.setNGLocked("Corp_Channel_Employee_Name", false);
					formObject.setNGLocked("Corp_Infra_Commission", false);
					formObject.setNGLocked("End_Channel_Employee_Name", false);
					formObject.setNGLocked("End_Infra_Commission", false);
					/***************************
					 * End CR 28 by satish
					 ***************************/
					formObject.setNGLocked("Corp_CUSTOMER_ID", true);// CPI PID
																		// Additional
																		// Points
					/*******************
					 * CR 45 Network Partner
					 ********************/
					formObject.NGAddItem("CPI_ORG_PROPOSAL_FORM_RECEIVED", "Yes");
					formObject.NGAddItem("CPI_ORG_PROPOSAL_FORM_RECEIVED", "No");
					/*****************
					 * end CR 45 Network Partner
					 *******************/
					formObject.setNGLocked("CPI_HYPOTHECATED_TO", false);// Held
																			// Cover
																			// CR
																			// HYPOTHECATED
																			// TO
					// to check product type in BSG_QC executecommand
					// CR-8001-61337 URN Medium Priority

					/**********************
					 * Start Omni flow CPI –Channel Employee id – MH V 1.0
					 **********************/
					if (formObject.getNGValue("CPI_quOTE_SYS_ID") != null
							&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
						//////// //System.out.println("Inside EXECUTECOMMAND
						//////// METHOD Checking For MH For Quote Cases Omni
						//////// flow CPI –Channel Employee id – MH V 1.0:
						//////// ");
						formObject.setNGEnable("CPI_MH", true);
						formObject.setNGLocked("CPI_MH", true);
						formObject.setNGEnable("CPI_Exception_To_MH", false);
						formObject.setNGLocked("CPI_Exception_To_MH", false);
						formObject.setNGEnable("CPI_MH_Interaction_No", false);
						formObject.setNGLocked("CPI_MH_Interaction_No", false);
						//////// //System.out.println("Exiting EXECUTECOMMAND
						//////// METHOD Checking For MH For Quote Cases Omni
						//////// flow CPI –Channel Employee id – MH V 1.0:
						//////// ");

					}
					/**********************
					 * End Omni flow CPI –Channel Employee id – MH V 1.0
					 **********************/

					//////// //System.out.println("Value of End product_type in
					//////// BSG_QC executecommand: " +
					//////// formObject.getNGValue("End_PRODUCT_TYPE"));

					//////// //System.out.println("Value of CPI product_type in
					//////// BSG_QC executecommand: " +
					//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));

				} /*******************
					 * CR 46 CPU DataWashing
					 ********************/
				/***************************
				 * PID-CPI process changes
				 ***************************/
				else if (sActivityName.equalsIgnoreCase("COPS_Cust_Id")
						|| sActivityName.equalsIgnoreCase("PF_PID_CPI_Update")) {
					formObject.setNGLocked("Corp_CUSTOMER_NAME", true);
					formObject.setNGLocked("Corp_CUSTOMER_ID", true);
					formObject.setNGLocked("End_CUSTOMER_NAME", true);
					formObject.setNGLocked("End_CUSTOMER_ID", true);
					formObject.setNGLocked("CPI_CUSTOMER_NAME", true);
					formObject.setNGLocked("CPI_CUSTOMER_ID", true);
					formObject.setNGLocked("Corp_PID_PAYMENT_TYPE", false);
					formObject.setNGLocked("End_PID_PAYMENT_TYPE", false);

					if (sActivityName.equalsIgnoreCase("COPS_Cust_Id")) {
						formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
						formObject.NGAddItem("CPI_Route_to", "RM Clarification");
						System.out.println("Addding Value CPI_Withdrawn_Reason at " + sActivityName);
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Wrongly in warded");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Withdrawn due to Customer Request");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "System Issue");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Cheque  Bounce");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Re in warded with modified details");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Others");
						formObject.setNGEnable("CPI_Withdrawn_Reason", false);

					}

				}
				/***********************
				 * End PID-CPI process changes
				 ***************************/

				/***************************
				 * Vendor login & weather Product
				 ****************************/

				else if (sActivityName.equalsIgnoreCase("Vendor_Assignment")) {
					formObject.NGAddItem("CPI_VENDOR_ASSGN_SEND_TO", "Vendor1");
					formObject.NGAddItem("CPI_VENDOR_ASSGN_SEND_TO", "Vendor2");
					formObject.NGAddItem("CPI_VENDOR_ASSGN_SEND_TO", "UW_DEO");

					formObject.setNGLocked("End_CUSTOMER_NAME", true);
					formObject.setNGLocked("End_CUSTOMER_ID", true);
					formObject.setNGLocked("CPI_CUSTOMER_NAME", true);
					formObject.setNGLocked("CPI_CUSTOMER_ID", true);
				} else if (sActivityName.equalsIgnoreCase("Vendor1") || sActivityName.equalsIgnoreCase("Vendor2")) {
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");

					formObject.setNGLocked("End_CUSTOMER_NAME", true);
					formObject.setNGLocked("End_CUSTOMER_ID", true);
					formObject.setNGLocked("CPI_CUSTOMER_NAME", true);
					formObject.setNGLocked("CPI_CUSTOMER_ID", true);

				}

				/*************************
				 * End Vendor login & weather Product
				 **************************/

				/*************************
				 * CPI PID Additional Points
				 *****************************/
				else if (sActivityName.equalsIgnoreCase("COMPLETE_SYNC")) {
					formObject.setNGLocked("End_CUSTOMER_NAME", true);
					formObject.setNGLocked("End_CUSTOMER_ID", true);
					formObject.setNGLocked("CPI_CUSTOMER_NAME", true);
					formObject.setNGLocked("CPI_CUSTOMER_ID", true);
					formObject.setNGLocked("CPI_POLICY_NO", true);
				}
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				/*
				 * else if(sActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
				 * formObject.setNGVisible("Label130",true);
				 * formObject.setNGVisible("End_DMS_NO",true);
				 * formObject.setNGVisible("Label129",true);
				 * formObject.setNGVisible("CPI_CLIENT_MAIL_RECEIVED_DATE",true)
				 * ; formObject.setSpecificDateFormat(
				 * "CPI_CLIENT_MAIL_RECEIVED_DATE","dd/MM/yyyy");
				 * //formObject.setNGVisible("Frame BSG QC Check Fields",false);
				 * 
				 * }
				 */ /*****************
					 * end CR 46 CPU DataWashing
					 *******************/
				else if (sActivityName.equalsIgnoreCase("UW_DEO")) {
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					// *************************** OTC
					// **************************
					// formObject.NGAddItem("CPI_Route_to","BSG Approver
					// Clarification");
					// *************************** End OTC
					// **************************
					/*
					 * =============================CR 42 Additional UW
					 * worksteps=============================
					 */
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "UW1");
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "UW2");
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "UW3");
					/*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "Corporate UW");
					// ***********************CR
					// 24****************************//
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "BSG Approver");
					// ***********************End CR
					// 24****************************//
					/*
					 * =============================CR 8001-79910 Mapping
					 * Bucket(Yogesh)=============================
					 */
					// //System.out.println("Inside UW_DEO CPI_Rout_to mapping
					// bucket");
					formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
					formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
					/*
					 * ============================= END CR 8001-79910 Mapping
					 * Bucket(Yogesh)=============================
					 */

				} // bhagat CR CPU_HEALTH
				else if (sActivityName.equalsIgnoreCase("CPU_HEALTH")
						|| sActivityName.equalsIgnoreCase("CPU_Approver")) {// CR-OMCPI-1314-05
																			// DataWashing
																			// -
																			// Mail_Management_Extension
					// //System.out.println("Entering executeCommand at checkign
					// form height4: " );
					formObject.setNGFormHeight(2500);// PID_CPI process changes
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					if (sActivityName.equalsIgnoreCase("CPU_Approver")) {
						formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
						formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
					}
					System.out.println("Adding Value CPI_Withdrawn_Reason at " + sActivityName);
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Wrongly in warded");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Withdrawn due to Customer Request");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "System Issue");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Cheque  Bounce");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Re in warded with modified details");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Others");
					formObject.setNGEnable("CPI_Withdrawn_Reason", false);

					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");

					/****
					 * Start CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ******/
					if (sActivityName.equalsIgnoreCase("CPU_HEALTH")) {
						formObject.setNGEnable("CPI_CPU_SEND_TO", false);
						formObject.NGAddItem("CPI_CPU_SEND_TO", "Corporate_UW");
						formObject.NGAddItem("CPI_CPU_SEND_TO", "CPU_Approver");
						/**********************
						 * Start Development in Omniflow CPI Alternate Inwarding
						 * Process 4.0
						 *************************/
						formObject.NGAddItem("CPI_CPU_SEND_TO", "Client_Hold");
						/**********************
						 * End Development in Omniflow CPI Alternate Inwarding
						 * Process 4.0
						 ***************************/
					}
					/****
					 * End CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ********/
					// formObject.setNGEnable("CPI_PH_Print_Option",true);
					/* CR-OMCPI-1314-03 CPU DataWashing Start */
					formObject.NGClear("CPI_CO_INS_ROUTE_TO_BACK");
					formObject.NGAddItem("CPI_CO_INS_ROUTE_TO_BACK", "CPU_Data_Washing");
					/****
					 * Start CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ******/
					if (sActivityName.equalsIgnoreCase("CPU_Approver")) {
						formObject.NGAddItem("CPI_CO_INS_ROUTE_TO_BACK", "CPU_HEALTH");
					}
					/****
					 * End CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ********/
					formObject.setNGListIndex("CPI_CO_INS_ROUTE_TO_BACK", 0);
					/* CR-OMCPI-1314-03 CPU DataWashing End */
				} // end bhagat CR CPU_HEALTH
				/*
				 * =============================CR 42 Additional UW
				 * worksteps=============================
				 */
				else if (sActivityName.equalsIgnoreCase("UW1")) {
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW2"); // added for
																	// CR 42
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW3"); // added for
																	// CR 42
					formObject.NGAddItem("CPI_UW_SEND_TO", "Corporate UW");
					formObject.NGAddItem("CPI_UW_SEND_TO", "Processing Hub");
					formObject.NGAddItem("CPI_UW_SEND_TO", "BSG Approver");
					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				} else if (sActivityName.equalsIgnoreCase("UW2")) {
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW1"); // added for
																	// CR 42
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW3"); // added for
																	// CR 42
					formObject.NGAddItem("CPI_UW_SEND_TO", "Corporate UW");
					formObject.NGAddItem("CPI_UW_SEND_TO", "Processing Hub");
					formObject.NGAddItem("CPI_UW_SEND_TO", "BSG Approver");
					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				} else if (sActivityName.equalsIgnoreCase("UW3")) {
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW1"); // added for
																	// CR 42
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW2"); // added for
																	// CR 42
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "Corporate UW");
					formObject.NGAddItem("CPI_UW_SEND_TO", "Corporate UW");
					formObject.NGAddItem("CPI_UW_SEND_TO", "Processing Hub");
					// ***********************CR
					// 24****************************//
					formObject.NGAddItem("CPI_UW_SEND_TO", "BSG Approver");
					// ***********************End CR
					// 24****************************//
					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
					// ***********************CR
					// 24****************************//
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
					// ***********************End CR
					// 24****************************//

				} /*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */ else if (sActivityName.equalsIgnoreCase("BSG Approver")) {
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "BSG Approver");
					// **********CR 24********************************//
					/*
					 * =============================CR 42 Additional UW
					 * worksteps=============================
					 */
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW1");
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW2");
					formObject.NGAddItem("CPI_UW_SEND_TO", "UW3");
					/*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */
					formObject.NGAddItem("CPI_UW_SEND_TO", "Corporate UW");
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					// *******END CR 24********************************//
					formObject.NGAddItem("CPI_UW_SEND_TO", "Processing Hub");
					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
					/*
					 * =============================CR 42 Additional UW
					 * worksteps=============================
					 */
					formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
					/*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */
					formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
					formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				} else if (sActivityName.equalsIgnoreCase("Corporate_UW")
						|| sActivityName.equalsIgnoreCase("Re-Insurance")) {
					// else if (sActivityName.equalsIgnoreCase("Re-Insurance"))
					// {
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "Corporate UW");
					/*
					 * =============================CR 42 Additional UW
					 * worksteps=============================
					 */
					/*
					 * formObject.NGAddItem("CPI_UW_SEND_TO","UW1");
					 * formObject.NGAddItem("CPI_UW_SEND_TO","UW2");
					 * formObject.NGAddItem("CPI_UW_SEND_TO","UW3");
					 */
					/*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */
					/*
					 * formObject.NGAddItem("CPI_UW_SEND_TO","Corporate UW");
					 * formObject.NGAddItem("CPI_UW_SEND_TO","Processing Hub");
					 */
					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");
					/****
					 * Start CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ******/

					if (sActivityName.equalsIgnoreCase("Corporate_UW")
					// &&
					// formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsemnet")
					) {
						// //System.out.println("Vaibhav Corporate_UW Exception
						// Issue==");
						/*
						 * //////// //System.out.
						 * println("satish : Corporate_UW workstep=="+formObject
						 * .getNGValue("CPI_DATAWASHING_TYPE"));
						 * //formObject.NGAddItem("CPI_Route_to",
						 * "Corporate UW Clarification");
						 * formObject.NGAddItem("CPI_Route_to",
						 * "BSG Clarification");
						 * formObject.NGAddItem("CPI_Route_to",
						 * "RM Clarification");
						 * formObject.NGAddItem("CPI_Route_to",
						 * "CPU_Clarification");
						 */

					} else {
						//////// //System.out.println("satish : Corporate_UW
						//////// workstep
						//////// else=="+formObject.getNGValue("CPI_DATAWASHING_TYPE"));
						// //System.out.println("Vaibhav Corporate_UW Exception
						//////// Issue==");
						formObject.NGAddItem("CPI_Route_to", "RM Clarification");
						formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
						formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
						/*
						 * =============================CR 42 Additional UW
						 * worksteps=============================
						 */
						formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
						formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
						formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
						/*
						 * ===========================End CR 42 Additional UW
						 * worksteps===========================
						 */

						// **********CR 24********************************//
						/*
						 * if (sActivityName.equalsIgnoreCase("Corporate_UW")) {
						 * formObject.NGAddItem("CPI_CORP_UW_SEND_TO",
						 * "BSG Approver");
						 * formObject.setNGListIndex("CPI_CORP_UW_SEND_TO", 0);
						 * if(!formObject.getNGValue("CPI_DATAWASHING_TYPE").
						 * equalsIgnoreCase("Endorsemnet")){
						 * formObject.NGAddItem("CPI_Route_to",
						 * "RI Clarification"); } } else
						 */
						if (sActivityName.equalsIgnoreCase("Re-Insurance")) {
							formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
						}
						formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
					}
					/****
					 * End1314-05 DataWashing - Mail_Management_Exten
					 * CR-OMCPI-sion
					 ********/ // *******END CR
								// 24********************************//
				} else if (sActivityName.equalsIgnoreCase("Processing Hub")
						|| sActivityName.equalsIgnoreCase("PH_Complete") || sActivityName.equalsIgnoreCase("COPS_QC")) // CPI
																														// PID
																														// Additional
																														// Points
				{
					// formObject.setNGFormHeight(1900);//PID_CPI process
					// changes
					formObject.setNGFormHeight(2300);// PID_CPI process changes
					/*
					 * formObject.NGAddItem("CPI_UW_DEO_SEND_TO","UW");
					 * formObject.NGAddItem("CPI_UW_DEO_SEND_TO","Corporate UW"
					 * ); formObject.NGAddItem("CPI_UW_SEND_TO","Corporate UW");
					 * formObject.NGAddItem("CPI_UW_SEND_TO","Processing Hub");
					 */
					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");
					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					formObject.NGAddItem("CPI_PH_SEND_TO", "PH Print");
					formObject.NGAddItem("CPI_PH_SEND_TO", "BSG Dispatch");
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
					// ***********************CR
					// 24****************************//
					// formObject.NGAddItem("CPI_Route_to","BSG Ap
					// Clarification");
					formObject.setNGListIndex("CPI_CORP_UW_SEND_TO", 0);
					// ***********************End CR
					// 24****************************//
					System.out.println("Adding Value CPI_Withdrawn_Reason at " + sActivityName);
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Wrongly in warded");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Withdrawn due to Customer Request");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "System Issue");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Cheque  Bounce");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Re in warded with modified details");
					formObject.NGAddItem("CPI_Withdrawn_Reason", "Others");
					formObject.setNGEnable("CPI_Withdrawn_Reason", false);
				} /**********************
					 * Start Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 *************************/
				else if (sActivityName.equalsIgnoreCase("Proposal_Release")) {
					//////// //System.out.println("Inside ExecuteCommand For
					//////// Proposal_Release Bucket.. ");
					//////// //System.out.println("CPI_UW_SEND_TO : " +
					//////// formObject.getNGValue("CPI_UW_SEND_TO"));
					formObject.NGAddItem("CPI_Booking_Type", "FINAL");
					formObject.NGAddItem("CPI_Booking_Type", "PROVISIONAL");
					formObject.NGAddItem("CPI_Booking_Type", "ALTERNATE");
					formObject.NGAddItem("CPI_UW_SEND_TO", "Processing Hub");
					formObject.setNGListIndex("CPI_UW_SEND_TO", 1);
					//////// //System.out.println("CPI_UW_SEND_TO After Setting
					//////// : " + formObject.getNGValue("CPI_UW_SEND_TO"));

					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");
				} /**********************
					 * End Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 ***************************/
				else if (sActivityName.equalsIgnoreCase("PH_Print")) {
					/*
					 * formObject.NGAddItem("CPI_UW_DEO_SEND_TO","UW");
					 * formObject.NGAddItem("CPI_UW_DEO_SEND_TO","Corporate UW"
					 * ); formObject.NGAddItem("CPI_UW_SEND_TO","Corporate UW");
					 * formObject.NGAddItem("CPI_UW_SEND_TO","Processing Hub");
					 */
					formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
					formObject.NGAddItem("CPI_PH_Print_Option", "No");
				} /*******************
					 * CR 45 Network Partner
					 ********************/
				else if (sActivityName.equalsIgnoreCase("Ins_Org_PF")) {
					formObject.NGAddItem("CPI_ORG_PROPOSAL_FORM_RECEIVED", "Yes");
					formObject.NGAddItem("CPI_ORG_PROPOSAL_FORM_RECEIVED", "No");
					formObject.NGAddItem("CPI_POLICY_PRINT_GIVEN_TO_MO", "Yes");
					formObject.NGAddItem("CPI_POLICY_PRINT_GIVEN_TO_MO", "No");
				} /*****************
					 * end CR 45 Network Partner
					 *******************/
				else if (sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Ap_Clarification")
						|| sActivityName.equalsIgnoreCase("DEO_Clarification")
						|| /*
							 * =============================CR 42 Additional UW
							 * worksteps=============================
							 */ sActivityName.equalsIgnoreCase("UW1_Clarification")
						|| sActivityName.equalsIgnoreCase("UW2_Clarification")
						|| sActivityName.equalsIgnoreCase("UW3_Clarification")
						|| /*
							 * ===========================End CR 42 Additional
							 * UW worksteps===========================
							 */ sActivityName.equalsIgnoreCase("Corp_UWClarification")
						|| sActivityName.equalsIgnoreCase("ProcHubClarification")
						|| sActivityName.equalsIgnoreCase("PHPrintClarification")
						// bhagat CR CPU_HEALTH
						|| sActivityName.equalsIgnoreCase("CPU_Clarification")
						// end bhagat CR CPU_HEALTH)
						|| sActivityName.equalsIgnoreCase(
								"CPUCustClarification") /*
														 * CR 46 CPU DataWashing
														 */
						|| sActivityName.equalsIgnoreCase("Vendor1Clarification")
						|| sActivityName.equalsIgnoreCase("Vendor2Clarification")) { // Vendor
																						// login
																						// &
																						// weather
																						// Product
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "UW");
					formObject.NGAddItem("CPI_UW_SEND_TO", "Processing Hub");

					//////// //System.out.println("sActivityName:" +
					//////// sActivityName);
					// ==================== OTC =============================
					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					/*
					 * if (!formObject.getNGValue("CPI_PRODUCT_TYPE").
					 * equalsIgnoreCase("OTC")) {
					 */// Commenting OTC condition
					formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "Corporate UW");
					formObject.NGAddItem("CPI_UW_SEND_TO", "Corporate UW");
					formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
					// }//Commenting OTC condition
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
					// ==================== End OTC
					// =============================
					/*******************
					 * CR 45 Network Partner
					 ********************/
					if (sActivityName.equalsIgnoreCase("RM_Clarification")) {
						formObject.NGAddItem("CPI_NETWORK_PARTNER", "Yes");
						formObject.NGAddItem("CPI_NETWORK_PARTNER", "No");
					}
					if (sActivityName.equalsIgnoreCase("BSG_Clarification")) {
						formObject.NGAddItem("CPI_ORG_PROPOSAL_FORM_RECEIVED", "Yes");
						formObject.NGAddItem("CPI_ORG_PROPOSAL_FORM_RECEIVED", "No");
					}
					/*****************
					 * end CR 45 Network Partner
					 *******************/
					// Added by Dinesh Kumar on 16082010 for CR2
					if (sActivityName.equalsIgnoreCase("ProcHubClarification")
							|| sActivityName.equalsIgnoreCase("BSG_Clarification")// bhagat
																					// CR
																					// CPU_HEALTH
							|| sActivityName.equalsIgnoreCase("CPU_Clarification")// end
																					// bhagat
																					// CR
																					// CPU_HEALTH
							|| sActivityName.equalsIgnoreCase(
									"CPUCustClarification") /*
															 * CR 46 CPU
															 * DataWashing
															 */) {
						System.out.println("Adding Value CPI_Withdrawn_Reason at " + sActivityName);
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Wrongly in warded");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Withdrawn due to Customer Request");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "System Issue");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Cheque  Bounce");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Re in warded with modified details");
						formObject.NGAddItem("CPI_Withdrawn_Reason", "Others");
						formObject.setNGEnable("CPI_Withdrawn_Reason", false);
					}
				}

				/**********************
				 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
				 ***********************/

				//////// //System.out.println("In ExecuteCommand Method Checking
				//////// PAN NO For All Worksteps CR-8001-59268");
				formObject.setNGLocked("CPI_PAN", false);

				/**********************
				 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
				 *************************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/

				if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
						|| sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification"))
						&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
					System.out.println(
							"Inside GreenFile QMS And Datawashing onload : CR-8127-95325 : GST-Omniflow development");
					formObject.setNGLocked("CPI_GST_REGISTERED", true);
					formObject.setNGEnable("CPI_GST_REGISTERED", true);
					if (formObject.getNGValue("CPI_GST_REGISTERED").equalsIgnoreCase("Yes")) {
						System.out.println(
								"Inside IF_IF ExecuteCommand Enabling GST Buttons1 : CR-8127-95325 : GST-Omniflow development");
						formObject.setNGEnable("Btn_AddGst", true);
						formObject.setNGEnable("Btn_ViewGst", true);
						/**********
						 * Start CR-8001-97828_BRS_GST_OmniflowCPI
						 **********/
						formObject.setNGEnable("CPI_GST_INVOICE_OPTION", true);
						formObject.setNGLocked("CPI_GST_INVOICE_OPTION", true);
						/**********
						 * End CR-8001-97828_BRS_GST_OmniflowCPI
						 **********/
					} else {
						System.out.println(
								"Inside IF_Else ExecuteCommand Disabling GST Buttons onload1 CR-8127-95325 : GST-Omniflow development");
						System.out.println(
								"Inside IF_Else ExecuteCommand Disabling GST Buttons onload1 CR-8127-95325 : GST-Omniflow development");
						formObject.setNGEnable("Btn_AddGst", false);
						formObject.setNGEnable("Btn_ViewGst", true);
						/**********
						 * Start CR-8001-97828_BRS_GST_OmniflowCPI
						 **********/
						formObject.setNGValue("CPI_GST_REGISTERED", "--Select--");
						formObject.setNGEnable("CPI_GST_INVOICE_OPTION", false);
						formObject.setNGLocked("CPI_GST_INVOICE_OPTION", false);
						/**********
						 * End CR-8001-97828_BRS_GST_OmniflowCPI
						 **********/
					}
				} else {
					System.out.println(
							"Inside Esle only ViewGSt is Enabled ExecuteCommand : CR-8127-95325 : GST-Omniflow development");
					formObject.setNGLocked("CPI_GST_REGISTERED", false);
					formObject.setNGEnable("CPI_GST_REGISTERED", false);
					/**********
					 * Start CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					formObject.setNGValue("CPI_GST_REGISTERED", "--Select--");
					formObject.setNGEnable("CPI_GST_INVOICE_OPTION", false);
					formObject.setNGLocked("CPI_GST_INVOICE_OPTION", false);
					/**********
					 * End CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					formObject.setNGEnable("Btn_AddGst", false);
					formObject.setNGEnable("Btn_ViewGst", true);

				}
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				/*****
				 * Start CR-8001-71104_CR-8119-87478_Auto CPI generation
				 * iPartner
				 *****/
				if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
						|| sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification"))
						&& (formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))
						&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
						&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))
						&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
					formObject.setNGEnable("CPI_IPARTNER_POLICY_NO", true);
					formObject.setNGLocked("CPI_IPARTNER_POLICY_NO", true);
					// System.out.println("Inside executeCommand METHOD Auto CPI
					// generation iPartner");
					if (sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
							|| sActivityName.equalsIgnoreCase("RM_Clarification")
							|| sActivityName.equalsIgnoreCase("BSG_Clarification")) {
						// System.out.println("Inside IF executeCommand METHOD
						// Auto CPI generation iPartner
						// "+formObject.getNGValue("CPI_Process_Type"));
						formObject.setNGEnable("CPI_SECONDARY_VERTICAL", false);
						formObject.setNGLocked("CPI_SECONDARY_VERTICAL", false);
						formObject.setNGEnable("CPI_SECONDARY_SUB_VERTICAL", false);
						formObject.setNGLocked("CPI_SECONDARY_SUB_VERTICAL", false);
						System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + sActivityName);
						formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "No");
						formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", false);
						formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
						formObject.setNGEnable("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGEnable("CPI_IAS_ID", false);
						formObject.setNGLocked("CPI_IAS_ID", false);
						formObject.setNGEnable("CPI_DATA_VALIDATION_ID", false);
						formObject.setNGLocked("CPI_DATA_VALIDATION_ID", false);
						formObject.setNGEnable("CPI_VAS", false);
						formObject.setNGLocked("CPI_VAS", false);
						formObject.setNGEnable("CPI_REFUND_ID", false);
						formObject.setNGLocked("CPI_REFUND_ID", false);
						formObject.setNGEnable("CPI_OTHER_PIDNO", false);
						formObject.setNGLocked("CPI_OTHER_PIDNO", false);
						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Issuance")) {
							// System.out.println("Inside if Corporate Policy
							// Insurance Auto CPI generation
							// iPartner"+formObject.getNGValue("CPI_Process_Type"));
							// Default Value and freez
							// System.out.println("//Default Value and freez");
							formObject.setNGValue("CPI_MH", "No");
							formObject.setNGLocked("CPI_MH", false);
							formObject.setNGEnable("CPI_MH", false);
							formObject.setNGValue("CPI_EXCEPTION_TO_MH", "I Partner");
							formObject.setNGLocked("CPI_EXCEPTION_TO_MH", false);
							formObject.setNGEnable("CPI_EXCEPTION_TO_MH", false);
							formObject.setNGValue("CPI_NETWORK_PARTNER", "No");
							formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
							formObject.setNGEnable("CPI_NETWORK_PARTNER", false);
							formObject.setNGValue("CPI_RI_INWARD", "No");
							formObject.setNGLocked("CPI_RI_INWARD", false);
							formObject.setNGEnable("CPI_RI_INWARD", false);
							formObject.setNGValue("CPI_PRODUCT_TYPE", "iPartner");
							formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
							formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
							formObject.setNGValue("CPI_BOOKING_TYPE", "FINAL");
							formObject.setNGLocked("CPI_BOOKING_TYPE", false);
							formObject.setNGEnable("CPI_BOOKING_TYPE", false);
							// Enable

							// Disable
							// System.out.println("//Disable Value and freez");
							formObject.setNGEnable("CPI_SECONDARY_MO_ID", false);
							formObject.setNGLocked("CPI_SECONDARY_MO_ID", false);
							formObject.setNGEnable("CPI_SECONDARY_MO_NAME", false);
							formObject.setNGLocked("CPI_SECONDARY_MO_NAME", false);
							formObject.setNGEnable("CPI_quOTE_SYS_ID", false);
							formObject.setNGLocked("CPI_quOTE_SYS_ID", false);
							formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME", false);
							formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
							formObject.setNGEnable("CPI_MH_INTERACTION_NO", false);
							formObject.setNGLocked("CPI_MH_INTERACTION_NO", false);
							formObject.setNGEnable("CPI_TRANSACTION_ID", false);
							formObject.setNGLocked("CPI_TRANSACTION_ID", false);
							formObject.setNGEnable("CPI_CDBG_NO", false);
							formObject.setNGLocked("CPI_CDBG_NO", false);
						} else {
							if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
								// System.out.println("Inside else Endorsement
								// Auto CPI generation iPartner");
								// Default Value and freez
								// System.out.println("//Default Value and
								// freez");
								formObject.setNGValue("CPI_PAS", "Pathfinder");
								formObject.setNGLocked("CPI_PAS", false);
								formObject.setNGEnable("CPI_PAS", false);
								formObject.setNGValue("CPI_TYPE_OF_ENDORSEMENT", "External endorsement");
								formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", false);
								formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", false);
								// Enable

								// Disable
								// System.out.println("//Disable Value and
								// freez");
								formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
								formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
								formObject.setNGEnable("CPI_CLAIM_NO", false);
								formObject.setNGLocked("CPI_CLAIM_NO", false);
								formObject.setNGEnable("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
								formObject.setNGLocked("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
							}
						}
					}
					if (sActivityName.equalsIgnoreCase("BSG_QC")) {
						// System.out.println("BSG_QC Auto CPI generation
						// iPartner.....");
						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Issuance")) {
							formObject.setNGEnable("Corp_SECONDARY_VERTICAL", false);
							formObject.setNGLocked("Corp_SECONDARY_VERTICAL", false);
							formObject.setNGEnable("Corp_SECONDARY_SUB_VERTICAL", false);
							formObject.setNGLocked("Corp_SECONDARY_SUB_VERTICAL", false);
							formObject.setNGEnable("Corp_PID_PAYMENT_TYPE", false);
							formObject.setNGLocked("Corp_PID_PAYMENT_TYPE", false);
							formObject.setNGEnable("Corp_PRIVILEGE_BANKER_CODE", false);
							formObject.setNGLocked("Corp_PRIVILEGE_BANKER_CODE", false);
							formObject.setNGEnable("Corp_IAS_ID", false);
							formObject.setNGLocked("Corp_IAS_ID", false);
							formObject.setNGEnable("Corp_DATA_VALIDATION_ID", false);
							formObject.setNGLocked("Corp_DATA_VALIDATION_ID", false);
							formObject.setNGEnable("Corp_OTHER_PIDNO", false);
							formObject.setNGLocked("Corp_OTHER_PIDNO", false);
						} else {
							if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
								formObject.setNGEnable("End_SECONDARY_VERTICAL", false);
								formObject.setNGLocked("End_SECONDARY_VERTICAL", false);
								formObject.setNGEnable("End_SECONDARY_SUB_VERTICAL", false);
								formObject.setNGLocked("End_SECONDARY_SUB_VERTICAL", false);
								formObject.setNGEnable("End_PID_PAYMENT_TYPE", false);
								formObject.setNGLocked("End_PID_PAYMENT_TYPE", false);
								formObject.setNGEnable("End_PRIVILEGE_BANKER_CODE", false);
								formObject.setNGLocked("End_PRIVILEGE_BANKER_CODE", false);
								formObject.setNGEnable("End_IAS_ID", false);
								formObject.setNGLocked("End_IAS_ID", false);
								formObject.setNGEnable("End_DATA_VALIDATION_ID", false);
								formObject.setNGLocked("End_DATA_VALIDATION_ID", false);
								formObject.setNGEnable("End_OTHER_PIDNO", false);
								formObject.setNGLocked("End_OTHER_PIDNO", false);
							}
						}
					}
				} else {
					formObject.setNGEnable("CPI_IPARTNER_POLICY_NO", false);
					formObject.setNGLocked("CPI_IPARTNER_POLICY_NO", false);
				}
				/*****
				 * End CR-8001-71104_CR-8119-87478_Auto CPI generation iPartner
				 *****/

				/******
				 * Start CR GREEN FILE Digitization Phase II (Yogesh)
				 ******/
				if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
						|| sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification"))
						&& !(formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))
						&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
						&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
					// System.out.println("Inside IF executeCommand METHOD CR
					// GREEN FILE Digitization Phase II (Yogesh)
					// "+formObject.getNGValue("CPI_Process_Type"));
					formObject.setNGEnable("CPI_TRANSACTION_TYPE", true);
					formObject.setNGLocked("CPI_TRANSACTION_TYPE", true);
					if (sActivityName.equalsIgnoreCase("RM_Green_File")
							|| sActivityName.equalsIgnoreCase("Endorsement")) {
						// System.out.println("enabling executeCommand
						// CPI_RMT_FLAG RM_Green_File Endorsement");
						formObject.setNGEnable("CPI_RMT_FLAG", true);
						formObject.setNGLocked("CPI_RMT_FLAG", true);
						formObject.setNGEnable("CPI_PERCENTAGE_OF_COMMISION", true);
						formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", true);
						formObject.setNGEnable("CPI_TOTAL_PREMIUM", true);
						formObject.setNGLocked("CPI_TOTAL_PREMIUM", true);
					} else if (sActivityName.equalsIgnoreCase("BSG_QC")
							|| sActivityName.equalsIgnoreCase("RM_Clarification")
							|| sActivityName.equalsIgnoreCase("BSG_Clarification")) {
						// System.out.println("Inside elseIF executeCommand
						// METHOD for policy CR GREEN FILE Digitization Phase II
						// (Yogesh)
						// "+formObject.getNGValue("CPI_Process_Type"));

						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
							// System.out.println("enabling executeCommand
							// Corporate Policy Insurance");
							formObject.setNGEnable("CPI_PRODUCT_TYPE", true);
							formObject.setNGLocked("CPI_PRODUCT_TYPE", true);
							formObject.setNGEnable("CPI_PRODUCT_NAME", true);
							formObject.setNGLocked("CPI_PRODUCT_NAME", true);
							formObject.setNGEnable("CORP_RMT_FLAG", true);
							formObject.setNGLocked("CORP_RMT_FLAG", true);
							formObject.setNGEnable("CORP_PERCENTAGE_OF_COMMISION", true);
							formObject.setNGLocked("CORP_PERCENTAGE_OF_COMMISION", true);
							formObject.setNGEnable("CORP_TOTAL_PREMIUM", true);
							formObject.setNGLocked("CORP_TOTAL_PREMIUM", true);
							if (formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("No")) {
								formObject.setNGEnable("CPI_TOTAL_PREMIUM", true);
								formObject.setNGLocked("CPI_TOTAL_PREMIUM", true);
							}
						} else if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
							// System.out.println("enabling executeCommand
							// Endorsement");
							formObject.setNGEnable("End_RMT_FLAG", true);
							formObject.setNGLocked("End_RMT_FLAG", true);
							formObject.setNGEnable("End_TOTAL_PREMIUM", true);
							formObject.setNGLocked("End_TOTAL_PREMIUM", true);
							formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", true);
							formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", true);
							formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
							formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
							formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", true);
							formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", true);
							formObject.setNGEnable("CPI_ENDORSEMENT_EFFECTIVE_DATE", true);
							formObject.setNGLocked("CPI_ENDORSEMENT_EFFECTIVE_DATE", true);
							formObject.setNGEnable("CPI_ENDORSEMENT_NO", true);
							formObject.setNGLocked("CPI_ENDORSEMENT_NO", true);
							if (formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("No")) {
								formObject.setNGEnable("CPI_TOTAL_PREMIUM", true);
								formObject.setNGLocked("CPI_TOTAL_PREMIUM", true);
							}
							formObject.setNGEnable("End_PERCENTAGE_OF_COMMISION", true);
							formObject.setNGLocked("End_PERCENTAGE_OF_COMMISION", true);
						} else {
							// System.out.println("disabling executeCommand");
							formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", false);
							formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", false);
							formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
							formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
							formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
							formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
							formObject.setNGEnable("CPI_ENDORSEMENT_EFFECTIVE_DATE", false);
							formObject.setNGLocked("CPI_ENDORSEMENT_EFFECTIVE_DATE", false);
							formObject.setNGEnable("CPI_TOTAL_PREMIUM", false);
							formObject.setNGLocked("CPI_TOTAL_PREMIUM", false);
							formObject.setNGEnable("CPI_ENDORSEMENT_NO", false);
							formObject.setNGLocked("CPI_ENDORSEMENT_NO", false);
							formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
							formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
							formObject.setNGEnable("CPI_PRODUCT_NAME", false);
							formObject.setNGLocked("CPI_PRODUCT_NAME", false);
							formObject.setNGEnable("End_TOTAL_PREMIUM", false);
							formObject.setNGLocked("End_TOTAL_PREMIUM", false);
							formObject.setNGEnable("End_RMT_FLAG", false);
							formObject.setNGLocked("End_RMT_FLAG", false);
							formObject.setNGEnable("End_PERCENTAGE_OF_COMMISION", false);
							formObject.setNGLocked("End_PERCENTAGE_OF_COMMISION", false);
							formObject.setNGEnable("CORP_RMT_FLAG", false);
							formObject.setNGLocked("CORP_RMT_FLAG", false);
							formObject.setNGEnable("CORP_TOTAL_PREMIUM", false);
							formObject.setNGLocked("CORP_TOTAL_PREMIUM", false);
							formObject.setNGEnable("CORP_PERCENTAGE_OF_COMMISION", false);
							formObject.setNGLocked("CORP_PERCENTAGE_OF_COMMISION", false);
						}
					} else {
						// System.out.println("in side Else CR GREEN FILE
						// Digitization Phase II (Yogesh) disable control");
						formObject.setNGEnable("CPI_TRANSACTION_TYPE", false);
						formObject.setNGLocked("CPI_TRANSACTION_TYPE", false);
						formObject.setNGEnable("CPI_RMT_FLAG", false);
						formObject.setNGLocked("CPI_RMT_FLAG", false);
						formObject.setNGEnable("CPI_PERCENTAGE_OF_COMMISION", false);
						formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", false);
					}
				}
				/****** End CR GREEN FILE Digitization Phase II (Yogesh) ******/
			} // end if !Work Introduction1
		}
		//////// //System.out.println("Exiting executeCommand at : " +
		//////// dateFormat1.format(new Date()));
		return "";
	}

	public void executeEvent(String strInputXml) {
		//////// //System.out.println("Entering executeEvent at : " +
		//////// dateFormat1.format(new Date()));
		try {
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
		}
		//////// //System.out.println("Exiting executeEvent at : " +
		//////// dateFormat1.format(new Date()));
	}

	public String fieldValueBagSet(String sActivityName) {
		System.out.println("Entering fieldValueBagSet at : " + dateFormat1.format(new Date()));
		////////// //System.out.println("CPI_PRODUCT_TYPE
		////////// 1:"+formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("OTC"));
		try {
			int MainFrameHg = 0;
			//////// //System.out.println("CPI_CPU_HEALTH_STATUS : " +
			//////// formObject.getNGValue("CPI_CPU_HEALTH_STATUS"));
			//////// //System.out.println("sActivityName " + sActivityName);
			// bhagat CR CPU_HEALTH
			if (!sActivityName.equalsIgnoreCase("Work Introduction1")
					&& !sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")) // CR-8001-70893
																				// Marine
																				// CR
			{

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					formObject.setNGValue("txtVAS", formObject.getNGValue("CPI_VAS"));
					formObject.setNGValue("txtRefundID", formObject.getNGValue("CPI_REFUND_ID"));
					formObject.setNGLocked("CPI_HYPOTHECATED_TO", false); // Held
																			// Cover
																			// CR
																			// HYPOTHECATED
																			// TO
				}
				formObject.setNGEnable("CPI_VAS", false);
				formObject.setNGLocked("CPI_VAS", false);
				formObject.setNGEnable("txtVAS", true);
				formObject.setNGLocked("txtVAS", false);
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				formObject.setNGLocked("CPI_AGENT_CODE", false);
				formObject.setNGEnable("CPI_AGENT_CODE", false);
				formObject.setNGLocked("Corp_AGENT_CODE", false);
				formObject.setNGEnable("Corp_AGENT_CODE", true);
				formObject.setNGLocked("End_AGENT_CODE", false);
				formObject.setNGEnable("End_AGENT_CODE", true);
				// sadik
				// //System.out.println("Sadik CR9 CPI_MAIL_TO_CLIENT field
				// disable for cpuhealth bucket");
				formObject.setNGLocked("CPI_MAIL_TO_CLIENT", false);
				formObject.setNGEnable("CPI_MAIL_TO_CLIENT", true);
				// end
				lockPaymentModes();
				/*************************
				 * End CPI PID Additional Points
				 **************************/
			}
			// end bhagat CR CPU_HEALTH
			// satish
			if (sActivityName.equalsIgnoreCase("Co_Insurance_RM")) {
				//////// //System.out.println("out##");
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					//////// //System.out.println("CPI_Process_Type : " +
					//////// formObject.getNGValue("CPI_Process_Type"));
					formObject.NGAddItem("CPI_ROUTE_TO", "Endorsement");
				} else if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("CPI_Process_Type : " +
					//////// formObject.getNGValue("CPI_Process_Type"));
					formObject.NGAddItem("CPI_ROUTE_TO", "RM Green File");
				} else {
					//////// //System.out.println("CPI_Process_Type : " +
					//////// formObject.getNGValue("CPI_Process_Type"));
					formObject.NGAddItem("CPI_ROUTE_TO", "Endorsement");
					formObject.NGAddItem("CPI_ROUTE_TO", "RM Green File");
				}
			}
			// satish
			if (!(sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")
					|| sActivityName.equalsIgnoreCase("COPS_Policy_Endr")
					|| sActivityName.equalsIgnoreCase("COPS_Policy_Print"))) // CR-8001-70893
																				// Marine
																				// CR
			{
				Frames.add("Frame Main");
				Frames.add("Frame Endorsement");
				// //System.out.println("fieldValueBagSet:1
				// "+formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE"));
				// //System.out.println("fieldValueBagSet:2
				// "+formObject.getNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE"));
			} // CR-8001-70893 Marine CR

			/******************* CR 46 CPU DataWashing ********************/
			if (!sActivityName.equalsIgnoreCase("Work Introduction1")
					&& (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
							|| (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
									&& !sActivityName.equalsIgnoreCase("CPUCustClarification")
									&& !sActivityName.equalsIgnoreCase("RM_Clarification")))
					&& !(sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")
							|| sActivityName.equalsIgnoreCase("COPS_Policy_Endr")
							|| sActivityName.equalsIgnoreCase("COPS_Policy_Print"))) // for
																						// CPU_Assignment,CPU_Data_Washing,CPUCustClarification
																						// cases
			{
				Frames.add("Frame BSG QC Check Fields");
			}
			// Frames.add("Frame_PaymentGrid");
			/***************** end CR 46 CPU DataWashing *******************/
			FramesAndHeight.put("Frame Main", "100");
			// FramesAndHeight.put("Frame Endorsement","690"); bhagat
			// FramesAndHeight.put("Frame Endorsement","750"); CR 38 by satish
			// FramesAndHeight.put("Frame Endorsement", "820");//PID_CPI process
			// changes
			FramesAndHeight.put("Frame Endorsement", "900");// PID_CPI process
															// changes
			// FramesAndHeight.put("Frame Corporate Policy Issuance","695");
			// bhagat
			/******************* CR 45 Network Partner ********************/
			// FramesAndHeight.put("Frame Corporate Policy Issuance","730");
			// FramesAndHeight.put("Frame Corporate Policy Issuance",
			// "770");//PID_CPI process changes
			// FramesAndHeight.put("Frame Corporate Policy Issuance",
			// "915");//PID_CPI process changes //850+65=915 CR 8001-61339 URN
			// Medium priority
			FramesAndHeight.put("Frame Corporate Policy Issuance", "1000"); // After
																			// Adding
																			// PAN
																			// NO
																			// Field
																			// CPI-
																			// CR-8001-59268(FlapPrint)
																			// CR
			// FramesAndHeight.put("Frame BSG QC Check Fields","100");
			if (sActivityName.equalsIgnoreCase("Ins_Org_PF") || (sActivityName.equalsIgnoreCase("BSG Dispatch")
					&& formObject.getNGValue("CPI_PREV_WRK_STEP").equalsIgnoreCase("Ins_Org_PF"))) {
				FramesAndHeight.put("Frame BSG QC Check Fields", "150");
			} else {
				FramesAndHeight.put("Frame BSG QC Check Fields", "110");
			}
			/***************** end CR 45 Network Partner *******************/
			FramesAndHeight.put("Frame_Withdrawal", "100");
			FramesAndHeight.put("Frame_Route_To", "100");
			FramesAndHeight.put("Frame_SPNAMES", "150"); // PID_CPI process
															// changes
			FramesAndHeight.put("Frame LEADER URN NUMBER", "90"); // Quote
																	// BSG_QC
																	// URN
																	// generate
																	// Suraj
			FramesAndHeight.put("Frame_PaymentGrid", "180"); // PID_CPI process
																// changes
			FramesAndHeight.put("Route_back_to_DW_frame",
					"85");/* CR-OMCPI-1314-03 CPU DataWashing */
			FramesAndHeight.put("BSG Datawashing Email frame",
					"85");/* CR-OMCPI-1314-03 CPU DataWashing */
			FramesAndHeight.put("Frame_DocUpload", "80");// CR-OMCPI-1314-05
															// DataWashing -
															// Mail_Management_Extension
			FramesAndHeight.put("Frame_UW_DEO_Fields", "100");
			FramesAndHeight.put("Frame_Vendor_Assgn_Fields", "90");// Vendor
																	// login &
																	// weather
																	// Product
			FramesAndHeight.put("Frame_CPU_HealthFields", "80");
			FramesAndHeight.put("Frame UW Data Entry QC Fields", "100");
			FramesAndHeight.put("Frame Processing Hub Fields", "100");
			FramesAndHeight.put("Frame Remarks", "100");
			FramesAndHeight.put("Frame IT_Comments", "75");// CR 45 Additional
															// changes to
															// capture Rejected
															// to IT comments
			FramesAndHeight.put("Frame Corporate UW Fields", "100");

			/**************************************
			 * CR-8127-95325 : GST-Omniflow development Start
			 *****************************************************/
			FramesAndHeight.put("Frame_GST", "80");
			/**************************************
			 * CR-8127-95325 : GST-Omniflow development End
			 ******************************************************/
			/**** Start CR-8001-70893 Marine CR *******************************/
			FramesAndHeight.put("Frame_Cpi_Endorsement", "910");
			FramesAndHeight.put("Frame_Endorsement_Fields", "210");
			FramesAndHeight.put("Frame_Corporate_Fields", "310");
			/**** ENd CR-8001-70893 Marine CR *********************************/
			// *************************** OTC **************************
			/*********************
			 * CR 24 Commented by satish**************************** if
			 * (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("OTC")
			 * && !(sActivityName.equalsIgnoreCase("Endorsement") ||
			 * sActivityName.equalsIgnoreCase("RM_Green_File"))) { ////////
			 * //System.out.println("Set For OTC: ");
			 * formObject.setNGValue("Label6", "BSG Approver Field");
			 * formObject.setNGValue("Label10", "BSG Approver Send To");
			 * formObject.setNGEnable("CPI_UW_DEO_SEND_TO",false);
			 * //formObject.setNGListIndex("CPI_UW_SEND_TO",1);
			 * /******************CR 24*************************
			 * formObject.setNGEnable("CPI_UW_SEND_TO",true);
			 * /******************End CR 24************************ }
			 * /*********************End CR 24 Commented by satish
			 *****************************/
			// ***************************End OTC **************************
			/**** Start CR-8001-70893 Marine CR *******************************/
			if (sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")) {
				// //System.out.println("fieldbag set called
				// COPS_Cpu_Assignment: ");
				/*
				 * Frames.add("Frame_Generic_Assignment");
				 * Frames.add("Frame_Cpi_Endorsement");
				 * Frames.add("Frame_PaymentGrid");
				 * Frames.add("Frame_Withdrawal");
				 * Frames.add("BSG Datawashing Email frame");
				 * Frames.add("Frame Remarks");
				 */

				formObject.setNGVisible("Frame_Cpi_Endorsement", true);
				formObject.setNGVisible("Frame_Endorsement_Fields", true);
				formObject.setNGVisible("Frame_Corporate_Fields", true);
				formObject.setNGVisible("Frame_Generic_Assignment", true);
				formObject.setNGVisible("Frame_PaymentGrid", true);
				formObject.setNGVisible("BSG Datawashing Email frame", true);
				formObject.setNGVisible("Frame Remarks", true);
				formObject.setNGVisible("Frame_Withdrawal", true);

				// Frames.add("Frame Remarks");

				// //System.out.println("fieldbag set called
				// COPS_Cpu_Assignment: ");
				formObject.setNGEnable("Frame_Cpi_Endorsement", false);
				formObject.setNGLocked("Frame_Cpi_Endorsement", false);
				formObject.setNGEnable("Frame_Endorsement_Fields", false);
				formObject.setNGLocked("Frame_Cpi_Endorsement", false);
				formObject.setNGEnable("Frame_Corporate_Fields", false);
				// //System.out.println("PaymentGride Disable At 1254");
				formObject.setNGEnable("Frame_PaymentGrid", false);
				formObject.setNGControlTop("Frame_Generic_Assignment", 83);// 83+90
				formObject.setNGControlTop("Frame_Cpi_Endorsement", 173);// 173+910
				formObject.setNGControlTop("Frame_Endorsement_Fields", 1083);// 1083+210
				formObject.setNGControlTop("Frame_Corporate_Fields", 1293); // 1293+310
				formObject.setNGControlTop("Frame_PaymentGrid", 1603);// 1603+180
				formObject.setNGControlTop("BSG Datawashing Email frame", 1783);// 1783+90
				formObject.setNGControlTop("Frame_Withdrawal", 1873);// 1873+100
				formObject.setNGControlTop("Frame Remarks", 1973);// 1973+100

				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				formObject.setNGControlTop("Frame_GST", 2053); // 1973+80
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				// //System.out.println("end fieldbag set called
				// COPS_Cpu_Assignment: ");
				formObject.setNGValue("CPI_product_category",
						"Corporate_Endorsement"); /**
													 * CR-8001-85348 : Corporate
													 * product endorsement
													 * (Marine Modification) :
													 * Vaibhav
													 **/
				formObject.setNGValue("CPI_VAS", "No");
				formObject.setNGLocked("CPI_VAS", false);

				formObject.setNGLocked("CPI_process_type", true);
				formObject.setNGEnable("CPI_process_type", true);

				formObject.setNGVisible("Btn_MailCompose", false);

				// //System.out.println("end COPS_Cpu_Assignment: ");

				String prevWrkStep = formObject.getNGValue("CPI_PREV_WRK_STEP");
				if (sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment") && (prevWrkStep == null
						|| prevWrkStep.equals("") || prevWrkStep.equals("Work Introduction1"))) {
					dwDefualtSet(sActivityName);
				}

			}
			if (sActivityName.equalsIgnoreCase("COPS_Policy_Endr")
					|| sActivityName.equalsIgnoreCase("COPS_Policy_Print")) {
				// //System.out.println("Inside the fieldValueBagSet Yogesh:");
				int height = 0;
				String prevWrkStep = formObject.getNGValue("CPI_prev_wrk_step");
				formObject.setNGVisible("Frame BSG QC Check Fields", false);
				formObject.setNGVisible("Frame Corporate Policy Issuance", false);

				formObject.setNGVisible("Frame_Cpi_Endorsement", true);
				formObject.setNGVisible("Frame_Endorsement_Fields", true);
				formObject.setNGVisible("Frame_Corporate_Fields", true);
				formObject.setNGVisible("Frame_Generic_Assignment", true);
				// //System.out.println("PaymentFrid Visible at 1312");
				formObject.setNGVisible("Frame_PaymentGrid", true);
				formObject.setNGVisible("BSG Datawashing Email frame", true);
				formObject.setNGVisible("Frame Remarks", true);
				formObject.setNGVisible("Frame_Withdrawal", true);
				formObject.setNGVisible("Frame_Generic_SendTo", true);
				// formObject.setNGVisible("Route_back_to_DW_frame",true);
				formObject.setNGVisible("Frame_Route_Back_Assignment", true);
				if (sActivityName.equalsIgnoreCase("COPS_Policy_Endr")
						|| sActivityName.equalsIgnoreCase("COPS_Policy_Print")) {
					formObject.setNGVisible("Frame_Generic_SendTo", true);
					// //System.out.println("fieldValueBagSet:5
					// "+formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE"));
					// //System.out.println("fieldValueBagSet:6
					// "+formObject.getNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE"));
				}
				formObject.setNGVisible("Frame_Route_To", true);
				formObject.setNGVisible("Frame IT_Comments", true);
				// //System.out.println("fieldbag set called
				// COPS_Cpu_Assignment: ");
				formObject.setNGEnable("Frame_Endorsement_Fields", true);
				formObject.setNGEnable("Frame_Cpi_Endorsement", true);
				formObject.setNGEnable("Frame_Corporate_Fields", true);
				formObject.setNGEnable("Frame_Route_Back_Assignment", true);
				formObject.setNGEnable("Frame_Route_To", true);
				formObject.setNGEnable("Frame_Generic_SendTo", true);
				formObject.setNGEnable("CPI_ROUTE_TO", false);
				// //System.out.println("PaymentGride Enable at 1334:");
				formObject.setNGEnable("Frame_PaymentGrid", true);
				/************** Start Yogesh Marine ******************/
				if (sActivityName.equalsIgnoreCase("COPS_Policy_Print")) {
					// formObject.setNGEnable("Frame_Corporate_Fields",false);
					formObject.setNGVisible("Frame_Generic_SendTo", true);
					formObject.setNGEnable("Frame_Generic_SendTo", false);
					formObject.setNGEnable("Frame_Endorsement_Fields", false);
					formObject.setNGEnable("Frame_Cpi_Endorsement", false);
					formObject.setNGEnable("Frame_PaymentGrid", false);
					formObject.setNGEnable("Frame_Route_Back_Assignment", false);
					formObject.setNGEnable("CPI_SAMADHAN_INTERACTION_ID", true);
					formObject.setNGLocked("CPI_SAMADHAN_INTERACTION_ID", true);
					// //System.out.println("fieldValueBagSet:7
					// "+formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE"));
					// //System.out.println("fieldValueBagSet:8
					// "+formObject.getNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE"));
				}
				formObject.setNGEnable("CPI_PF_PAYMENT_ID_NO", true);
				formObject.setNGLocked("CPI_PF_PAYMENT_ID_NO", true);
				formObject.setNGEnable("CPI_PF_PAYMENT_ID_NO2", true);
				formObject.setNGLocked("CPI_PF_PAYMENT_ID_NO2", true);
				formObject.setNGEnable("CPI_PF_PAYMENT_ID_NO3", true);
				formObject.setNGLocked("CPI_PF_PAYMENT_ID_NO3", true);
				formObject.setNGEnable("CPI_MODE_OF_PAYMENT", true);
				formObject.setNGLocked("CPI_MODE_OF_PAYMENT", false);
				formObject.setNGEnable("CPI_MODE_OF_PAYMENT2", true);
				formObject.setNGLocked("CPI_MODE_OF_PAYMENT2", false);
				formObject.setNGEnable("CPI_MODE_OF_PAYMENT3", true);
				formObject.setNGLocked("CPI_MODE_OF_PAYMENT3", false);
				formObject.setNGEnable("CPI_INST_NO_CD_NO_DEP_SLIP_NO", true);
				formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO", true);
				formObject.setNGEnable("CPI_INST_NO_CD_NO_DEP_SLIP_NO2", true);
				formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO2", true);
				formObject.setNGEnable("CPI_INST_NO_CD_NO_DEP_SLIP_NO3", true);
				formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO3", true);
				formObject.setNGEnable("CPI_INSTRUMENT_DATE", true);
				formObject.setNGEnable("CPI_INSTRUMENT_DATE2", true);
				formObject.setNGEnable("CPI_INSTRUMENT_DATE3", true);
				formObject.setNGEnable("CPI_INSTRUMENT_AMOUNT", true);
				formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT", true);
				formObject.setNGEnable("CPI_INSTRUMENT_AMOUNT2", true);
				formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT2", true);
				formObject.setNGEnable("CPI_INSTRUMENT_AMOUNT3", true);
				formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT3", true);
				formObject.setNGEnable("CPI_BANK_NAME_CD_NAME", true);
				formObject.setNGLocked("CPI_BANK_NAME_CD_NAME", true);
				formObject.setNGEnable("CPI_BANK_NAME_CD_NAME2", true);
				formObject.setNGLocked("CPI_BANK_NAME_CD_NAME2", true);
				formObject.setNGEnable("CPI_BANK_NAME_CD_NAME3", true);
				formObject.setNGLocked("CPI_BANK_NAME_CD_NAME3", true);
				formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", true);
				formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", true);

				// //System.out.println("inside fieldbag set setting default
				// value all dropdown Yogesh");//tt
				System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + sActivityName);
				formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "No");
				formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);

				formObject.setNGValue("CPI_product_category",
						"Corporate_Endorsement"); /**
													 * CR-8001-85348 : Corporate
													 * product endorsement
													 * (Marine Modification) :
													 * Vaibhav
													 **/
				// //System.out.println("fieldValueBagSet:9
				// "+formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE"));
				// //System.out.println("fieldValueBagSet:10
				// "+formObject.getNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE"));

				/************** End Yogesh Marine ******************/

				/*
				 * if(formObject.getNGValue("CPI_process_type") != null &&
				 * !formObject.getNGValue("CPI_process_type").equalsIgnoreCase(
				 * "")) {
				 * if(formObject.getNGValue("CPI_process_type").equalsIgnoreCase
				 * ("Endorsement")) {
				 * formObject.setNGControlTop("Frame_Endorsement_Fields",
				 * 993);//173+910 } else {
				 * formObject.setNGControlTop("Frame_Corporate_Fields",
				 * 993);//173+910 } }
				 */
				height = 83; // Frame1 height initial
				/*
				 * formObject.setNGControlTop("Frame_Cpi_Endorsement",
				 * 83);//83+910
				 * formObject.setNGControlTop("Frame_Endorsement_Fields",
				 * 993);//993+210
				 * formObject.setNGControlTop("Frame_Corporate_Fields", 1203);
				 * //1203+310 formObject.setNGControlTop("Frame_PaymentGrid",
				 * 1513);//1513+180
				 * formObject.setNGControlTop("Frame_Withdrawal",
				 * 1693);//1693+100
				 * formObject.setNGControlTop("Frame_Route_Back_Assignment",1793
				 * );//1793+90
				 * if(sActivityName.equalsIgnoreCase("COPS_Policy_Endr")) {
				 * formObject.setNGControlTop("Frame_Generic_SendTo",1793);//
				 * 1793+90 } formObject.setNGControlTop("Frame_Route_To",
				 * 1883);//1883+80 formObject.setNGControlTop("Frame Remarks",
				 * 1963);//1963+100
				 * formObject.setNGControlTop("BSG Datawashing Email frame",2063
				 * );//2063+90
				 * formObject.setNGControlTop("Frame IT_Comments",2153);//2153+
				 * 75
				 */
				formObject.setNGControlTop("Frame_Cpi_Endorsement", height);// 83+910
				height += 910;
				formObject.setNGControlTop("Frame_Endorsement_Fields", height);// 993+210
				height += 210;
				formObject.setNGControlTop("Frame_Corporate_Fields", height); // 1203+310
				height += 310;
				formObject.setNGControlTop("Frame_PaymentGrid", height);// 1513+180
				height += 180;
				formObject.setNGControlTop("Frame_Withdrawal", height);// 1693+100
				height += 100;
				formObject.setNGControlTop("Frame_Route_Back_Assignment", height);// 1793+90
				height += 90;
				if (sActivityName.equalsIgnoreCase("COPS_Policy_Endr")) {
					// //System.out.println("COPS_Policy_Endr final height== " +
					// height);
					formObject.setNGControlTop("Frame_Generic_SendTo", height);// 1883+90
					height += 90;
				}
				formObject.setNGControlTop("Frame_Route_To", height);// 1883+80
				height += 80;
				formObject.setNGControlTop("Frame Remarks", height);// 1963+100
				height += 100;
				formObject.setNGControlTop("BSG Datawashing Email frame", height);// 2063+90
				height += 90;
				formObject.setNGControlTop("Frame IT_Comments", height);// 2153+75
				height += 75;
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				formObject.setNGControlTop("Frame_GST", height);// 2233+80
				height += 80;
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/

				// //System.out.println("final height== " + height);
				System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + sActivityName);
				formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "No");
				formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);

				formObject.setNGValue("CPI_PRODUCT_TYPE", "OTC");
				formObject.setNGLocked("CPI_PRODUCT_TYPE", false);

				formObject.setNGValue("CPI_paS", "Pathfinder");
				if (prevWrkStep == null || prevWrkStep.equals("Work Introduction1")) {

				}

			}
			/**** ENd CR-8001-70893 Marine CR *********************************/

			if (sActivityName.equalsIgnoreCase("Endorsement") || sActivityName.equalsIgnoreCase("RM_Green_File")
					|| sActivityName.equalsIgnoreCase("BSG_QC") || sActivityName.equalsIgnoreCase("RM_Clarification")
					|| sActivityName.equalsIgnoreCase("BSG_Clarification")) {
				System.out.println("CR12 Product Name vaibhav: " + formObject.getNGValue("CPI_PRODUCT_NAME"));
				//////// //System.out.println("Check CPI_q_ProductName 35353 " +
				//////// formObject.getNGValue("CPI_q_ProductName"));
				String gn_data = formObject.getWFGeneralData();
				String user_name = gn_data.substring(gn_data.indexOf("<UserName>") + 10,
						gn_data.indexOf("</UserName>"));
				//////// //System.out.println("sandy User Name::\t" +
				//////// user_name);

				/***** Start CR-8001-87420-Green File Digitization *****/
				if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
						|| sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification"))
						&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
					//// //System.out.println("Inside enable the
					//// fieldValueBagSet Green File Digitization");
					formObject.setNGEnable("CPI_ADDTNL_CIT_RM_ID", true);
					formObject.setNGLocked("CPI_ADDTNL_CIT_RM_ID", true);
					formObject.setNGEnable("CPI_ADDTNL_CIT_RM_NAME", true);
					formObject.setNGLocked("CPI_ADDTNL_CIT_RM_NAME", false);
					formObject.setNGEnable("CPI_UW_EMP_ID", true);
					formObject.setNGLocked("CPI_UW_EMP_ID", true);
					formObject.setNGEnable("CPI_UW_NAME", true);
					formObject.setNGLocked("CPI_UW_NAME", false);
					// formObject.setSpecificDateFormat("CPI_POLICY_START_DATE",
					// "dd/MM/yyyy");
					if ((formObject.getNGValue("CPI_PRODUCT_IRDACODE") != null
							|| !formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase(""))
							&& (formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4037")
									|| formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4047"))
							&& !(formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1"))) {
						formObject.setNGValue("CPI_IS_PF_FETCH", "No");// hidden
																		// form
																		// control
																		// CPI_IS_PF_FETCH
						//// //System.out.println("inside if value of
						//// CPI_IS_PF_FETCH
						//// ==="+formObject.getNGValue("CPI_IS_PF_FETCH"));
					} else {
						formObject.setNGValue("CPI_IS_PF_FETCH", "Yes");// hidden
																		// form
																		// control
																		// CPI_IS_PF_FETCH
						//// //System.out.println("inside else value of
						//// CPI_IS_PF_FETCH
						//// ==="+formObject.getNGValue("CPI_IS_PF_FETCH"));
					}

					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						//// //System.out.println("Inside enable the
						//// fieldValueBagSet Green File
						//// Digitization"+formObject.getNGValue("CPI_Process_Type"));
						formObject.setNGEnable("CPI_PREV_POLICY_NO", true);
						formObject.setNGLocked("CPI_PREV_POLICY_NO", true);
						if (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal")
								&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
							formObject.setNGEnable("CPI_GRNFL_PROPOSAL_NO", true);
							formObject.setNGLocked("CPI_GRNFL_PROPOSAL_NO", true);
						} else {
							formObject.setNGEnable("CPI_GRNFL_PROPOSAL_NO", false);
							formObject.setNGLocked("CPI_GRNFL_PROPOSAL_NO", false);
						}
						if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")) {
							formObject.setNGEnable("CPI_IL_CO_INS_LEADER", true);
							formObject.setNGLocked("CPI_IL_CO_INS_LEADER", true);
							//// //System.out.println("enable
							//// :CPI_IL_CO_INS_LEADER");
						} else {
							formObject.setNGEnable("CPI_IL_CO_INS_LEADER", false);
							formObject.setNGLocked("CPI_IL_CO_INS_LEADER", false);
							//// //System.out.println("disable :
							//// CPI_IL_CO_INS_LEADER");
						}
						if (formObject.getNGValue("CPI_IL_CO_INS_LEADER").equalsIgnoreCase("IL Share Payout")) {
							formObject.setNGEnable("CPI_IL_SHARE", true);
							formObject.setNGLocked("CPI_IL_SHARE", true);
							//// //System.out.println("enable :CPI_IL_SHARE");
						} else {
							formObject.setNGEnable("CPI_IL_SHARE", false);
							formObject.setNGLocked("CPI_IL_SHARE", false);
							//// //System.out.println("disable : CPI_IL_SHARE");
						}
						if (formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("Yes")) {
							formObject.setNGEnable("CPI_RI_INWARD_TYPE", true);
							formObject.setNGLocked("CPI_RI_INWARD_TYPE", true);
							//// //System.out.println("enable
							//// :CPI_RI_INWARD_TYPE");
						} else {
							formObject.setNGEnable("CPI_RI_INWARD_TYPE", false);
							formObject.setNGLocked("CPI_RI_INWARD_TYPE", false);
							//// //System.out.println("disable :
							//// CPI_RI_INWARD_TYPE");
						}
						if (formObject.getNGValue("CPI_prIMARY_SUB_VERTICAL").equalsIgnoreCase("IBGNP")) {
							formObject.setNGEnable("CPI_RM_EMP_ID_SPG_IBG", true);
							formObject.setNGLocked("CPI_RM_EMP_ID_SPG_IBG", true);
							//// //System.out.println("enable
							//// :CPI_RM_EMP_ID_SPG_IBG");
						} else {
							formObject.setNGEnable("CPI_RM_EMP_ID_SPG_IBG", false);
							formObject.setNGLocked("CPI_RM_EMP_ID_SPG_IBG", false);
							// //System.out.println("disable :
							// CPI_RM_EMP_ID_SPG_IBG");
						}
						if (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal") && formObject
								.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("GROUPHEALTHFLOATERPOLICY")) {
							formObject.setNGEnable("CPI_NEFT_DETAILS", true);
							formObject.setNGLocked("CPI_NEFT_DETAILS", true);
							//// //System.out.println("enable
							//// :CPI_NEFT_DETAILS");
						} else {
							formObject.setNGEnable("CPI_NEFT_DETAILS", false);
							formObject.setNGLocked("CPI_NEFT_DETAILS", false);
							//// //System.out.println("disable :
							//// CPI_NEFT_DETAILS");
						}
						if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")
								|| formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")) {
							//// //System.out.println("enable
							//// all:CPI_CO_INSURER_NAME1");
							formObject.setNGEnable("CPI_CO_INSURER_NAME1", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME1", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE1", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE1", true);
							formObject.setNGEnable("CPI_CO_INSURER_NAME2", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME2", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE2", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE2", true);
							formObject.setNGEnable("CPI_CO_INSURER_NAME3", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME3", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE3", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE3", true);
							formObject.setNGEnable("CPI_CO_INSURER_NAME4", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME4", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE4", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE4", true);
							formObject.setNGEnable("CPI_CO_INSURER_NAME5", true);
							formObject.setNGLocked("CPI_CO_INSURER_NAME5", true);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE5", true);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE5", true);
							// //System.out.println("enable all
							// :CPI_CO_INSURER_SHARE and CPI_CO_INSURER_NAME");
						} else {
							//// //System.out.println("disable
							//// all:CPI_CO_INSURER_NAME1");
							formObject.setNGEnable("CPI_CO_INSURER_NAME1", false);
							formObject.setNGLocked("CPI_CO_INSURER_NAME1", false);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE1", false);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE1", false);
							formObject.setNGEnable("CPI_CO_INSURER_NAME2", false);
							formObject.setNGLocked("CPI_CO_INSURER_NAME2", false);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE2", false);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE2", false);
							formObject.setNGEnable("CPI_CO_INSURER_NAME3", false);
							formObject.setNGLocked("CPI_CO_INSURER_NAME3", false);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE3", false);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE3", false);
							formObject.setNGEnable("CPI_CO_INSURER_NAME4", false);
							formObject.setNGLocked("CPI_CO_INSURER_NAME4", false);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE4", false);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE4", false);
							formObject.setNGEnable("CPI_CO_INSURER_NAME5", false);
							formObject.setNGLocked("CPI_CO_INSURER_NAME5", false);
							formObject.setNGEnable("CPI_CO_INSURER_SHARE5", false);
							formObject.setNGLocked("CPI_CO_INSURER_SHARE5", false);
						}
					} else {
						//// //System.out.println("Inside enable the
						//// fieldValueBagSet Green File
						//// Digitization"+formObject.getNGValue("CPI_Process_Type"));
						formObject.setNGEnable("CPI_POLICY_NUMBER_BASE", true);
						formObject.setNGLocked("CPI_POLICY_NUMBER_BASE", true);
						//// //System.out.println("enable :
						//// CPI_POLICY_NUMBER_BASE");
					}
				} else {
					//// //System.out.println("Inside main else disable all the
					//// fieldValueBagSet Green File Digitization");
					formObject.setNGEnable("CPI_ADDTNL_CIT_RM_ID", false);
					formObject.setNGLocked("CPI_ADDTNL_CIT_RM_ID", false);
					formObject.setNGEnable("CPI_ADDTNL_CIT_RM_NAME", false);
					formObject.setNGLocked("CPI_ADDTNL_CIT_RM_NAME", false);
					formObject.setNGEnable("CPI_UW_EMP_ID", false);
					formObject.setNGLocked("CPI_UW_EMP_ID", false);
					formObject.setNGEnable("CPI_UW_NAME", false);
					formObject.setNGLocked("CPI_UW_NAME", false);

					formObject.setNGEnable("CPI_POLICY_NUMBER_BASE", false);
					formObject.setNGLocked("CPI_POLICY_NUMBER_BASE", false);
					formObject.setNGEnable("CPI_POLICY_START_DATE", false);
					formObject.setNGLocked("CPI_POLICY_START_DATE", false);
					formObject.setNGEnable("CPI_REFUND_TYPE", false);
					formObject.setNGLocked("CPI_REFUND_TYPE", false);

					formObject.setNGEnable("CPI_PREV_POLICY_NO", false);
					formObject.setNGLocked("CPI_PREV_POLICY_NO", false);
					formObject.setNGEnable("CPI_IL_CO_INS_LEADER", false);
					formObject.setNGLocked("CPI_IL_CO_INS_LEADER", false);
					formObject.setNGEnable("CPI_IL_SHARE", false);
					formObject.setNGLocked("CPI_IL_SHARE", false);
					formObject.setNGEnable("CPI_RI_INWARD_TYPE", false);
					formObject.setNGLocked("CPI_RI_INWARD_TYPE", false);
					formObject.setNGEnable("CPI_RM_EMP_ID_SPG_IBG", false);
					formObject.setNGLocked("CPI_RM_EMP_ID_SPG_IBG", false);
					formObject.setNGEnable("CPI_NEFT_DETAILS", false);
					formObject.setNGLocked("CPI_NEFT_DETAILS", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME1", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME1", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE1", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE1", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME2", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME2", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE2", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE2", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME3", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME3", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE3", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE3", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME4", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME4", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE4", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE4", false);
					formObject.setNGEnable("CPI_CO_INSURER_NAME5", false);
					formObject.setNGLocked("CPI_CO_INSURER_NAME5", false);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE5", false);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE5", false);
					formObject.setNGEnable("CPI_GRNFL_PROPOSAL_NO", false);
					formObject.setNGLocked("CPI_GRNFL_PROPOSAL_NO", false);
				}
				/***** End CR-8001-87420-Green File Digitization *****/
				/******************* CR 45 Network Partner ********************/
				if ((sActivityName.equalsIgnoreCase("RM_Green_File")
						|| sActivityName.equalsIgnoreCase("RM_Clarification"))
						&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					if (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("iPartner")
							|| !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
						//////// //System.out.println("1 CR 45 if ipartner: " +
						//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));
						formObject.setNGListIndex("CPI_NETWORK_PARTNER", 0);
						formObject.setNGEnable("CPI_NETWORK_PARTNER", false);
						formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
						formObject.setNGValue("CPI_NETWORK_PARTNER_NAME", "");
						formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME", false);
						formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
					} else {
						//////// //System.out.println("2 CR 45 else ipartner: "
						//////// + formObject.getNGValue("CPI_PRODUCT_TYPE"));
						formObject.setNGEnable("CPI_NETWORK_PARTNER", true);
						formObject.setNGLocked("CPI_NETWORK_PARTNER", true);
						// formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME",false);
						formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
					}
					/***************************
					 * PID-CPI process changes
					 ***************************/
					if (formObject.getNGValue("CPI_quOTE_SYS_ID") != null
							&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
						//////// //System.out.println("Quote Case in
						//////// RM_Green_File");
						System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + sActivityName);
						formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", true);
						formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", true);
						formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "No");
						formObject.setNGEnable("Frame_PaymentGrid", true);

					}
					/***********************
					 * End PID-CPI process changes
					 ***************************/
				}
				/*****************
				 * end CR 45 Network Partner
				 *******************/
				/***************
				 * Start CR-OMCPI-1314-04 URN No
				 *****************/
				if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
						|| sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification")
						|| sActivityName.equalsIgnoreCase("RM_Clarification"))
						&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")
								|| formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
					System.out.println("Vaibhav Onload Form RM_Green_File");
					/***************************
					 * PID-CPI process changes
					 ***************************/
					// formObject.setNGControlTop("Frame LEADER URN NUMBER",
					// 834);
					// formObject.setNGControlTop("Frame3", 924);
					formObject.setNGControlTop("Frame_PaymentGrid", 1025);// (907+65)+180
																			// CR-8001-61339
																			// URN
																			// Normal
																			// Priority
																			// //(65+960)+180
																			// CPI-
																			// CR-8001-59268(FlapPrint)
																			// CR
					formObject.setNGControlTop("Frame_SPNAMES", 1205); // 1152+150
																		// //1205+150
																		// CPI-
																		// CR-8001-59268(FlapPrint)
																		// CR
					formObject.setNGControlTop("Frame LEADER URN NUMBER", 1355); // 1302+90
																					// //1355+90
																					// CPI-
																					// CR-8001-59268(FlapPrint)
																					// CR
					formObject.setNGControlTop("Frame_DocUpload", 1445); // +90
																			// //CR-8001-87420
																			// GREEN
																			// FILE
																			// Digitization
																			// CR
																			// Vaibhav--1445
					formObject.setNGControlTop("Frame_GST", 1525); // CR-8127-95325
																	// :
																	// GST-Omniflow
																	// development
					formObject.setNGControlTop("Frame3", 1605); // Height
																// Changed ...//
																// CR-8001-87420
																// GREEN FILE
																// Digitization
																// CR Vaibhav

					formObject.setNGLocked("Frame_SPNAMES", false);
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					formObject.setNGEnable("Gen_Urn_No", false);

					if (formObject.getNGValue("CPI_CoInsurance") != null) {

						if (formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("Leader")) {
							if (formObject.getNGValue("CPI_Leader_URN_No") == null
									|| formObject.getNGValue("CPI_Leader_URN_No").equalsIgnoreCase("")) {
								//////// //System.out.println("satish
								//////// RM_Green_File CPI_Leader_URN_No is
								//////// empty");
								enableDesiableURNFields("Leader", true);
							} else if (formObject.getNGValue("CPI_Leader_URN_No") != null
									|| !formObject.getNGValue("CPI_Leader_URN_No").equalsIgnoreCase("")) {
								enableDesiableURNFields("Leader", false);
							}
						} else if (formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("Follower")) {
							enableDesiableURNFields("Follower", true);
						} else if (formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("No Co-Insurance")) {
							formObject.setNGLocked("CPI_Leader_URN_No", false);
							formObject.setNGEnable("Gen_Urn_No", false);
						}
					}
					/**********************
					 * Start CR-8001-87420 GREEN FILE Digitization CR Vaibhav
					 ***********************/
					String prodIrdaCode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
					if (prodIrdaCode.equalsIgnoreCase("4037") || prodIrdaCode.equalsIgnoreCase("4047"))// code
																										// removed
																										// GREEN
																										// FILE
																										// Digitization////CR-8001-71104_CR-8119-87478_Auto
																										// CPI
																										// generation
																										// iPartner
					{
						System.out.println("Inside IF CR-8001-87420-Green File Digitization GreeenFileOnload..vaibhav"
								+ prodIrdaCode);
						System.out.println("Inside IF CR-8001-87420-Green File Digitization GreeenFileOnload..vaibhav");
						formObject.setNGEnable("Frame_DocUpload", false);
					} else {
						System.out.println("Inside IF CR-8001-87420-Green File Digitization GreeenFileOnload..vaibhav"
								+ prodIrdaCode);
						System.out
								.println("Inside Else CR-8001-87420-Green File Digitization GreeenFileOnload..vaibhav");
						formObject.setNGEnable("Frame_DocUpload", true);
					}
					/**********************
					 * End CR-8001-87420 GREEN FILE Digitization CR Vaibhav
					 ***********************/
					// Sadik FR7 Disable Generate Pdf Btn
					// //System.out.println("Sadik FR7 Disabling the
					// Btn_GeneratePdf ");
					formObject.setNGEnable("Btn_GeneratePdf", true);
					// formObject.setNGVisible("Btn_GeneratePdf", false);
					// End
				}

				/***************
				 * End CR-OMCPI-1314-04 URN No
				 *******************/
			}

			/*************************
			 * CPI URN CR 8001-61339 Multiple Changes CR
			 *****************************/

			if ((!(sActivityName.equalsIgnoreCase("RM_Green_File"))
					&& !(sActivityName.equalsIgnoreCase("RM_Clarification"))
					&& !(sActivityName.equalsIgnoreCase("BSG_Clarification"))
					&& !(sActivityName.equalsIgnoreCase("Work Introduction1"))
					&& !sActivityName.equalsIgnoreCase("COPS_Policy_Endr"))
					&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) // CR-8001-70893
																													// Marine
																													// CR
			{
				//////// //System.out.println("In fieldValueBagSet Method
				//////// 8001-61339 For:"+sActivityName);
				//////// //System.out.println("Entering In fieldValueBagSet
				//////// Method For Remaining Buckets");
				formObject.setNGEnable("CPI_Exception_To_MH", false);
				formObject.setNGLocked("CPI_Exception_To_MH", false);
				formObject.setNGEnable("CPI_MH_Interaction_No", false);
				formObject.setNGLocked("CPI_MH_Interaction_No", false);
				formObject.setNGEnable("CPI_MH", false);
				formObject.setNGLocked("CPI_MH", false);
				//////// //System.out.println("Exiting fieldValueBagSet Method
				//////// 8001-61339 For Remaining Buckets");

			}

			/*************************
			 * End CPI URN CR 8001-61339 Multiple Changes CR
			 **************************/

			/**********************
			 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
			 ***********************/

			if (!(sActivityName.equalsIgnoreCase("Work Introduction1"))
					&& !(sActivityName.equalsIgnoreCase("RM_Clarification"))
					&& !sActivityName.equalsIgnoreCase("BSG_Clarification")
					&& !formObject.getNGValue("CPI_MAIL_ALIASID").equalsIgnoreCase("2")) // CR-8001-70893
																							// Marine
																							// CR
			{
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("In fieldValueBagSet Method
					//////// CPI- CR-8001-59268(FlapPrint) For
					//////// :"+sActivityName);
					//////// //System.out.println("Entering In fieldValueBagSet
					//////// Method For RM_Clarification/BSG_Clarification
					//////// Buckets");
					formObject.setNGEnable("Corp_PAN", false);
					formObject.setNGLocked("Corp_PAN", false);
					//////// //System.out.println("Exiting fieldValueBagSet
					//////// Method CPI- CR-8001-59268(FlapPrint) For
					//////// RM_Clarification/BSG_Clarification Buckets");
				} else {
					//////// //System.out.println("In fieldValueBagSet Method
					//////// CPI- CR-8001-59268(FlapPrint) For
					//////// :"+sActivityName);
					//////// //System.out.println("Entering In fieldValueBagSet
					//////// Method For RM_Clarification/BSG_Clarification
					//////// Buckets");
					formObject.setNGEnable("End_PAN", false);
					formObject.setNGLocked("End_PAN", false);
					//////// //System.out.println("Exiting fieldValueBagSet
					//////// Method CPI- CR-8001-59268(FlapPrint) For
					//////// RM_Clarification/BSG_Clarification Buckets");
				}
			}
			/**********************
			 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
			 ************************/

			/**********************
			 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR Added 0n
			 * 24/09/2015
			 ***********************/

			if (sActivityName.equalsIgnoreCase("BSG_Clarification")
					|| sActivityName.equalsIgnoreCase("RM_Clarification")) {
				//////// //System.out.println(" Inside fieldValueBagSet Method
				//////// CPI- CR-8001-59268(FlapPrint) For:"+sActivityName);
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("Entering In fieldValueBagSet
					//////// Method For RM_Clarification/BSG_Clarification
					//////// Buckets For Enable/Disable Of Fields");
					formObject.setNGEnable("Corp_CUSTOMER_NAME", true);
					formObject.setNGLocked("Corp_CUSTOMER_NAME", true);
					//////// //System.out.println("Exiting fieldValueBagSet
					//////// Method CPI- CR-8001-59268(FlapPrint) For
					//////// RM_Clarification/BSG_Clarification Buckets
					//////// Enable/Disable Of Fields");
				} else {
					//////// //System.out.println("Entering In fieldValueBagSet
					//////// Method For RM_Clarification/BSG_Clarification
					//////// Buckets");
					formObject.setNGEnable("End_CUSTOMER_NAME", true);
					formObject.setNGLocked("End_CUSTOMER_NAME", true);
					//////// //System.out.println("Exiting fieldValueBagSet
					//////// Method CPI- CR-8001-59268(FlapPrint) For
					//////// RM_Clarification/BSG_Clarification Buckets
					//////// Enable/Disable Of Fields");

				}

				if (sActivityName.equalsIgnoreCase("BSG_Clarification")
						&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")) {

					//////// //System.out.println("Entering fieldValueBagSet
					//////// Method CPI- CR-8001-59268(FlapPrint) For
					//////// RM_Clarification/BSG_Clarification Buckets
					//////// ForCPI_QUOTE_NO ");
					formObject.setNGEnable("CPI_QUOTE_NO", true);
					formObject.setNGLocked("CPI_QUOTE_NO", true);
					//////// //System.out.println("Exiting fieldValueBagSet
					//////// Method CPI- CR-8001-59268(FlapPrint) For
					//////// RM_Clarification/BSG_Clarification Buckets
					//////// ForCPI_QUOTE_NO ");
				}

				//////// //System.out.println(" Exiting fieldvaluebagset Method
				//////// CPI- CR-8001-59268(FlapPrint) For:"+sActivityName);
			}

			/**********************
			 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
			 ************************/
			/**********************
			 * Start Development in Omniflow CPI Alternate Inwarding Process 4.0
			 *************************/

			if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("BSG_QC")
					|| sActivityName.equalsIgnoreCase("Proposal_Release")
					|| sActivityName.equalsIgnoreCase("COPS_Policy_Endr"))
					&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) // CR-8001-70893
																													// Marine
																													// CR
			{
				//////// //System.out.println("In FieldValueBagSet Method
				//////// Omniflow CPI Alternate Inwarding Process
				//////// 4.0:"+sActivityName);
				formObject.setNGLocked("CPI_boOKING_TYPE", true);
				formObject.setNGEnable("CPI_boOKING_TYPE", true);
				//////// //System.out.println("Exiting fieldValueBagSet Method
				//////// Omniflow CPI Alternate Inwarding Process 4.0");

			} else {
				//////// //System.out.println("In FieldValueBagSet Method
				//////// Omniflow CPI Alternate Inwarding Process
				//////// 4.0:"+sActivityName);
				//////// //System.out.println("Entering In fieldValueBagSet
				//////// Method For Remaining Buckets");
				formObject.setNGLocked("CPI_boOKING_TYPE", false);
				formObject.setNGEnable("CPI_boOKING_TYPE", false);
				//////// //System.out.println("Exiting fieldValueBagSet Method
				//////// Omniflow CPI Alternate Inwarding Process 4.0");
			}

			/**********************
			 * End Development in Omniflow CPI Alternate Inwarding Process 4.0
			 ***************************/

			/**************************************
			 * CR-8001-92286 Omniflow held cover letter CR Start
			 *****************************************************/

			if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
					|| sActivityName.equalsIgnoreCase("RM_Clarification")
					|| sActivityName.equalsIgnoreCase("BSG_Clarification"))
					&& !(sActivityName.equalsIgnoreCase(
							"Work Introduction1"))/*
													 * yogesh co-insurance bug
													 * fix
													 */) {
				// //System.out.println("In IF....coinsurance,,");
				if (sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification")) {
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						// //System.out.println("In FieldValueBagSet Method
						// CR-8001-92286 Omniflow held cover letter CR Start :
						// vaibhav");
						formObject.setNGLocked("CORP_SUM_INSURED_NO_OF_LIVES", true);
						formObject.setNGEnable("CORP_SUM_INSURED_NO_OF_LIVES", true);
						formObject.setNGLocked("CORP_BSG_LOCATION", true);
						formObject.setNGEnable("CORP_BSG_LOCATION", true);
						formObject.setNGLocked("CORP_RM_LOCATION", true);
						formObject.setNGEnable("CORP_RM_LOCATION", true);
						// //System.out.println("Exiting FieldValueBagSet Method
						// CR-8001-92286 Omniflow held cover letter CR Start :
						// vaibhav");
					} else {
						// //System.out.println("In FieldValueBagSet Method
						// CR-8001-92286 Omniflow held cover letter CR Start :
						// vaibhav");
						formObject.setNGLocked("END_SUM_INSURED_NO_OF_LIVES", true);
						formObject.setNGEnable("END_SUM_INSURED_NO_OF_LIVES", true);
						formObject.setNGLocked("END_BSG_LOCATION", true);
						formObject.setNGEnable("END_BSG_LOCATION", true);
						formObject.setNGLocked("END_RM_LOCATION", true);
						formObject.setNGEnable("END_RM_LOCATION", true);
						// //System.out.println("Exiting FieldValueBagSet Method
						// CR-8001-92286 Omniflow held cover letter CR Start :
						// vaibhav");
					}
				}
				// //System.out.println("In FieldValueBagSet Method
				// CR-8001-92286 Omniflow held cover letter CR Start :
				// vaibhav");
				formObject.setNGLocked("CPI_SUM_INSURED_NO_OF_LIVES", true);
				formObject.setNGEnable("CPI_SUM_INSURED_NO_OF_LIVES", true);
				formObject.setNGLocked("CPI_RM_LOCATION", true);
				formObject.setNGEnable("CPI_RM_LOCATION", true);
				formObject.setNGLocked("CPI_BSG_LOCATION", true);
				formObject.setNGEnable("CPI_BSG_LOCATION", true);
				// //System.out.println("Exiting FieldValueBagSet Method
				// CR-8001-92286 Omniflow held cover letter CR Start :
				// vaibhav");

			} else {
				if (!(sActivityName.equalsIgnoreCase("Work Introduction1"))
						&& !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")) {
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {

						// System.out.println("In FieldValueBagSet Method
						// CR-8001-92286 Omniflow held cover letter CR Start :
						// vaibhav");
						// System.out.println("Entering In fieldValueBagSet
						// Method For Remaining Buckets: vaibhav ");
						formObject.setNGLocked("CORP_SUM_INSURED_NO_OF_LIVES", false);
						formObject.setNGEnable("CORP_SUM_INSURED_NO_OF_LIVES", false);
						formObject.setNGLocked("CORP_BSG_LOCATION", false);
						formObject.setNGEnable("CORP_BSG_LOCATION", false);
						formObject.setNGLocked("CORP_RM_LOCATION", false);
						formObject.setNGEnable("CORP_RM_LOCATION", false);
						// System.out.println("Exiting FieldValueBagSet Method
						// CR-8001-92286 Omniflow held cover letter CR Start :
						// vaibhav");
					} else {
						// System.out.println("In FieldValueBagSet Method
						// CR-8001-92286 Omniflow held cover letter CR Start :
						// vaibhav");
						// System.out.println("Entering In fieldValueBagSet
						// Method For Remaining Buckets: vaibhav ");
						formObject.setNGLocked("END_SUM_INSURED_NO_OF_LIVES", false);
						formObject.setNGEnable("END_SUM_INSURED_NO_OF_LIVES", false);
						formObject.setNGLocked("END_BSG_LOCATION", false);
						formObject.setNGEnable("END_BSG_LOCATION", false);
						formObject.setNGLocked("END_RM_LOCATION", false);
						formObject.setNGEnable("END_RM_LOCATION", false);
						// System.out.println("Exiting FieldValueBagSet Method
						// CR-8001-92286 Omniflow held cover letter CR Start :
						// vaibhav");
					}
				}
			}

			/**************************************
			 * CR-8001-92286 Omniflow held cover letter CR End
			 ******************************************************/

			/**************************************
			 * CR-8127-95325 : GST-Omniflow development Start
			 *****************************************************/

			if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
					|| sActivityName.equalsIgnoreCase("BSG_QC") || sActivityName.equalsIgnoreCase("RM_Clarification")
					|| sActivityName.equalsIgnoreCase("BSG_Clarification"))
					&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {

				System.out.println(
						"Inside GreenFile QMS And Datawashing Fieldvalueset : CR-8127-95325 : GST-Omniflow development");
				formObject.setNGLocked("CPI_GST_REGISTERED", true);
				formObject.setNGEnable("CPI_GST_REGISTERED", true);
				if (formObject.getNGValue("CPI_GST_REGISTERED").equalsIgnoreCase("Yes")) {
					System.out.println(
							"Inside IF_IF FieldValueBagSet Enabling GST Buttons2 : CR-8127-95325 : GST-Omniflow development");
					/**********
					 * Start CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					formObject.setNGEnable("CPI_GST_INVOICE_OPTION", true);
					formObject.setNGLocked("CPI_GST_INVOICE_OPTION", true);
					/**********
					 * End CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					formObject.setNGEnable("Btn_AddGst", true);
					formObject.setNGEnable("Btn_ViewGst", true);
				} else {
					System.out.println(
							"Inside IF_Else FieldValueBagSet Disabling GST Buttons3 : CR-8127-95325 : GST-Omniflow development");
					System.out.println(
							"Inside IF_Else FieldValueBagSet Disabling GST Buttons3 : CR-8127-95325 : GST-Omniflow development");
					/**********
					 * Start CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					formObject.setNGValue("CPI_GST_REGISTERED", "--Select--");
					formObject.setNGEnable("CPI_GST_INVOICE_OPTION", false);
					formObject.setNGLocked("CPI_GST_INVOICE_OPTION", false);
					/**********
					 * End CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					formObject.setNGEnable("Btn_AddGst", false);
					formObject.setNGEnable("Btn_ViewGst", true);
				}
			} else {
				System.out.println(
						"Inside Esle only ViewGSt is Enabled FieldValueBagSet1 : CR-8127-95325 : GST-Omniflow development");
				formObject.setNGLocked("CPI_GST_REGISTERED", false);
				formObject.setNGEnable("CPI_GST_REGISTERED", false);
				/********** Start CR-8001-97828_BRS_GST_OmniflowCPI **********/
				formObject.setNGValue("CPI_GST_REGISTERED", "--Select--");
				formObject.setNGEnable("CPI_GST_INVOICE_OPTION", false);
				formObject.setNGLocked("CPI_GST_INVOICE_OPTION", false);
				/********** End CR-8001-97828_BRS_GST_OmniflowCPI **********/
				formObject.setNGEnable("Btn_AddGst", false);
				formObject.setNGEnable("Btn_ViewGst", true);

			}

			/**************************************
			 * CR-8127-95325 : GST-Omniflow development End
			 ******************************************************/
			/***********************
			 * Start CR-8001-54702 E-Mail Filter
			 ***************************/
			//////// //System.out.println("CR-8001-54702 E-Mail Filter to
			//////// disable val_id/IAS sActivityName"+sActivityName);
			if (!(sActivityName.equalsIgnoreCase("RM_Green_File")) && !(sActivityName.equalsIgnoreCase("Endorsement"))
					&& !(sActivityName.equalsIgnoreCase("Work Introduction1"))
					&& !sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")
					&& !(sActivityName.equalsIgnoreCase("BSG_Clarification"))
					&& !(sActivityName.equalsIgnoreCase("RM_Clarification"))) // CR-8001-70893
																				// Marine
																				// CR
																				// //CR-8001-92286
																				// Omniflow
																				// held
																				// cover
																				// letter(vaibhav)
																				// addition
																				// of
																				// clarification
																				// buckets
			{
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("inside CPI IAS/Data_val ID in
					//////// fieldvaluebagset BSG_QC ");
					formObject.setNGLocked("CORP_DATA_VALIDATION_ID", false);
					formObject.setNGLocked("CORP_IAS_ID", false);
					formObject.setNGEnable("CORP_DATA_VALIDATION_ID", false);
					formObject.setNGEnable("CORP_IAS_ID", false);

				} else {
					//////// //System.out.println("inside Endorsement
					//////// IAS/Data_val ID in fieldvaluebagset BSG_QC ");
					formObject.setNGLocked("End_DATA_VALIDATION_ID", false);
					formObject.setNGLocked("End_IAS_ID", false);
					formObject.setNGEnable("End_DATA_VALIDATION_ID", false);
					formObject.setNGEnable("End_IAS_ID", false);
					//////// //System.out.println("inside Endorsement
					//////// IAS/Data_val ID in fieldvaluebagset for forms
					//////// similar to rm_green_file(for dw cases) ");
					formObject.setNGLocked("CPI_DATA_VALIDATION_ID", false);
					formObject.setNGLocked("CPI_IAS_ID", false);
					formObject.setNGEnable("CPI_DATA_VALIDATION_ID", false);
					formObject.setNGEnable("CPI_IAS_ID", false);
				}
			}
			/***********************
			 * End CR-8001-54702 E-Mail Filter
			 ***************************/

			/******************** CR 46 CPU Datawashing *********************/
			////////// //System.out.println("CPI_DATAWASHING_TYPE==="+formObject.getNGValue("CPI_DATAWASHING_TYPE"));

			/*
			 * if(formObject.getNGValue("CPI_DATAWASHING_TYPE") != null &&
			 * formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase(
			 * "Endorsement") &&
			 * sActivityName.equalsIgnoreCase("CPU_Data_Washing")) { ////////
			 * //System.out.println("field bag set datawashing case");
			 * 
			 * //formObject.setNGControlTop("Frame3",993);
			 * //formObject.setNGVisible("Datawashing_Route_To",true);
			 * //formObject.setNGControlTop("Datawashing_Route_To",1080);
			 * formObject.setNGVisible("Datawashing_IT_comments",true);
			 * formObject.setNGControlTop("Datawashing_IT_comments",1167);
			 * formObject.setNGEnable("Datawashing_IT_comments",false);
			 * formObject.setNGEnable("CPI_Route_To",true);
			 * formObject.setNGVisible("Label65",true);
			 * formObject.setNGVisible("CPI_CLIENT_MAIL_RECEIVED_DATE",true);
			 * formObject.setSpecificDateFormat("CPI_CLIENT_MAIL_RECEIVED_DATE",
			 * "dd/MM/yyyy"); formObject.setNGVisible("Label67",true);
			 * formObject.setNGVisible("CPI_DMS_NO",true);
			 * formObject.setNGVisible("Label64",true);
			 * formObject.setNGVisible("CPI_REJECTED_TO_IT",true);
			 * formObject.setNGVisible("Label66",true);
			 * formObject.setNGVisible("CPI_Samadhan_Interaction_ID",true);
			 * formObject.setNGLocked("CPI_Samadhan_Interaction_ID",false);
			 * ////////
			 * //System.out.println("end field bag set datawashing case "); }
			 */

			/* CR-OMCPI-1314-03 CPU DataWashing Start */
			if (sActivityName.equalsIgnoreCase("Endorsement")
					&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
					&& !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")) {
				System.out.println("vaibhav Endorsement_Fileeeee3 Datawashing");
				/***************
				 * Start CR-OMCPI-1314-04 URN No
				 *****************/
				// formObject.setNGControlTop("Frame3",993);
				/***************************
				 * PID-CPI process changes
				 ***************************/
				// formObject.setNGControlTop("Frame LEADER URN NUMBER", 993);
				// formObject.setNGControlTop("Frame3", 1083);
				/*
				 * formObject.setNGControlTop("Frame LEADER URN NUMBER", 1073);
				 * formObject.setNGControlTop("Frame3", 1163);
				 */
				/*
				 * formObject.setNGControlTop("Frame_SPNAMES", 1073); //1073+150
				 * formObject.setNGControlTop("Frame LEADER URN NUMBER", 1223);
				 * //1223 +90 formObject.setNGControlTop("Frame3", 1313);
				 */ // Suraj
				formObject.setNGControlTop("Frame_PaymentGrid", 1073); // 1073+180
																		// Suraj
				formObject.setNGControlTop("Frame_SPNAMES", 1253); // 1253+150
				formObject.setNGControlTop("Frame LEADER URN NUMBER", 1403); // 1223
																				// +90
				formObject.setNGVisible("Frame_DocUpload", true); // CR-8001-87420
																	// GREEN
																	// FILE
																	// Digitization
																	// CR
																	// Vaibhav
				formObject.setNGControlTop("Frame_DocUpload", 1493); // added
																		// due
																		// to
																		// endorsement
																		// frame
																		// enable
																		// //CR-8001-87420
																		// GREEN
																		// FILE
																		// Digitization
																		// CR
																		// Vaibhav
				formObject.setNGControlTop("Frame_GST", 1583); // CR-8127-95325
																// :
																// GST-Omniflow
																// development
				formObject.setNGControlTop("Frame3", 1663); // 1493 height
															// change due to
															// endorsement frame
															// enable
															// //CR-8001-87420
															// GREEN FILE
															// Digitization CR
															// Vaibhav //1583 :
															// Before GST
															// CR-8127-95325
				/***********************
				 * End PID-CPI process changes
				 ***************************/

			} else if (!sActivityName.equalsIgnoreCase("RM_Green_File")) {
				formObject.setNGVisible("Frame LEADER URN NUMBER", false);
			}
			/*************** End CR-OMCPI-1314-04 URN No *******************/
			if (formObject.getNGValue("CPI_DATAWASHING_TYPE") != null
					&& formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
					&& (sActivityName.equalsIgnoreCase("Endorsement")
							|| sActivityName.equalsIgnoreCase("CPU_Assignment")
							|| sActivityName.equalsIgnoreCase("CPU_Data_Washing")
							|| sActivityName.equalsIgnoreCase("CPU_DW_Clarification"))) {
				// //System.out.println("vaibhav GST Datawashing Check");
				/***************************
				 * PID-CPI process changes
				 ***************************/

				if (sActivityName.equalsIgnoreCase("CPU_Assignment")
						|| sActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
					System.out.println("Disabling value CPI_PID_PAYMENT_TYPE at " + sActivityName);
					formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
					// formObject.setNGEnable("Frame_PaymentGrid", false);
				}

				formObject.setNGEnable("Frame_PaymentGrid", true);
				lockPaymentModes();// CPI PID Additional Points
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				if (sActivityName.equalsIgnoreCase("CPU_Assignment")) {
					//////// //System.out.println("field bag set datawashing
					//////// case");
					formObject.setNGVisible("Datawashing Assignment frame", true);
					formObject.setNGControlTop("Datawashing Assignment frame", 73);
					formObject.setNGControlTop("Frame2", 163);
					formObject.setNGVisible("Frame_Withdrawal", true);
					/***************************
					 * PID-CPI process changes
					 ***************************/
					// formObject.setNGControlTop("Frame_Withdrawal", 1083);
					formObject.setNGControlTop("Frame_PaymentGrid", 1153); // 1163+180//1153+182
					formObject.setNGControlTop("Frame_Withdrawal", 1335);// 1343+80//1335+83
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					/****
					 * Start CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ******/
					if (!formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase("")) {
						formObject.setNGVisible("Datawashing Email frame", true);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						// formObject.setNGControlTop("Datawashing Email frame",
						// 1169);
						// formObject.setNGControlTop("Datawashing Email frame",
						// 1249);
						formObject.setNGControlTop("Datawashing Email frame", 1418);// 1423+80//1418+85
						// formObject.setNGControlTop("Frame3", 1251);
						// formObject.setNGControlTop("Frame3", 1331);
						formObject.setNGControlTop("Frame3", 1503);
						formObject.setNGControlTop("Frame_GST", 1593); // CR-8127-95325
																		// :
																		// GST-Omniflow
																		// development
						formObject.setNGVisible("Frame_SPNAMES", false);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
						// formObject.setNGControlTop("Frame_DocUpload", 1244);
						// formObject.setNGControlTop("Frame3", 1327);
						formObject.setNGVisible("Btn_MailCompose", false);
					} else {
						// formObject.setNGControlTop("Frame_DocUpload", 1164);
						// formObject.setNGControlTop("Frame3", 1247);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						// formObject.setNGControlTop("Frame3", 1169);
						// formObject.setNGControlTop("Frame3", 1249);
						formObject.setNGControlTop("Frame3", 1418);
						formObject.setNGControlTop("Frame_GST", 1508); // CR-8127-95325
																		// :
																		// GST-Omniflow
																		// development
						formObject.setNGVisible("Frame_SPNAMES", false);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}
					/****
					 * End CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ********/
					formObject.setNGEnable("CPI_CPU_ASSIGN_TO", true);
					formObject.setNGLocked("CPI_CPU_ASSIGN_TO", false);
					formObject.setNGEnable("CPI_CHANGED_MAIL_STATUS", false);
					formObject.setNGLocked("CPI_CHANGED_MAIL_STATUS", false);
					AssignmentValidation();

				} else {
					formObject.setNGEnable("CPI_CPU_ASSIGN_TO", false);
					formObject.setNGLocked("CPI_CPU_ASSIGN_TO", false);
				}
				/****
				 * Start CR-OMCPI-1314-05 DataWashing -
				 * Mail_Management_Extension
				 ******/
				if (sActivityName.equalsIgnoreCase("CPU_Assignment")
						|| sActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
					String prevWrkStep = formObject.getNGValue("CPI_PREV_WRK_STEP");
					if (sActivityName.equalsIgnoreCase("CPU_Assignment")
							&& (prevWrkStep == null || prevWrkStep.equals(""))) {
						dwDefualtSet(sActivityName);
					}
					/*
					 * else
					 * if(sActivityName.equalsIgnoreCase("CPU_Data_Washing") &&
					 * (prevWrkStep != null &&
					 * prevWrkStep.equals("CPU_Assignment"))) {
					 * dwDefualtSet(sActivityName); }
					 */
					/*************************
					 * CPI PID Additional Points
					 *****************************/
					if ((sActivityName.equalsIgnoreCase("CPU_Data_Washing")
							&& (prevWrkStep != null && prevWrkStep.equals("CPU_HEALTH")))
							|| (sActivityName.equalsIgnoreCase("CPU_DW_Clarification"))) {
						formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
						formObject.setNGEnable("Frame_PaymentGrid", false);

					}

					/*************************
					 * End CPI PID Additional Points
					 **************************/

				}
				/****
				 * End CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
				 ********/
				if (sActivityName.equalsIgnoreCase("CPU_Data_Washing")
						|| sActivityName.equalsIgnoreCase("CPU_DW_Clarification")) {
					formObject.setNGVisible("Datawashing_Route_To", true);
					formObject.setNGVisible("Datawashing_IT_comments", true);
					if (!formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase("")) {
						formObject.setNGVisible("Datawashing Email frame", true);
					}
					if (sActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
						// //System.out.println("vaibhav GST Datawashinggg");
						formObject.setNGVisible("Frame_Withdrawal", true);
						formObject.setNGVisible("Frame back_Coins", true);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						/*
						 * formObject.setNGControlTop("Frame_Withdrawal", 993);
						 * formObject.setNGControlTop("Frame back_Coins", 1080);
						 * formObject.setNGControlTop("Datawashing_Route_To",
						 * 1167); formObject.setNGControlTop("Frame3", 1254);
						 */
						formObject.setNGLocked("Frame_SPNAMES", false);
						formObject.setNGControlTop("Frame_PaymentGrid", 1070); // 1070+182
						formObject.setNGControlTop("Frame_SPNAMES", 1252); // 1252+90
																			// //1252+150
						formObject.setNGControlTop("Frame_Withdrawal", 1402);// 1342+87
																				// //1402+87
						formObject.setNGControlTop("Frame back_Coins", 1490);// 1429+87
																				// //1490+87
						formObject.setNGControlTop("Datawashing_Route_To", 1577);// 1516+87
																					// //1577+87
						formObject.setNGControlTop("Frame3", 1664);// 1664 +87
						/***********************
						 * End PID-CPI process changes
						 ***************************/
						formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", true);
						formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", true);
						formObject.NGClear("CPI_CO_INS_ROUTE_TO_BACK");
						formObject.NGAddItem("CPI_CO_INS_ROUTE_TO_BACK", "CPU_Assignment");
						formObject.setNGListIndex("CPI_CO_INS_ROUTE_TO_BACK", 0);
						formObject.setNGValue("Label43", "Route back To");
						if (!formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase("")) {
							/***************************
							 * PID-CPI process changes
							 ***************************/
							/*
							 * formObject.
							 * setNGControlTop("Datawashing Email frame", 1339);
							 * formObject.setNGControlTop(
							 * "Datawashing_IT_comments", 1426);
							 */
							formObject.setNGControlTop("Datawashing Email frame", 1751);// 1751+87
							formObject.setNGControlTop("Datawashing_IT_comments", 1838);// 1751
							formObject.setNGControlTop("Frame_GST", 1913); // CR-8127-95325
																			// :
																			// GST-Omniflow
																			// development
							/***********************
							 * End PID-CPI process changes
							 ***************************/
						} else {
							/***************************
							 * PID-CPI process changes
							 ***************************/
							// formObject.setNGControlTop("Datawashing_IT_comments",
							// 1341);
							formObject.setNGControlTop("Datawashing_IT_comments", 1751);// 1751
							formObject.setNGControlTop("Frame_GST", 1826); // CR-8127-95325
																			// :
																			// GST-Omniflow
																			// development
							/***********************
							 * End PID-CPI process changes
							 ***************************/
						}

						//////// //System.out.println("CPI_INTERACTIONID :" +
						//////// formObject.getNGValue("CPI_INTERACTIONID"));
						if (!formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase("")) {
							formObject.NGAddItem("CPI_Route_to", "RM Clarification");
						} else {
							formObject.NGAddItem("CPI_Route_to", "RM Clarification");
							formObject.NGAddItem("CPI_Route_to", "CPU Customer Clarification");
						}
					} else {
						formObject.setNGVisible("Frame back_Coins", false);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						/*
						 * formObject.setNGControlTop("Datawashing_Route_To",
						 * 993); formObject.setNGControlTop("Frame3", 1080);
						 */
						formObject.setNGControlTop("Frame_PaymentGrid", 1073); // 1073+182
						formObject.setNGControlTop("Frame_SPNAMES", 1255); // 1255+90
																			// //1255+150
						formObject.setNGControlTop("Datawashing_Route_To", 1405);// 1345+87
																					// //1405+87
						formObject.setNGControlTop("Frame3", 1492); // 1492+87
						/***********************
						 * End PID-CPI process changes
						 ***************************/
						if (!formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase("")) {
							/***************************
							 * PID-CPI process changes
							 ***************************/
							/*
							 * formObject.
							 * setNGControlTop("Datawashing Email frame", 1165);
							 * formObject.setNGControlTop(
							 * "Datawashing_IT_comments", 1252);
							 */
							formObject.setNGControlTop("Datawashing Email frame", 1579);// 1510+87
																						// //1579+89
							formObject.setNGControlTop("Datawashing_IT_comments", 1668);// 1600//
																						// 1668
							/***********************
							 * End PID-CPI process changes
							 ***************************/
							formObject.setNGVisible("Btn_MailCompose", false);
						} else {
							/***************************
							 * PID-CPI process changes
							 ***************************/
							// formObject.setNGControlTop("Datawashing_IT_comments",
							// 1167);
							formObject.setNGControlTop("Datawashing_IT_comments", 1579);// 1579
							/***********************
							 * End PID-CPI process changes
							 ***************************/
						}
						RouteTo_ClarificationWS(formObject.getNGValue("CPI_PREV_WRK_STEP"),
								formObject.getNGValue("CPI_CONST_PREV_WORKSTEP"), sActivityName);
					}

					formObject.setNGEnable("CPI_Route_To", false);
					formObject.setNGLocked("CPI_Route_To", false);
					formObject.setNGValue("Label69", "Route To");
					formObject.setNGValue("Label70", "Routing in case of exception");
					formObject.setNGEnable("Datawashing_IT_comments", false);
					formObject.setNGLocked("Datawashing_IT_comments", false);
					// formObject.setNGEnable("CPI_Route_To",true);//if
					// exception is raised
					formObject.setNGVisible("Label65", true);
					formObject.setNGVisible("CPI_CLIENT_MAIL_RECEIVED_DATE", true);
					formObject.setSpecificDateFormat("CPI_CLIENT_MAIL_RECEIVED_DATE", "dd/MM/yyyy");
					formObject.setNGVisible("Label67", true);
					formObject.setNGVisible("CPI_DMS_NO", true);
					formObject.setNGVisible("Label64", true);
					formObject.setNGVisible("CPI_REJECTED_TO_IT", true);
					formObject.setNGVisible("Label66", true);
					formObject.setNGVisible("CPI_Samadhan_Interaction_ID", true);
					formObject.setNGLocked("CPI_Samadhan_Interaction_ID", false);
					// formObject.setNGControlTop("Frame3",993);
					//////// //System.out.println("end field bag set datawashing
					// case ");
				}
				if (sActivityName.equalsIgnoreCase("Endorsement")) {
					// //System.out.println("vaibhav GST Datawashinggg1");
					formObject.setNGVisible("Frame back_Coins", false);
					formObject.setNGVisible("Datawashing_Route_To", true);
					formObject.setNGVisible("Datawashing Email frame", true);
					/***************************
					 * PID-CPI process changes
					 ***************************/
					// formObject.setNGControlTop("Datawashing_Route_To", 993);
					formObject.setNGControlTop("Frame_PaymentGrid", 1073); // 1073+182
					formObject.setNGControlTop("Frame_SPNAMES", 1255); // 1335+90//1335+150//1255+150=1405
					formObject.setNGControlTop("Datawashing_Route_To", 1405);// 1425+87//1485+87//1405+87=
																				// 1492
					formObject.setNGLocked("Frame_SPNAMES", false);
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					/****
					 * Start CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ******/
					formObject.setNGVisible("Frame_DocUpload", true);
					/**************** PID-CPI process changes **************/
					/*
					 * formObject.setNGControlTop("Frame_DocUpload", 1080);
					 * formObject.setNGControlTop("Frame3", 1160);
					 */
					formObject.setNGControlTop("Frame_DocUpload", 1492); // 1512+80//1572+80//1492+80=1572
					formObject.setNGControlTop("Frame3", 1572); // 1592+90
																// //1652+90//1572+90=1662
					/************* End PID-CPI process changes *************/
					/****
					 * End CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ********/
					formObject.setNGEnable("CPI_Route_To", true);
					formObject.setNGLocked("CPI_Route_To", true);
					formObject.setNGValue("Label69", "Route To");
					formObject.setNGValue("Label70", "Rout back to CPU Data Washing");
					formObject.NGAddItem("CPI_Route_to", "CPU_Data_Washing");
					if (!formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase("")) {
						formObject.setNGVisible("Datawashing Email frame", true);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						// formObject.setNGControlTop("Datawashing Email frame",
						// 1245);
						formObject.setNGControlTop("Datawashing Email frame", 1662);
						formObject.setNGControlTop("Frame_GST", 1762); // CR-8127-95325
																		// :
																		// GST-Omniflow
																		// development
						/***********************
						 * End PID-CPI process changes
						 ***************************/
						formObject.setNGVisible("Btn_MailCompose", false);
					} else {
						formObject.setNGControlTop("Frame_GST", 1662); // CR-8127-95325
																		// :
																		// GST-Omniflow
																		// development
					}
					/*************************
					 * CPI PID Additional Points
					 *****************************/
					String reRouteStatus = formObject.getNGValue("CPI_REROUTE_CPUHEALTH_TO_DW");
					if (reRouteStatus != null && reRouteStatus.equals("Yes")) {
						formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
						formObject.setNGEnable("Frame_PaymentGrid", false);

					}
					/*************************
					 * End CPI PID Additional Points
					 **************************/
				}
			}
			/* CR-OMCPI-1314-03 CPU DataWashing END */

			/*
			 * CR-OMCPI-1314-03 CPU DataWashing Start - commenting following
			 * code
			 */
			/*
			 * if(sActivityName.equalsIgnoreCase("Endorsement") &&
			 * formObject.getNGValue("CPI_DATAWASHING_STATUS").equalsIgnoreCase(
			 * "1")) { //////// //System.out.
			 * println("Fieldvalue bagset: Inside else for CR 46 condition 3 : "
			 * ); formObject.setNGEnable("CPI_Route_To",true);
			 * formObject.setNGLocked("CPI_Route_To",true); }
			 * if(sActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
			 * formObject.setNGValue("Label69","Route To");
			 * formObject.setNGValue("Label70","Routing in case of exception");
			 * }
			 */
			/* CR-OMCPI-1314-03 CPU DataWashing END */
			/******************* End CR 46 CPU Datawashing ********************/

			/* for co insurance */
			if (!sActivityName.equalsIgnoreCase("Work Introduction1") && !sActivityName.equalsIgnoreCase("Endorsement")
					&& !sActivityName
							.equalsIgnoreCase("RM_Green_File")/* )//satish */
					&& !sActivityName.equalsIgnoreCase("CO_Insurance")
					&& !sActivityName.equalsIgnoreCase("Co_Insurance_RM")
					&& !sActivityName.equalsIgnoreCase("CPU_Assignment")
					&& !sActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")/* CR 46 CPU DataWashing */
					&& !sActivityName.equalsIgnoreCase(
							"CPU_DW_Clarification")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 */
					&& !sActivityName.equalsIgnoreCase("COPS_Policy_Endr")
					&& !sActivityName.equalsIgnoreCase("COPS_Policy_Print")
					&& !sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")
					&& !formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER")) // CR-8001-70893
																								// Marine
																								// CR
			{
				formObject.setNGValue("END_PRODUCT_TYPE", formObject.getNGValue("CPI_PRODUCT_TYPE"));

				formObject.setNGValue("End_Client_Information", formObject.getNGValue("CPI_CLIENT_INFORMATION")); // CR
																													// 6
																													// over
																													// CR
																													// 12

				// =========== CR 15 =================
				// formObject.NGAddItem("Corp_SP_Name",formObject.getNGValue("CPI_SPECIFIED_PERSON"));
				// formObject.NGAddItem("End_SP_Name",formObject.getNGValue("CPI_SPECIFIED_PERSON"));

				// formObject.setNGValue("Corp_SP_Name",formObject.getNGValue("CPI_SPECIFIED_PERSON"));
				// formObject.setNGValue("End_SP_Name",formObject.getNGValue("CPI_SPECIFIED_PERSON"));
				// // =========== End CR 15 =============
				//////// //System.out.println("CPI_AGENT_CODE is No: " +
				// formObject.getNGValue("CPI_AGENT_CODE"));
				// =========== CR Quote SYS =================

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {

					formObject.NGAddItem("Corp_SP_Name", formObject.getNGValue("CPI_SPECIFIED_PERSON"));
					formObject.setNGValue("Corp_SP_Name", formObject.getNGValue("CPI_SPECIFIED_PERSON"));
					formObject.setNGValue("Corp_QuoteSYSID", formObject.getNGValue("CPI_quOTE_SYS_ID"));
					/***** Start CR-8001-87420-Green File Digitization *****/
					// mm
					// //System.out.println("Inside bsg_qc setting value to corp
					// fields ");
					formObject.setNGValue("CORP_ADDTNL_CIT_RM_ID", formObject.getNGValue("CPI_ADDTNL_CIT_RM_ID"));
					formObject.setNGValue("CORP_ADDTNL_CIT_RM_NAME", formObject.getNGValue("CPI_ADDTNL_CIT_RM_NAME"));
					formObject.setNGValue("CORP_UW_EMP_ID", formObject.getNGValue("CPI_UW_EMP_ID"));
					formObject.setNGValue("CORP_UW_NAME", formObject.getNGValue("CPI_UW_NAME"));
					// //System.out.println("Corp Values are
					// :"+formObject.getNGValue("CORP_ADDTNL_CIT_RM_ID")+":"+formObject.getNGValue("CORP_ADDTNL_CIT_RM_NAME")+":"+formObject.getNGValue("CORP_UW_EMP_ID")+":"+formObject.getNGValue("CORP_UW_NAME"));
					/***** End CR-8001-87420-Green File Digitization *****/
					/*************************
					 * CPI PID Additional Points
					 *****************************/
					//////// //System.out.println("CORP_RISK_EXPIRY_DATE is No:
					//////// " +
					//////// formObject.getNGValue("CORP_RISK_EXPIRY_DATE"));
					formObject.setSpecificDateFormat("CORP_RISK_EXPIRY_DATE", "dd/MM/yyyy");
					formObject.setNGLocked("CORP_RISK_EXPIRY_DATE", false);
					formObject.setNGValue("Corp_AGENT_CODE", formObject.getNGValue("CPI_AGENT_CODE"));

					/*************************
					 * End CPI PID Additional Points
					 **************************/
				} else {
					formObject.NGAddItem("End_SP_Name", formObject.getNGValue("CPI_SPECIFIED_PERSON"));
					formObject.setNGValue("End_SP_Name", formObject.getNGValue("CPI_SPECIFIED_PERSON"));
					/***** Start CR-8001-87420-Green File Digitization *****/
					// //System.out.println("Inside the value setting ");
					formObject.setNGValue("END_ADDTNL_CIT_RM_ID", formObject.getNGValue("CPI_ADDTNL_CIT_RM_ID"));
					formObject.setNGValue("END_ADDTNL_CIT_RM_NAME", formObject.getNGValue("CPI_ADDTNL_CIT_RM_NAME"));
					formObject.setNGValue("END_UW_EMP_ID", formObject.getNGValue("CPI_UW_EMP_ID"));
					formObject.setNGValue("END_UW_NAME", formObject.getNGValue("CPI_UW_NAME"));
					/***** End CR-8001-87420-Green File Digitization *****/
					formObject.setNGValue("End_AGENT_CODE", formObject.getNGValue("CPI_AGENT_CODE"));
				}
				// =========== End CR Quote SYS =================
				/*******************************
				 * CR 44 by satish
				 ****************************/
				formObject.setNGLocked("End_coINSURANCE", false);
				// formObject.setNGEnable("End_coINSURANCE",false);
				/****************************
				 * end CR 44 by satish
				 ***************************/
				/******************* CR 45 Network Partner ********************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					formObject.setNGVisible("Label124", false);
					formObject.setNGVisible("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
				} else {
					formObject.setNGVisible("Label124", true);
					formObject.setNGVisible("CPI_ORG_PROPOSAL_FORM_RECEIVED", true);
					//////// //System.out.println("sat CR 45 if
					//////// CPI_ORG_PROPOSAL_FORM_RECEIVED is No: " +
					//////// formObject.getNGValue("CPI_NETWORK_PARTNER"));
				}
				/*****************
				 * end CR 45 Network Partner
				 *******************/
			}

			if (!(sActivityName.equalsIgnoreCase("Work Introduction1") || sActivityName.equalsIgnoreCase("Endorsement")
					|| sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Co_Insurance")
					|| sActivityName.equalsIgnoreCase("Co_Insurance_RM")
					|| sActivityName.equalsIgnoreCase("CPU_Assignment")
					|| sActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")/* CR 46 CPU DataWashing */
					|| sActivityName.equalsIgnoreCase("CPU_DW_Clarification")
					|| sActivityName.equalsIgnoreCase("RM_Clarification")
					|| sActivityName.equalsIgnoreCase("COPS_Policy_Endr")
					|| sActivityName.equalsIgnoreCase("COPS_Policy_Print"))) { // PID_CPI
																				// process
																				// changes
																				// //CR-8001-70893
																				// Marine
																				// CR
				formObject.setSpecificDateFormat("CPI_FILE_QC_DATE", "dd/MM/yyyy");
				//////// //System.out.println("other than normal worksteps" +
				//////// sActivityName);
				/*
				 * if (formObject.getNGValue("CPI_Process_Type").
				 * equalsIgnoreCase("Corporate Policy Insurance")) { ////////
				 * //System.out.println("Ravi1"); ////////
				 * //System.out.println("Ravi shankar3" +
				 * formObject.isNGLocked("Corp_PRODUCT_NAME"));
				 * /*************************** PID-CPI process changes
				 ***************************/
				/*
				 * formObject.NGAddItem("Corp_MODE_OF_PAYMENT", "Cheque");
				 * formObject.NGAddItem("Corp_MODE_OF_PAYMENT", "DD");
				 * formObject.NGAddItem("Corp_MODE_OF_PAYMENT", "NA");
				 * formObject.NGAddItem("Corp_MODE_OF_PAYMENT", "CD");
				 * formObject.NGAddItem("Corp_MODE_OF_PAYMENT",
				 * "Fund Transfer");
				 * formObject.NGAddItem("Corp_MODE_OF_PAYMENT", "BG");
				 * formObject.NGAddItem("Corp_MODE_OF_PAYMENT", "Adjustment");
				 */
				/*
				 * formObject.setNGEnable("Corp_moDE_OF_PAYMENT", false);
				 * formObject.setNGLocked("Corp_MODE_OF_PAYMENT", false);
				 * formObject.setNGLocked("Corp_INST_NO_CD_NO_DEP_SLIP_NO",
				 * false); formObject.setNGLocked("Corp_BANK_NAME_CD_NAME",
				 * false); formObject.setNGEnable("Corp_INSTRUMENT_DATE",
				 * false); formObject.setNGLocked("Corp_INSTRUMENT_DATE",
				 * false);
				 */ // Suraj
				/*
				 * formObject.setNGEnable("Frame_PaymentGrid",false);
				 * /*********************** End PID-CPI process changes
				 ***************************/
				/*
				 * } if
				 * (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase(
				 * "Endorsement")) { /*************************** PID-CPI
				 * process changes
				 ***************************/
				/*
				 * formObject.NGAddItem("End_MODE_OF_PAYMENT", "Cheque");
				 * formObject.NGAddItem("End_MODE_OF_PAYMENT", "DD");
				 * formObject.NGAddItem("End_MODE_OF_PAYMENT", "NA");
				 * formObject.NGAddItem("End_MODE_OF_PAYMENT", "CD");
				 * formObject.NGAddItem("End_MODE_OF_PAYMENT", "Fund Transfer");
				 * formObject.NGAddItem("End_MODE_OF_PAYMENT", "BG");
				 * formObject.NGAddItem("End_MODE_OF_PAYMENT", "Adjustment");
				 */

				/*
				 * formObject.setNGEnable("End_moDE_OF_PAYMENT", false);
				 * formObject.setNGLocked("End_MODE_OF_PAYMENT", false);
				 * formObject.setNGLocked("End_INSTRUMENT_AMOUNT", false);
				 * formObject.setNGLocked("End_INST_NO_CD_NO_DEP_SLIP_NO",
				 * false); formObject.setNGLocked("End_BANK_NAME_CD_NAME",
				 * false); formObject.setNGEnable("End_INSTRUMENT_DATE", false);
				 * formObject.setNGLocked("End_INSTRUMENT_DATE", false);
				 */ // Suraj
				/*
				 * formObject.setNGEnable("Frame_PaymentGrid",false);
				 * /*********************** End PID-CPI process changes
				 ***************************/
				// }
				formObject.setNGEnable("Frame_PaymentGrid", false);
				//////// //System.out.println("sandy##::\t" +
				//////// formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL"));
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				if (!sActivityName.equalsIgnoreCase("UW_DEO") && !sActivityName.equalsIgnoreCase("DEO_Clarification")) {
					formObject.setNGLocked("Corp_PROPOSAL_NO", false);// CPI PID
																		// Additional
																		// Points
				}
				if (sActivityName.equalsIgnoreCase("Ins_Org_PF") || sActivityName.equalsIgnoreCase("Rejected_To_IT")) {
					formObject.setNGLocked("CPI_PROPOSAL_NO", false);
				}
				/*************************
				 * End CPI PID Additional Points
				 **************************/
			}

			if (sActivityName.equalsIgnoreCase("BSG_QC")) {
				/*******************************
				 * CR 44 by satish
				 ****************************/
				if (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("iPartner")) {
					Frames.add("Frame Processing Hub Fields");
					formObject.setNGValue("Label59", "BSG QC Fields");
					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					formObject.setNGVisible("Label132", false);
					formObject.setNGVisible("CPI_PH_SEND_TO", false);
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				}
				/****************************
				 * end CR 44 by satish
				 ***************************/
				/***************************
				 * PID-CPI process changes
				 ***************************/
				// Suraj
				Frames.add("Frame_PaymentGrid");
				formObject.setNGLocked("Frame_PaymentGrid", false);

				Frames.add("Frame_SPNAMES");
				formObject.setNGLocked("Frame_SPNAMES", false);
				/***********************
				 * End PID-CPI process changes
				 ***************************/

				/***** Quote BSG_QC URN generate Suraj *********/
				if (formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("Leader")) {
					//////// //System.out.println("URN Frames ADD");
					Frames.add("Frame LEADER URN NUMBER");
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGEnable("Gen_Urn_No", false);
				}
				/***** End Quote BSG_QC URN generate Suraj *********/

				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Vaibhav
				 ***********************/
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))// code
																									// removed
																									// GREEN
																									// FILE
																									// Digitization
				{
					System.out.println(
							"Adding Frames In BSG_QC Buckets Endorsement Case..GreenFile Vaibhav In FieldvalueBagSet Method.2");
					Frames.add("Frame_DocUpload");
					formObject.setNGVisible("Frame_DocUpload", true);
					formObject.setNGEnable("Frame_DocUpload", true);// CR-8001-71104_CR-8119-87478_Auto
																	// CPI
																	// generation
																	// iPartner

				} else {
					System.out.println(
							"Adding Frames In BSG_QC Buckets Normal Case..GreenFile Vaibhav In FieldvalueBagSet Method.3");
					if (!(formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4037")
							|| formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4047"))) {
						System.out.println(
								"Adding Frames In BSG_QC Buckets IF..GreenFile Vaibhav In FieldvalueBagSet Method.2");
						Frames.add("Frame_DocUpload");
						formObject.setNGVisible("Frame_DocUpload", true);
						formObject.setNGEnable("Frame_DocUpload", true);

					} else {
						System.out.println(
								"Adding Frames In BSG_QC Buckets Else..GreenFile Vaibhav In FieldvalueBagSet Method.2");
						Frames.add("Frame_DocUpload");
						formObject.setNGVisible("Frame_DocUpload", true);
						formObject.setNGEnable("Frame_DocUpload", true);// CR-8001-71104_CR-8119-87478_Auto
																		// CPI
																		// generation
																		// iPartner

					}
				}

				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Vaibhav
				 ***********************/

				Frames.add("Frame_Withdrawal");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				/* CR-OMCPI-1314-03 CPU DataWashing Start */
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& !formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase("")) {
					Frames.add("BSG Datawashing Email frame");
					formObject.setNGVisible("Btn_MailCompose", false);
				}
				/* CR-OMCPI-1314-03 CPU DataWashing End */
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				if ((formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance"))
						&& (formObject.getNGValue("CPI_co_Insurance_status").equalsIgnoreCase("CO Insurance"))) {
					// Frames.add("Frame_coins_cpi");
				} else if ((formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement"))
						&& (formObject.getNGValue("CPI_co_Insurance_status").equalsIgnoreCase("CO Insurance"))) {
					// Frames.add("Frame_coins_End");
				}
				//////// //System.out.println("datesandeep1" +
				//////// dateformat.format(new Date()));
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));// bugfix
																						// bsg_qc
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				//////// //System.out.println("sunil9999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				/******************* CR 45 Network Partner ********************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
						&& !formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("iPartner")) {
					//////// //System.out.println("1 CR 45 inside BSG_QC
					//////// wrkstep,CPI_NETWORK_PARTNER " +
					//////// formObject.getNGValue("CPI_NETWORK_PARTNER"));
					if (formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("Yes")) {
						//////// //System.out.println("1 CR 45 if
						//////// CPI_NETWORK_PARTNER is Yes: " +
						//////// formObject.getNGValue("CPI_NETWORK_PARTNER"));
						formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED", true);
						formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED", true);
					} else {
						//////// //System.out.println("1 CR 45 if
						//////// CPI_NETWORK_PARTNER is No: " +
						//////// formObject.getNGValue("CPI_NETWORK_PARTNER"));
						formObject.setNGListIndex("CPI_ORG_PROPOSAL_FORM_RECEIVED", 0);
						formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
						formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
					}
				} else {
					//////// //System.out.println("1 CR 45 not inside BSG_QC
					//////// wrkstep: ");
					formObject.setNGListIndex("CPI_ORG_PROPOSAL_FORM_RECEIVED", 0);
					formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
					formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
				}
				/*****************
				 * end CR 45 Network Partner
				 *******************/
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				/*
				 * if ((formObject.getNGValue("CPI_TRANSACTION_TYPE").
				 * equalsIgnoreCase("New Client") ||
				 * formObject.getNGValue("CPI_TRANSACTION_TYPE").
				 * equalsIgnoreCase("New From Exisiting Client")) &&
				 * formObject.getNGValue("CPI_Process_Type").
				 * equalsIgnoreCase("Corporate Policy Insurance") &&
				 * formObject.getNGValue("CPI_pas").equalsIgnoreCase(
				 * "Pathfinder") &&
				 * formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""
				 * )) { ////////
				 * //System.out.println("CPI_TRANSACTION_TYPE is empty");
				 * formObject.setNGValue("CPI_CUSTOMER_ID","");
				 * formObject.setNGLocked("CPI_CUSTOMER_ID",false); }
				 */
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				/***** Quote BSG_QC URN generate Suraj *********/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
						&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
					formObject.setNGEnable("Gen_Urn_No", false);
					//////// //System.out.println("Quote BSG_QC URN generate
					//////// Suraj to enable/disable Gen_Urn_No button");
					String coin_dd = formObject.getNGValue("CPI_CoInsurance");
					//////// //System.out.println("Quote URN coin_dd
					//////// >>"+coin_dd);
					if (formObject.getNGValue("CPI_CoInsurance") != null) {
						if (coin_dd != null && coin_dd.equalsIgnoreCase("Leader")) {
							//////// //System.out.println("IN LEADER CASE
							//////// Gen_Urn_No enable");
							formObject.setNGEnable("Gen_Urn_No", true);
							//////// //System.out.println("IN LEADER CASE
							//////// Gen_Urn_No enabled 12");
							formObject.setNGLocked("CPI_Leader_URN_No", false);
						} else if (coin_dd != null && (coin_dd.equalsIgnoreCase("Follower")
								|| coin_dd.equalsIgnoreCase("No Co-Insurance"))) {
							//////// //System.out.println("IN Follower/No
							//////// Co-Insurance CASE Gen_Urn_No disable");
							formObject.setNGEnable("Gen_Urn_No", false);
							if (coin_dd.equalsIgnoreCase("Follower")) {
								formObject.setNGLocked("CPI_Leader_URN_No", true);
							} else {
								formObject.setNGLocked("CPI_Leader_URN_No", false);
							}
						}
						if (formObject.getNGValue("CPI_LEADER_URN_NO") != null
								&& !formObject.getNGValue("CPI_LEADER_URN_NO").equalsIgnoreCase("")) {
							//////// //System.out.println("CPI_LEADER_URN_NO
							//////// present");
							formObject.setNGEnable("Gen_Urn_No", false);
						}

					}

				}
				/***** End Quote BSG_QC URN generate Suraj *********/
				/***********************
				 * Start CR-8001-61337 URN Medium Priority
				 ***************************/
				//////// //System.out.println("Start CR-8001-61337 URN Medium
				//////// Priority");
				if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
						&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
						&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
								|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))) // Done
																												// for
																												// only
																												// Sync
																												// cases
				{
					//////// //System.out.println("inside BBG/KRG in
					//////// fieldvaluebagset BSG_QC ");
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						//////// //System.out.println("inside CPI BBG/KRG in
						//////// fieldvaluebagset BSG_QC for Sync cases");
						formObject.setNGLocked("CORP_CIF_ID", true);
						formObject.setNGEnable("CORP_CIF_ID", true);

						formObject.setNGLocked("Corp_Channel_Employee_Name", true);
						formObject.setNGEnable("Corp_Channel_Employee_Name", true);

						formObject.setNGLocked("CORP_CHANNEL_EMPLOYEE_ID", true);
						formObject.setNGEnable("CORP_CHANNEL_EMPLOYEE_ID", true);

					} else {
						//////// //System.out.println("inside Endorsement
						//////// BBG/KRG in fieldvaluebagset BSG_QC for Sync
						//////// cases");
						formObject.setNGLocked("End_CIF_ID", true);
						formObject.setNGEnable("End_CIF_ID", true);

						formObject.setNGLocked("End_Channel_Employee_Name", true);
						formObject.setNGEnable("End_Channel_Employee_Name", true);

						formObject.setNGLocked("End_CHANNEL_EMPLOYEE_ID", true);
						formObject.setNGEnable("End_CHANNEL_EMPLOYEE_ID", true);
					}
				}

				/**********************
				 * Start Omni flow CPI –Channel Employee id – MH V 1.0
				 **********************/
				//////// //System.out.println("Start Omni flow CPI –Channel
				//////// Employee id – MH V 1.0");
				// if
				//////// (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))
				if (formObject.getNGValue("CPI_quOTE_SYS_ID") != null
						&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {

					//////// //System.out.println("Inside fieldvaluebagset
					//////// Method Checking For MH For Quote Cases Omni flow
					//////// CPI –Channel Employee id – MH V 1.0: ");
					//////// //System.out.println("In fieldValueBagSet Method
					//////// Omni flow CPI –Channel Employee id – MH V
					//////// 1.0:"+sActivityName);
					formObject.setNGEnable("CPI_MH", true);
					formObject.setNGLocked("CPI_MH", true);
					/**********************
					 * Start Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 *************************/
					formObject.setNGLocked("CPI_boOKING_TYPE", true);
					formObject.setNGEnable("CPI_boOKING_TYPE", true);
					/**********************
					 * End Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 ***************************/
					//////// //System.out.println("After CPI_MH Enabling");
					if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("Yes")) {
						//////// //System.out.println("Inside fieldvaluebagset
						//////// Method : " +formObject.getNGValue("CPI_MH"));
						formObject.setNGValue("CPI_Exception_To_MH", "");
						formObject.NGFocus("CPI_MH_Interaction_No");
						formObject.setNGLocked("CPI_MH_Interaction_No", true);
						formObject.setNGEnable("CPI_MH_Interaction_No", true);
						formObject.setNGLocked("CPI_Exception_To_MH", false);
						formObject.setNGEnable("CPI_Exception_To_MH", false);

					} else if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("No")) {
						//////// //System.out.println("Inside fieldvaluebagset
						//////// Method : " +formObject.getNGValue("CPI_MH"));
						formObject.setNGValue("CPI_MH_Interaction_No", "");
						formObject.NGFocus("CPI_Exception_To_MH");
						formObject.setNGLocked("CPI_Exception_To_MH", false);
						formObject.setNGEnable("CPI_Exception_To_MH", true);
						formObject.setNGEnable("CPI_MH_Interaction_No", false);
						formObject.setNGLocked("CPI_MH_Interaction_No", false);

					}
					//////// //System.out.println("Exiting fieldvaluebagset
					//////// Method Checking For MH For Quote Cases Omni flow
					//////// CPI –Channel Employee id – MH V 1.0: ");
				}

				/**********************
				 * End Omni flow CPI –Channel Employee id – MH V 1.0
				 **********************/

				// to check product type in BSG_QC fieldvaluebagset
				//////// //System.out.println("Value of End product_type in
				// BSG_QC fieldvaluebagset: " +
				// formObject.getNGValue("End_PRODUCT_TYPE"));

				//////// //System.out.println("Value of CPI product_type in
				//////// BSG_QC fieldvaluebagset: " +
				//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));
				/***********************
				 * End CR-8001-61337 URN Medium Priority
				 ***************************/
			}

			/***************************
			 * PID-CPI process changes
			 ***************************/
			else if (sActivityName.equalsIgnoreCase("COPS_Cust_Id")
					|| sActivityName.equalsIgnoreCase("PF_PID_CPI_Update")) {
				Frames.add("Frame_PaymentGrid");
				formObject.setNGLocked("Frame_PaymentGrid", false); // Suraj
				Frames.add("Frame_SPNAMES");
				formObject.setNGLocked("Frame_SPNAMES", false);
				if (sActivityName.equalsIgnoreCase("COPS_Cust_Id")) {
					if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
							|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
						Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
																// CR-8001-56225
						formObject.setNGVisible("Frame LEADER URN NUMBER", true);
						formObject.setNGLocked("Frame LEADER URN NUMBER", false);
						//////// //System.out.println("Adding URN Frame-Read
						//////// only for follower case in COPS_Cust_Id");
					}
				}
				Frames.add("Frame_Withdrawal");
				Frames.add("Frame_Route_To");
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				// System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");

			}
			/***********************
			 * End PID-CPI process changes
			 ***************************/

			/***************************
			 * Vendor login & weather Product
			 ****************************/

			else if (sActivityName.equalsIgnoreCase("Vendor_Assignment")) {
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("Vendor_Assignment:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				formObject.setNGVisible("Frame_Vendor_Assgn_Fields", true);
				Frames.add("Frame_PaymentGrid");
				formObject.setNGLocked("Frame_PaymentGrid", false);
				Frames.add("Frame_SPNAMES");
				Frames.add("Frame_Vendor_Assgn_Fields");
				formObject.setNGLocked("Frame_SPNAMES", false);
				Frames.add("Frame Remarks");
				formObject.setNGLocked("Frame Corporate Policy Issuance", false);
				formObject.setNGLocked("Frame Endorsement", false);
				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGEnable("Frame Corporate Policy Issuance", false);
				formObject.setNGEnable("Frame Endorsement", false);
				formObject.setNGEnable("Frame BSG QC Check Fields", false);
				if (!formObject.getNGValue("CPI_VENDOR_ASSGN_SEND_TO").equalsIgnoreCase("--Select--"))
					;
				{
					formObject.setNGListIndex("CPI_VENDOR_ASSGN_SEND_TO", 0);
				}

			} else if (sActivityName.equalsIgnoreCase("Vendor1") || sActivityName.equalsIgnoreCase("Vendor2")) {
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("Vendor1 Vendor2:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				formObject.setNGVisible("Frame_DocUpload", true);
				formObject.setNGVisible("Btn_DocView", false); // code added on
																// 29/05/2015
				//////// //System.out.println("Btn_DocView :Disable:");
				formObject.setNGVisible("Btn_VenDocview", true); // code added
																	// on
																	// 24/06/2015
				//////// //System.out.println("Btn_VenDocview :Enable:");
				Frames.add("Frame_PaymentGrid");
				formObject.setNGLocked("Frame_PaymentGrid", false);
				Frames.add("Frame_SPNAMES");
				formObject.setNGLocked("Frame_SPNAMES", false);
				Frames.add("Frame_Route_To");
				Frames.add("Frame_DocUpload");
				Frames.add("Frame Remarks");
				if (sActivityName.equalsIgnoreCase("Vendor1")) {
					formObject.setNGVisible("Btn_Vendor1", true);
					// formObject.setNGVisible("Btn_Vendor1", true);
				}
				if (sActivityName.equalsIgnoreCase("Vendor2")) {
					formObject.setNGVisible("Btn_Vendor2", true);
					// formObject.setNGVisible("Btn_Vendor1", true);
				}
				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame Corporate Policy Issuance", false);
				formObject.setNGLocked("Frame Endorsement", false);
				formObject.setNGEnable("Frame Corporate Policy Issuance", false);
				formObject.setNGEnable("Frame Endorsement", false);
				formObject.setNGEnable("Frame BSG QC Check Fields", false);
			}

			/*************************
			 * End Vendor login & weather Product
			 **************************/

			/*************************
			 * CPI PID Additional Points
			 *****************************/
			else if (sActivityName.equalsIgnoreCase("COMPLETE_SYNC")) {
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("Vendor1 Vendor2:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame Processing Hub Fields");
				Frames.add("Frame_Withdrawal");
				Frames.add("Frame_Route_To");
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				formObject.setNGLocked("Frame_PaymentGrid", false);
				formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
				formObject.setNGLocked("Frame_Withdrawal", false);
				formObject.setNGLocked("Frame_Route_To", false);
				formObject.setNGLocked("Frame Remarks", false);
				formObject.setNGLocked("Frame IT_Comments", false);
			}
			/*************************
			 * End CPI PID Additional Points
			 **************************/
			else if (sActivityName.equalsIgnoreCase("CPU_HEALTH") || sActivityName.equalsIgnoreCase("CPU_Approver")) {// CR-OMCPI-1314-05
																														// DataWashing
																														// -
																														// Mail_Management_Extension
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame Processing Hub Fields");
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					formObject.setNGLocked("CPI_POLICY_NO", false);
				} else {
					formObject.setNGLocked("CPI_POLICY_NO", true);
				}
				/***************************
				 * CPI_TRANSACTION_ID Enable for CPU_HEALTH
				 ****************************/
				// CR-8001-54702 E-Mail Filter :Added CPU_Approver wrkstp
				if ((sActivityName.equalsIgnoreCase("CPU_HEALTH") || sActivityName.equalsIgnoreCase("CPU_Approver"))
						&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("CPI_TRANSACTION_ID Enable for
					//////// CPU_Approver CR-8001-54702 E-Mail Filter ");
					//////// //System.out.println("CPI_TRANSACTION_ID Enable for
					//////// CPU_HEALTH"+formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate
					//////// Policy Insurance"));
					if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")) {
						formObject.setNGEnable("CPI_trANSACTION_ID", true);
						formObject.setNGLocked("CPI_trANSACTION_ID", true);
					} else if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")) {
						formObject.setNGEnable("CPI_QUOTE_NO", true);
						formObject.setNGLocked("CPI_QUOTE_NO", true);

					}
				}
				/***************************
				 * End CPI_TRANSACTION_ID Enable for CPU_HEALTH
				 ****************************/
				Frames.add("Frame_Withdrawal");
				Frames.add("Frame_Route_To");
				/* CR-OMCPI-1314-03 CPU DataWashing Start */
				/***********************
				 * Start CR-8001-54702 E-Mail Filter
				 ***************************/
				if (sActivityName.equalsIgnoreCase("CPU_HEALTH")) {
					Frames.add("Frame_CPU_HealthFields");
					// formObject.setNGVisible("Frame_CPU_HealthFields", true);
					formObject.setNGEnable("CPI_CPU_SEND_TO", true);
				}
				/***********************
				 * End CR-8001-54702 E-Mail Filter
				 ***************************/

				/****
				 * Start CR-OMCPI-1314-05 DataWashing -
				 * Mail_Management_Extension
				 ******/
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {

					/*
					 * if(sActivityName.equalsIgnoreCase("CPU_HEALTH")){
					 * Frames.add("Frame_CPU_HealthFields");
					 * //formObject.setNGVisible("Frame_CPU_HealthFields",
					 * true); formObject.setNGEnable("CPI_CPU_SEND_TO", true); }
					 */ // commenting as frame is needed for all cases(Dw and
						// normal health) End E-Mail Filter CR-8001-54702
					Frames.add("Route_back_to_DW_frame");
					formObject.setNGVisible("Route_back_to_DW_frame", true);

					/* CR-OMCPI-1314-03 CPU DataWashing Start */
					if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
						//////// //System.out.println("test
						//////// CPI_CO_INS_ROUTE_TO_BACK ==");
						formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", true);
						formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", true);
						if (sActivityName.equalsIgnoreCase("CPU_HEALTH")) {
							formObject.NGAddItem("CPI_Route_to", "CPU Datawashing Clarification");
						}
					}
					/* CR-OMCPI-1314-03 CPU DataWashing End */
					/****
					 * End CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ********/
				}
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& !formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase("")) {
					Frames.add("BSG Datawashing Email frame");
					formObject.setNGVisible("Btn_MailCompose", false);
				}
				// Sadik
				// //System.out.println("Sadik CR9 CPI_MAIL_TO_CLIENT in
				// CpuHealthpBucket Add On Exception");
				if (sActivityName.equalsIgnoreCase("CPU_HEALTH")
						&& formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
					// //System.out.println("Sadik CR9 CPI_MAIL_TO_CLIENT in
					// CpuHealthpBucket Add");
					formObject.NGAddItem("CPI_MAIL_TO_CLIENT", "Yes");
					formObject.NGAddItem("CPI_MAIL_TO_CLIENT", "No");
					formObject.setNGLocked("CPI_MAIL_TO_CLIENT", false);
					formObject.setNGEnable("CPI_MAIL_TO_CLIENT", false);

				}
				// End
				/* CR-OMCPI-1314-03 CPU DataWashing End */
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				// System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				formObject.setNGVisible("Label132", false);
				formObject.setNGVisible("CPI_PH_SEND_TO", false);
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("bhagat --sCPI_RM_ID " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				//////// //System.out.println("bhagat --sCPI_RM_ID " +
				//////// sCPI_RM_ID);

				formObject.setNGEnable("CPI_ROUTE_TO", false);
			} // end bhagat CR CPU_HEALTH
			else if (sActivityName.equalsIgnoreCase("UW_DEO")) {
				// //System.out.println("Setting Frame GST to new Position");
				/***************************
				 * PID-CPI process changes
				 ***************************/
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				formObject.setNGLocked("Frame_PaymentGrid", false); // Suraj
				Frames.add("Frame_SPNAMES");
				formObject.setNGLocked("Frame_SPNAMES", false);
				//////// //System.out.println("Coinsrnce value in uw_deo before
				//////// adding LEADER frame
				//////// "+formObject.getNGValue("CPI_coINSURANCE"));
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in UW_DEO");
				}
				/***********************
				 * End PID-CPI process changes
				 ***************************/

				/***************************
				 * Vendor login & weather Product
				 ****************************/

				String prodIrdaCode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
				//////// //System.out.println("prodIrdaCode before==" +
				//////// prodIrdaCode);
				if (prodIrdaCode.equalsIgnoreCase("4037") || prodIrdaCode.equalsIgnoreCase("4047"))// weather
																									// product
				{
					//////// //System.out.println("prodIrdaCode in uw_deo==" +
					//////// prodIrdaCode);
					formObject.NGAddItem("CPI_Route_to", "Vendor1Clarification");
					formObject.NGAddItem("CPI_Route_to", "Vendor2Clarification");
				}

				/*************************
				 * End Vendor login & weather Product
				 **************************/

				Frames.add("Frame_UW_DEO_Fields");
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				/*
				 * formObject.setNGVisible("Label120", true);
				 * formObject.setNGVisible("Corp_PROPOSAL_NO", true);
				 */
				if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
						|| formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Pathfinder")
						|| formObject.getNGValue("End_PAS").equalsIgnoreCase("Pathfinder")) {
					//////// //System.out.println("if in uw_deo==");
					formObject.setNGLocked("Corp_PROPOSAL_NO", true);
				} else {
					//////// //System.out.println("else in uw_deo==");
					formObject.setNGLocked("Corp_PROPOSAL_NO", false);
				}
				/*************************
				 * End CPI PID Additional Points
				 **************************/

				Frames.add("Frame_Route_To");
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				// System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				formObject.setNGEnable("CPI_ROUTE_TO", false);
			} else if (sActivityName.equalsIgnoreCase("BSG_Clarification")
					|| sActivityName.equalsIgnoreCase("BSG_Ap_Clarification")
					|| sActivityName.equalsIgnoreCase("RM_Clarification")
					|| sActivityName.equalsIgnoreCase("DEO_Clarification")
					|| /*
						 * =============================CR 42 Additional UW
						 * worksteps=============================
						 */ sActivityName.equalsIgnoreCase("UW1_Clarification")
					|| sActivityName.equalsIgnoreCase("UW2_Clarification")
					|| sActivityName.equalsIgnoreCase("UW3_Clarification")
					|| /*
						 * ===========================End CR 42 Additional UW
						 * worksteps===========================
						 */ sActivityName.equalsIgnoreCase("Corp_UWClarification")
					|| sActivityName.equalsIgnoreCase("RI_Clarification")
					|| sActivityName.equalsIgnoreCase("ProcHubClarification")
					|| sActivityName.equalsIgnoreCase(
							"PHPrintClarification")/* bhagat CR CPU_HEALTH */
					|| sActivityName.equalsIgnoreCase(
							"CPU_Clarification")/* end bhagat CR CPU_HEALTH */
					|| sActivityName.equalsIgnoreCase("CPUCustClarification")
					|| sActivityName.equalsIgnoreCase("Vendor1Clarification")
					|| sActivityName.equalsIgnoreCase("Vendor2Clarification")
							&& !formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER")) { // Vendor
																											// login
																											// &
																											// weather
																											// Product
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//// System.out.println("sat:sCPI_RM_ID: " + sCPI_RM_ID);
				//// System.out.println("sat:sCPI_RM_ID_Jaseem: " + sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));// bug
																						// fix
																						// CPUCustClarification
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				formObject.setNGLocked("Frame_PaymentGrid", false);// CPI PID
																	// Additional
																	// Points
				// CPU Health bhagat
				/* start Quote BSG_QC URN generate Suraj */
				if (sActivityName.equalsIgnoreCase("BSG_Clarification")
						|| sActivityName.equalsIgnoreCase("RM_Clarification")) {
					Frames.add("Frame LEADER URN NUMBER");
					/**********************
					 * Start CR-8001-87420 GREEN FILE Digitization CR Vaibhav
					 ***********************/
					if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))// code
																										// removed
																										// GREEN
																										// FILE
																										// Digitization
					{
						System.out.println(
								"Adding Frames In Clarification Buckets Endorsement Case..GreenFile Vaibhav In FieldvalueBagSet Method.2");
						Frames.add("Frame_DocUpload");
						formObject.setNGVisible("Frame_DocUpload", true);
						formObject.setNGEnable("Frame_DocUpload", true);//// CR-8001-71104_CR-8119-87478_Auto
																		//// CPI
																		//// generation
																		//// iPartner

					} else {
						System.out.println(
								"Adding Frames In Clarification Buckets Normal Case..GreenFile Vaibhav In FieldvalueBagSet Method.3");
						if (!(formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4037")
								|| formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4047"))) {
							System.out.println(
									"Adding Frames In Clarification Buckets IF..GreenFile Vaibhav In FieldvalueBagSet Method.2");
							Frames.add("Frame_DocUpload");
							formObject.setNGVisible("Frame_DocUpload", true);
							formObject.setNGEnable("Frame_DocUpload", true);

						} else {
							System.out.println(
									"Adding Frames In Clarification Buckets Else..GreenFile Vaibhav In FieldvalueBagSet Method.2");
							Frames.add("Frame_DocUpload");
							formObject.setNGVisible("Frame_DocUpload", true);
							formObject.setNGEnable("Frame_DocUpload", true);// CR-8001-71104_CR-8119-87478_Auto
																			// CPI
																			// generation
																			// iPartner

						}
					}
					/**********************
					 * End CR-8001-87420 GREEN FILE Digitization CR Vaibhav
					 ***********************/
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGVisible("Gen_Urn_No", false);
					//////// //System.out.println("Frame LEADER URN NUMBER
					//////// in=="+sActivityName);
					if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
							|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
						formObject.setNGLocked("CPI_LEADER_URN_NO", true);
						formObject.setNGEnable("CPI_LEADER_URN_NO", true);
					} else {
						formObject.setNGLocked("CPI_LEADER_URN_NO", false);
						formObject.setNGEnable("CPI_LEADER_URN_NO", false);
					}

					/***********************
					 * Start CR-8001-61337 URN Medium Priority
					 ***************************/
					//////// //System.out.println("Value of CPI product_type in
					//////// fieldvaluebagset RM/BSG Clarification: " +
					//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));
					//////// //System.out.println("Value of End product_type in
					//////// fieldvaluebagset RM/BSG Clarification:" +
					//////// formObject.getNGValue("END_PRODUCT_TYPE"));
					//////// //System.out.println("Value of CPI Chaneel_emp_id
					//////// in fieldvaluebagset RM/BSG Clarification: " +
					//////// formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_ID"));
					//////// //System.out.println("Value of CPI channel employee
					//////// NAme in fieldvaluebagset RM/BSG Clarification:" +
					//////// formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_NAME"));
					//////// //System.out.println("Value of Corp Chaneel_emp_id
					//////// in fieldvaluebagset RM/BSG Clarification: " +
					//////// formObject.getNGValue("CORP_CHANNEL_EMPLOYEE_ID"));
					//////// //System.out.println("Value of Corp channel
					//////// employee NAme in fieldvaluebagset RM/BSG
					//////// Clarification:" +
					//////// formObject.getNGValue("Corp_Channel_Employee_Name"));
					//////// //System.out.println("Value of CPI CIF ID in
					//////// fieldvaluebagset RM/BSG Clarification:" +
					//////// formObject.getNGValue("CPI_CIF_ID"));
					//////// //System.out.println("Value of CORP CIF ID in
					//////// fieldvaluebagset RM/BSG Clarification: " +
					//////// formObject.getNGValue("CORP_CIF_ID"));

					if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
							&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
							&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))) // Done
																													// for
																													// only
																													// Sync
																													// cases
					{
						//////// //System.out.println("inside BBG/KRG in
						//////// fieldvaluebagset RM/BSG Clarification for sync
						//////// cases");
						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
							//////// //System.out.println("inside CPI BBG/KRG in
							//////// fieldvaluebagset RM/BSG Clarification ");
							formObject.setNGLocked("CORP_CIF_ID", true);
							formObject.setNGEnable("CORP_CIF_ID", true);

							formObject.setNGLocked("Corp_Channel_Employee_Name", true);
							formObject.setNGEnable("Corp_Channel_Employee_Name", true);

							formObject.setNGLocked("CORP_CHANNEL_EMPLOYEE_ID", true);
							formObject.setNGEnable("CORP_CHANNEL_EMPLOYEE_ID", true);
						} else {
							//////// //System.out.println("inside Endorsement
							//////// BBG/KRG in fieldvaluebagset RM/BSG
							//////// Clarification for Sync cases ");
							formObject.setNGLocked("End_CIF_ID", true);
							formObject.setNGEnable("End_CIF_ID", true);

							formObject.setNGLocked("End_Channel_Employee_Name", true);
							formObject.setNGEnable("End_Channel_Employee_Name", true);

							formObject.setNGLocked("End_CHANNEL_EMPLOYEE_ID", true);
							formObject.setNGEnable("End_CHANNEL_EMPLOYEE_ID", true);
						}
					}
					/***********************
					 * End CR-8001-61337 URN Medium Priority
					 ***************************/

					/**********************
					 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
					 ***********************/

					String totalpremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
					//////// //System.out.println("Inside NGF_EventHandler
					//////// Method Checking totalpremium validation
					//////// CR-8001-59268 : "+totalpremium);
					int totalpremiumparsed = 0;
					boolean flag2 = false;
					if (totalpremium != null && !totalpremium.equalsIgnoreCase("")
							&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
						try {
							totalpremiumparsed = Integer.parseInt(totalpremium);
							//////// //System.out.println("After parsing
							//////// totalpremiumparsed: "+totalpremiumparsed);
						} catch (Exception e) {
							flag2 = true;
						}
						if (!flag2 && totalpremiumparsed >= 100000) {
							if (formObject.getNGValue("CPI_Process_Type")
									.equalsIgnoreCase("Corporate Policy Insurance")) {
								//////// //System.out.println("In
								//////// NGF_EventHandler Method CPI-
								//////// CR-8001-59268(FlapPrint) For
								//////// Rm/BSG_clar:"+sActivityName);
								//////// //System.out.println("Entering In
								//////// NGF_EventHandler Method For Rm/BSG_clar
								//////// Buckets");
								formObject.setNGEnable("Corp_PAN", true);
								formObject.setNGLocked("Corp_PAN", true);
								//////// //System.out.println("Exiting
								//////// NGF_EventHandler Method 8001-59268 For
								//////// Rm/BSG_clar Buckets");
							} else {
								//////// //System.out.println("In
								//////// NGF_EventHandler Method CPI-
								//////// CR-8001-59268(FlapPrint) For
								//////// Rm/BSG_clar :"+sActivityName);
								//////// //System.out.println("Entering In
								//////// NGF_EventHandler Method For Rm/BSG_clar
								//////// Buckets");
								formObject.setNGEnable("End_PAN", true);
								formObject.setNGLocked("End_PAN", true);
								//////// //System.out.println("Exiting
								//////// NGF_EventHandler Method 8001-59268 For
								//////// Rm/BSG_clar Buckets");
							}
						}
					}

					/**********************
					 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
					 ************************/

				} else if (sActivityName.equalsIgnoreCase("BSG_Ap_Clarification")
						|| sActivityName.equalsIgnoreCase("DEO_Clarification")
						|| sActivityName.equalsIgnoreCase("UW1_Clarification")
						|| sActivityName.equalsIgnoreCase("UW2_Clarification")
						|| sActivityName.equalsIgnoreCase("UW3_Clarification")
						|| sActivityName.equalsIgnoreCase("Corp_UWClarification")
						|| sActivityName.equalsIgnoreCase("RI_Clarification")
						|| sActivityName.equalsIgnoreCase("ProcHubClarification")
						|| sActivityName.equalsIgnoreCase("PHPrintClarification")) {
					if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
							|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
						Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
																// CR-8001-56225
						formObject.setNGVisible("Frame LEADER URN NUMBER", true);
						formObject.setNGLocked("Frame LEADER URN NUMBER", false);
						//////// //System.out.println("Adding URN Frame-Read
						//////// only for follower case in clarification");
					}

				}
				/* end Quote BSG_QC URN generate Suraj */
				if (!sActivityName.equalsIgnoreCase("CPU_Clarification")
						&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase(
								"Endorsement") /* CR 46 CPU DataWashing */) {

					Frames.add("Frame_UW_DEO_Fields");

				}
				// Added by Ravi on 16082010 for CR2
				if (sActivityName.equalsIgnoreCase("BSG_Clarification") || sActivityName.equalsIgnoreCase(
						"ProcHubClarification")/* bhagat CR CPU_HEALTH */
						|| sActivityName.equalsIgnoreCase(
								"CPU_Clarification")/*
													 * end bhagat CR CPU_HEALTH
													 */
						|| sActivityName.equalsIgnoreCase(
								"CPUCustClarification") /*
														 * CR 46 CPU DataWashing
														 */) {
					Frames.add("Frame_Withdrawal");
				}

				if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase(
						"Endorsement") /* CR 46 CPU DataWashing */) {
					Frames.add("Frame UW Data Entry QC Fields");
				}
				Frames.add("Frame_Route_To"); // added for CR2 Phase1
				if (sActivityName.equalsIgnoreCase("Corp_UWClarification")
						|| sActivityName.equalsIgnoreCase("RI_Clarification")
						|| sActivityName.equalsIgnoreCase("ProcHubClarification")) {
					Frames.add("Frame Corporate UW Fields");
					formObject.setNGLocked("CPI_REINSURANCE_CASE", false);
					formObject.setNGEnable("CPI_REINSURANCE_CASE", false);
				}
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				/* CR-OMCPI-1314-03 CPU DataWashing Start */
				if ((sActivityName.equalsIgnoreCase("CPUCustClarification")
						|| sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification")
						|| sActivityName.equalsIgnoreCase("Corp_UWClarification")) // CR-OMCPI-1314-05
																					// DataWashing
																					// -
																					// Mail_Management_Extension
						&& (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
								&& !formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase(""))) {
					//////// //System.out.println("testtt" +
					//////// formObject.getNGValue("CPI_DATAWASHING_TYPE"));
					Frames.add("BSG Datawashing Email frame");
					formObject.setNGVisible("BSG Datawashing Email frame", true);
					/****
					 * Start CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ******/
					if (sActivityName.equalsIgnoreCase("BSG_Clarification")
							|| sActivityName.equalsIgnoreCase("Corp_UWClarification")) {
						formObject.setNGVisible("Btn_MailCompose", false);

					}
					/****
					 * End CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ********/
				}
				/* CR-OMCPI-1314-03 CPU DataWashing End */
				/****
				 * Start CR-OMCPI-1314-05 DataWashing -
				 * Mail_Management_Extension
				 ******/
				if (sActivityName.equalsIgnoreCase("RM_Clarification")
						&& formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
					//////// //System.out.println("Frame_DocUpload:");
					Frames.add("Frame_DocUpload");
					formObject.setNGEnable("Frame_PaymentGrid", false);// PID_CPI
																		// process
																		// changes
				}
				/****
				 * End CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
				 ********/

				/***************************
				 * Vendor login & weather Product
				 ****************************/ // Added on 05/08/2015

				if (sActivityName.equalsIgnoreCase("Vendor1Clarification")
						|| sActivityName.equalsIgnoreCase("Vendor2Clarification")) {
					//////// //System.out.println("inside new
					//////// Vendor1Clarification:");
					formObject.setNGVisible("Frame_DocUpload", true);
					formObject.setNGVisible("Btn_VenDocview", true); // code
																		// added
																		// on
																		// 05/08/2015
					//////// //System.out.println("Btn_VenDocview :Enable:");
					formObject.setNGVisible("Btn_DocView", false); // code added
																	// on
																	// 05/08/2015
					//////// //System.out.println("Btn_DocView :Disable:");

					Frames.add("Frame_DocUpload");
					if (sActivityName.equalsIgnoreCase("Vendor1Clarification")) {
						//////// //System.out.println("inside
						//////// Vendor1Clarification:");
						formObject.setNGVisible("Btn_Vendor1", true);
						// formObject.setNGVisible("Btn_Vendor1", true);
					}
					if (sActivityName.equalsIgnoreCase("Vendor2Clarification")) {
						//////// //System.out.println("inside
						//////// Vendor2Clarification:");
						formObject.setNGVisible("Btn_Vendor2", true);
						// formObject.setNGVisible("Btn_Vendor1", true);
					}
				}

				/*************************
				 * End Vendor login & weather Product
				 **************************/

				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase(
						"Endorsement") /* CR 46 CPU DataWashing */) {
					formObject.setNGLocked("Frame BSG QC Check Fields", false);
					formObject.setNGLocked("Frame_UW_DEO_Fields", false);
					formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
				}

				/***************************
				 * Vendor login & weather Product
				 ****************************/
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				if (sActivityName.equalsIgnoreCase("DEO_Clarification")) {
					//////// //System.out.println("DEO_Clarification test:");
					formObject.setNGLocked("Frame_UW_DEO_Fields", true);
					formObject.setNGLocked("CPI_UW_DEO_SEND_TO", true);
					/*
					 * formObject.setNGVisible("Label120", true);
					 * formObject.setNGVisible("Corp_PROPOSAL_NO",
					 * true);//Corp_PROPOSAL_NO represents both applicable for
					 * corporate policy and endorsement cases
					 */
					formObject.setNGLocked("Corp_PROPOSAL_NO", true);
				}
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				if (sActivityName.equalsIgnoreCase("Vendor1Clarification")
						|| sActivityName.equalsIgnoreCase("Vendor2Clarification")) {
					//////// //System.out.println("inside if
					//////// Vendor1Clarification:");
					formObject.setNGLocked("Frame Corporate Policy Issuance", false);
					formObject.setNGLocked("Frame Endorsement", false);
					formObject.setNGLocked("Frame BSG QC Check Fields", false);
					formObject.setNGLocked("Frame_UW_DEO_Fields", false);
					formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
					formObject.setNGEnable("Frame Corporate Policy Issuance", false);
					formObject.setNGEnable("Frame Endorsement", false);
					formObject.setNGEnable("Frame BSG QC Check Fields", false);
					formObject.setNGEnable("Frame_UW_DEO_Fields", false);
					formObject.setNGEnable("Frame UW Data Entry QC Fields", false);
				}

				/*************************
				 * End Vendor login & weather Product
				 **************************/

				//////// //System.out.println("CPI_PRODUCT_TYPE 2:" +
				//////// formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("OTC"));
				RouteTo_ClarificationWS(formObject.getNGValue("CPI_PREV_WRK_STEP"),
						formObject.getNGValue("CPI_CONST_PREV_WORKSTEP"), sActivityName);
				/*******************************
				 * CR 44 by satish
				 ****************************/
				if (sActivityName.equalsIgnoreCase("RM_Clarification")
						/* CR 46 CPU DataWashing */ || sActivityName.equalsIgnoreCase("CPUCustClarification")) {
					formObject.setNGEnable("CPI_Endorsement_Effective_Date", true);
				} else {
					formObject.setNGEnable("CPI_Endorsement_Effective_Date", false);
				}
				/****************************
				 * end CR 44 by satish
				 ***************************/
				/******************* CR 45 Network Partner ********************/
				if (sActivityName.equalsIgnoreCase("BSG_Clarification") || (sActivityName
						.equalsIgnoreCase("RM_Clarification")
						&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase(
								"Endorsement"))/* CR 46 CPU DataWashing */) {
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
							&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
							&& !formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("iPartner")) {
						//////// //System.out.println("1 CR 45 inside
						//////// BSG_Clarification wrkstep,CPI_NETWORK_PARTNER "
						//////// +
						//////// formObject.getNGValue("CPI_NETWORK_PARTNER"));
						if (formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("Yes")) {
							//////// //System.out.println("1 CR 45 if
							//////// CPI_NETWORK_PARTNER is Yes: " +
							//////// formObject.getNGValue("CPI_NETWORK_PARTNER"));
							if (sActivityName.equalsIgnoreCase("BSG_Clarification")) {
								formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED", true);
								formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED", true);
							}
						} else {
							//////// //System.out.println("1 CR 45 if
							//////// CPI_NETWORK_PARTNER is No: " +
							//////// formObject.getNGValue("CPI_NETWORK_PARTNER"));
							formObject.setNGListIndex("CPI_ORG_PROPOSAL_FORM_RECEIVED", 0);
							formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
							formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
						}
					}
					/*
					 * else { //////// //System.out.
					 * println("1 CR 45 else inside BSG_Clarification wrkstep: "
					 * ); formObject.setNGListIndex(
					 * "CPI_ORG_PROPOSAL_FORM_RECEIVED",0);
					 * formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED",
					 * false);
					 * formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED",
					 * false); }
					 */
				}
				/*****************
				 * end CR 45 Network Partner
				 *******************/
				/******************* CR 46 CPU DataWashing ********************/
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& (sActivityName.equalsIgnoreCase("CPUCustClarification")
								|| sActivityName.equalsIgnoreCase("RM_Clarification")))// for
																						// RM_Clarication
																						// &
																						// CPUCustClarification
																						// cases
				{
					formObject.setNGVisible("Label130", true);
					formObject.setNGVisible("End_DMS_NO", true);
					formObject.setNGLocked("End_DMS_NO", false);
					formObject.setNGVisible("Label131", true);
					formObject.setNGVisible("CPI_CLIENT_MAIL_RECEIVED_DATE", true);
					formObject.setSpecificDateFormat("CPI_CLIENT_MAIL_RECEIVED_DATE", "dd/MM/yyyy");
					formObject.setNGLocked("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
				} else {
					formObject.setNGVisible("Label130", false);
					formObject.setNGVisible("End_DMS_NO", false);
					formObject.setNGVisible("Label131", false);
					formObject.setNGVisible("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
					// formObject.setSpecificDateFormat("CPI_CLIENT_MAIL_RECEIVED_DATE","dd/MM/yyyy");
				}
				/*****************
				 * end CR 46 CPU DataWashing
				 *******************/
			} /*
				 * =============================CR 42 Additional UW
				 * worksteps=============================
				 */
			else if (sActivityName.equalsIgnoreCase("UW1")) {
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in UW1");
				}

				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame_Route_To");
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes
				/****************** CR 24 *************************/
				formObject.setNGValue("Label6", "UW Fields");
				formObject.setNGValue("Label10", "UW Send To");
				formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
				/****************** End CR 24 *************************/
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				formObject.setNGEnable("CPI_ROUTE_TO", false);
				/**********************
				 * Start Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 *************************/
				if (formObject.getNGValue("CPI_BOOKING_TYPE").equalsIgnoreCase("Alternate")) {
					//////// //System.out.println("Inside UW1 Bucket For
					//////// Alternate Inwarding Process 4.0");
					// formObject.setNGLocked("Frame UW Data Entry QC Fields",
					//////// false);
					// formObject.setNGEnable("Frame UW Data Entry QC Fields",
					//////// false);
					formObject.setNGLocked("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
				}
				/**********************
				 * End Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 ***************************/
			} else if (sActivityName.equalsIgnoreCase("UW2")) {
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in UW2");
				}

				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame_Route_To");
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				/****************** CR 24 *************************/
				formObject.setNGValue("Label6", "UW Fields");
				formObject.setNGValue("Label10", "UW Send To");
				formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
				/****************** End CR 24 *************************/
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				formObject.setNGEnable("CPI_ROUTE_TO", false);
				/**********************
				 * Start Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 *************************/
				if (formObject.getNGValue("CPI_BOOKING_TYPE").equalsIgnoreCase("Alternate")) {
					//////// //System.out.println("Inside UW2 Bucket For
					//////// Alternate Inwarding Process 4.0");
					// formObject.setNGLocked("Frame UW Data Entry QC Fields",
					//////// false);
					// formObject.setNGEnable("Frame UW Data Entry QC Fields",
					//////// false);
					formObject.setNGLocked("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
				}
				/**********************
				 * End Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 ***************************/
			} else if (sActivityName.equalsIgnoreCase("UW3")) {
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in UW3");
				}

				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame_Route_To");
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes
				/****************** CR 24 *************************/
				formObject.setNGValue("Label6", "UW Fields");
				formObject.setNGValue("Label10", "UW Send To");
				formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
				/****************** End CR 24 *************************/
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				formObject.setNGEnable("CPI_ROUTE_TO", false);

				/**********************
				 * Start Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 *************************/
				if (formObject.getNGValue("CPI_BOOKING_TYPE").equalsIgnoreCase("Alternate")) {
					//////// //System.out.println("Inside UW3 Bucket For
					//////// Alternate Inwarding Process 4.0");
					// formObject.setNGLocked("Frame UW Data Entry QC Fields",
					//////// false);
					// formObject.setNGEnable("Frame UW Data Entry QC Fields",
					//////// false);
					formObject.setNGLocked("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
				}
				/**********************
				 * End Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 ***************************/

			} /*
				 * ===========================End CR 42 Additional UW
				 * worksteps===========================
				 */ // ************************ OTC **************************
			else if (sActivityName.equalsIgnoreCase("BSG Approver")) {
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in BSG Approver");
				}

				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame_Route_To");
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes

				/****************** CR 24 *************************/
				formObject.setNGValue("Label6", "BSG Approver Fields");
				formObject.setNGValue("Label10", "BSG Approver Send To");
				formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
				formObject.setNGEnable("CPI_UW_SEND_TO", true);
				formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
				/****************** End CR 24 *************************/
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				formObject.setNGLocked("CPI_UW_DEO_SEND_TO", false);
				formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
				formObject.setNGEnable("CPI_ROUTE_TO", false);

				/**********************
				 * Start Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 *************************/
				if (formObject.getNGValue("CPI_BOOKING_TYPE").equalsIgnoreCase("Alternate")) {
					//////// //System.out.println("Inside BSG Approver Bucket
					//////// For Alternate Inwarding Process 4.0");
					// formObject.setNGLocked("Frame UW Data Entry QC Fields",
					//////// false);
					// formObject.setNGEnable("Frame UW Data Entry QC Fields",
					//////// false);
					formObject.setNGLocked("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
				}
				/**********************
				 * End Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 ***************************/

			} // ************************ End OTC **************************
			else if (sActivityName.equalsIgnoreCase("Corporate_UW") || sActivityName.equalsIgnoreCase("Re-Insurance")) {
				// Sadik
				String prevWrkStep = formObject.getNGValue("CPI_PREV_WRK_STEP");
				// end
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in Corporate_UW/Re-Insurance");
				}

				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame_Route_To");
				Frames.add("Frame Corporate UW Fields");
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes
				/****
				 * Start CR-OMCPI-1314-05 DataWashing -
				 * Mail_Management_Extension
				 ******/
				/*
				 * formObject.NGAddItem("CPI_UW_DEO_SEND_TO", "Corporate UW");
				 * formObject.NGAddItem("CPI_PH_Print_Option", "Yes");
				 * formObject.NGAddItem("CPI_PH_Print_Option", "No");
				 */
				//////// //System.out.println("satish : CPI_PH_Print_Option
				//////// =="+formObject.getNGValue("CPI_PH_Print_Option"));
				if (sActivityName.equalsIgnoreCase("Corporate_UW")
						&& formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {

					//////// //System.out.println("satish : Corporate_UW
					//////// workstep=="+formObject.getNGValue("CPI_DATAWASHING_TYPE"));
					// formObject.NGAddItem("CPI_Route_to", "Corporate UW
					//////// Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
					// Sadik
					if (prevWrkStep.equalsIgnoreCase("CPU_Data_Washing")) {
						// //System.out.println("Sadik CR9 In prevWrkStep if
						// block");
						// formObject.setNGEnable("CPI_ROUTE_TO", true);
						// formObject.NGAddItem("CPI_UW_APPROVAL_STATUS",
						// "Approved");
						// formObject.NGAddItem("CPI_UW_APPROVAL_STATUS",
						// "Rejected");
						formObject.setNGEnable("CPI_UW_APPROVAL_STATUS", true);
						formObject.setNGLocked("CPI_UW_APPROVAL_STATUS", true);
						formObject.NGAddItem("CPI_CORP_UW_SEND_TO", "CPU Datawashing");
						// formObject.setNGValue("CPI_CORP_UW_SEND_TO", "CPU
						// Datawashing");
						formObject.setNGListIndex("CPI_CORP_UW_SEND_TO", 1);
						formObject.setNGEnable("CPI_CORP_UW_SEND_TO", false);
						formObject.setNGLocked("CPI_CORP_UW_SEND_TO", false);
						// Disable Route to for datawashing cases
						// formObject.setNGEnable("CPI_ROUTE_TO", false);
						// formObject.setNGLocked("CPI_ROUTE_TO", false);
					} else {
						// //System.out.println("Sadik CR9 In prevWrkStep else
						// block");
						formObject.setNGEnable("CPI_UW_APPROVAL_STATUS", false);
						formObject.setNGLocked("CPI_UW_APPROVAL_STATUS", false);
						// Enable Route to for non datawashing cases
						// formObject.setNGEnable("CPI_ROUTE_TO", true);
						// formObject.setNGLocked("CPI_ROUTE_TO", true);
					}
					// end

				} else if (sActivityName.equalsIgnoreCase("Corporate_UW")) {
					//////// //System.out.println("satish : Corporate_UW
					//////// workstep
					//////// else=="+formObject.getNGValue("CPI_DATAWASHING_TYPE"));
					// System.out.println("Vaibhav Corporate_UW Exception
					//////// Issue==");
					formObject.setNGEnable("CPI_Route_to", true);// bug fix
																	// yogesh
																	// Corporate_UW
					formObject.setNGLocked("CPI_Route_to", true);
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
					/*
					 * =============================CR 42 Additional UW
					 * worksteps=============================
					 */
					formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
					/*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */

					// **********CR 24********************************//
					if (sActivityName.equalsIgnoreCase("Corporate_UW")) {
						formObject.NGAddItem("CPI_CORP_UW_SEND_TO", "BSG Approver");
						formObject.setNGListIndex("CPI_CORP_UW_SEND_TO", 0);
						if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsemnet")) {
							formObject.NGAddItem("CPI_Route_to", "RI Clarification");
						}
					}
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");

					/**********************
					 * Start Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 *************************/
					if (formObject.getNGValue("CPI_BOOKING_TYPE").equalsIgnoreCase("Alternate")) {
						//////// //System.out.println("Inside Corporate_UW
						//////// Bucket For Alternate Inwarding Process 4.0");
						// formObject.setNGLocked("Frame UW Data Entry QC
						//////// Fields", false);
						// formObject.setNGEnable("Frame UW Data Entry QC
						//////// Fields", false);
						formObject.setNGLocked("CPI_UW_SEND_TO", false);
						formObject.setNGEnable("CPI_UW_SEND_TO", false);
					}
					/**********************
					 * End Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 ***************************/
					// //System.out.println("Vaibhav Corporate_UW Exception
					// Issue End==");
				}
				if (sActivityName.equalsIgnoreCase("Corporate_UW")
						&& (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
								&& !formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase(""))) {
					Frames.add("BSG Datawashing Email frame");
					formObject.setNGVisible("BSG Datawashing Email frame", true);
					formObject.setNGVisible("Btn_MailCompose", false);

				}
				/****
				 * End CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
				 ********/
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");

				formObject.setNGLocked("CPI_REINSURANCE_CASE", true);
				formObject.setNGEnable("CPI_REINSURANCE_CASE", true);
				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
				formObject.setNGLocked("CPI_PH_Print_Option", true);
				// sadik
				// //System.out.println("Sadik CR9 In CPI_UW_APPROVAL_STATUS
				// setting true");
				// formObject.setNGEnable("CPI_UW_APPROVAL_STATUS", true);
				// formObject.setNGLocked("CPI_UW_APPROVAL_STATUS", true);
				// end
				/****************** CR 24 *************************/
				formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
				formObject.setNGListIndex("CPI_CORP_UW_SEND_TO", 0);
				/****************** End CR 24 *************************/
				formObject.setNGLocked("CPI_UW_DEO_SEND_TO", false);
				formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
				formObject.setNGLocked("CPI_UW_SEND_TO", false);
				formObject.setNGEnable("CPI_UW_SEND_TO", false);
				// sadik comment by sadik adding 2 line
				formObject.setNGEnable("CPI_ROUTE_TO", false);
				formObject.setNGLocked("CPI_ROUTE_TO", false);
				// sadik
				// //System.out.println("Sadik CR9 In CPI_CORP_UW_SEND_TO
				// setting false");
				formObject.setNGEnable("CPI_CORP_UW_SEND_TO", false);
				formObject.setNGLocked("CPI_CORP_UW_SEND_TO", false);
				// end
			}
			/**********************
			 * Start Development in Omniflow CPI Alternate Inwarding Process 4.0
			 *************************/
			else if (sActivityName.equalsIgnoreCase("Client_Hold")) {
				//////// //System.out.println("Entering In FieldValueBag Set
				//////// Method For Client_Hold Bucket for Alternate Inwarding
				//////// Process 4.0");
				formObject.setNGEnable("CPI_BOOKING_TYPE", false);
				Frames.add("Frame_PaymentGrid"); // PID_CPI process changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER"); // NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in Client_Hold");
				}

				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame_Route_To");
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments"); // CR 45 Additional changes to
													// capture Rejected to IT
													// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes

				/****************** CR 24 *************************/
				formObject.setNGValue("Label6", "UW Fields");
				formObject.setNGValue("Label10", "UW Send To");
				formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
				/****************** End CR 24 *************************/
				// formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				// formObject.setNGEnable("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
				formObject.setNGEnable("Frame UW Data Entry QC Fields", false);
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				formObject.setNGEnable("CPI_ROUTE_TO", false);
				//////// //System.out.println("Exiting In FieldValueBag Set
				//////// Method For Client_Hold Bucket For Alternate Inwarding
				//////// Process 4.0");

			} else if (sActivityName.equalsIgnoreCase("Proposal_Release")) {
				//////// //System.out.println("Entering In FieldValueBag Set
				//////// Method For Proposal_Release Bucket For Alternate
				//////// Inwarding Process 4.0");
				//////// //System.out.println("CPI_UW_SEND_TO : " +
				//////// formObject.getNGValue("CPI_UW_SEND_TO"));
				Frames.add("Frame_PaymentGrid"); // PID_CPI process changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER"); // NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in Proposal_Release");
				}

				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame_Route_To");
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments"); // CR 45 Additional changes to
													// capture Rejected to IT
													// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes

				/****************** CR 24 *************************/
				formObject.setNGValue("Label6", "UW Fields");
				formObject.setNGValue("Label10", "UW Send To");
				formObject.setNGListIndex("CPI_UW_SEND_TO", 1);
				/****************** End CR 24 *************************/
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				formObject.setNGEnable("CPI_ROUTE_TO", false);

				if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
					//////// //System.out.println("CPU Health Case Alternate
					//////// Inwarding Process 4.0:");
					// formObject.setNGLocked("Frame_UW_DEO_Fields", false);
					// formObject.setNGEnable("Frame_UW_DEO_Fields", false);
					formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
					formObject.setNGEnable("Frame UW Data Entry QC Fields", false);
				} else {
					//////// //System.out.println("Non CPU Health Case Alternate
					//////// Inwarding Process 4.0:");
					// formObject.setNGLocked("Frame_UW_DEO_Fields", true);
					// formObject.setNGEnable("Frame_UW_DEO_Fields", true);
					// formObject.setNGLocked("Frame UW Data Entry QC Fields",
					//////// true);
					// formObject.setNGEnable("Frame UW Data Entry QC Fields",
					//////// true);
					formObject.setNGLocked("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGLocked("CPI_PH_Print_Option", false);
					formObject.setNGEnable("CPI_PH_Print_Option", false);
				}

				//////// //System.out.println("Exiting In FieldValueBag Set
				//////// Method For Proposal_Release Bucket For Alternate
				//////// Inwarding Process 4.0");
			} /**********************
				 * End Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 ***************************/
			else if (sActivityName.equalsIgnoreCase("Processing Hub") || sActivityName.equalsIgnoreCase("PH_Print")
					|| sActivityName.equalsIgnoreCase("PH_Complete") || sActivityName.equalsIgnoreCase("COPS_QC")) { // CPI
																														// PID
																														// Additional
																														// Points
				//////// //System.out.println("CPI_PRODUCT_TYPE ::" +
				//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));
				String sCPI_PRODUCT_TYPE = formObject.getNGValue("CPI_PRODUCT_TYPE");
				//////// //System.out.println("sCPI_PRODUCT_TYPE ::" +
				//////// sCPI_PRODUCT_TYPE);
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");

				// ******************** OTC ********************
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				// Commenting entire OTC block
				/*
				 * if
				 * (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) { ////////
				 * //System.out.println("CPI_Route_to OTC IF:::");
				 * formObject.setNGEnable("CPI_UW_DEO_SEND_TO",false);
				 * //***********************CR 24
				 ****************************/
				// formObject.NGAddItem("CPI_Route_to","BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
				/*
				 * } else {
				 */
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				////////// //System.out.println("CPI_Route_to OTC Else:::");
				// bhagat CR CPU_HEALTH
				if (!formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
					// end bhagat CR CPU_HEALTH
					//////// //System.out.println("Non Cpu Health case:");
					/*
					 * ====================CR 42 Additional UW
					 * worksteps====================
					 */
					formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
					/*
					 * ===================End CR 42 Additional UW
					 * worksteps=================
					 */
					formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
					formObject.NGAddItem("CPI_Route_to", "RI Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				}
				// }
				// ***************************End OTC **************************
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes
				if (sActivityName.equalsIgnoreCase("Processing Hub") || sActivityName.equalsIgnoreCase("PH_Print")
						|| sActivityName.equalsIgnoreCase("PH_Complete")) {
					if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
							|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
						Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
																// CR-8001-56225
						formObject.setNGVisible("Frame LEADER URN NUMBER", true);
						formObject.setNGLocked("Frame LEADER URN NUMBER", false);
						//////// //System.out.println("Adding URN Frame-Read
						//////// only for follower case in Processing
						//////// Hub/PH_Print/PH_Complete");
					}

				}
				if (sActivityName.equalsIgnoreCase("Processing Hub")) {
					Frames.add("Frame_Withdrawal");
				}
				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame Corporate UW Fields");
				Frames.add("Frame Processing Hub Fields");
				Frames.add("Frame_Route_To");
				/****
				 * Start CR-OMCPI-1314-05 DataWashing -
				 * Mail_Management_Extension
				 ******/
				if (sActivityName.equalsIgnoreCase("PH_Print")
						&& (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
								&& !formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase(""))) {
					Frames.add("BSG Datawashing Email frame");
					formObject.setNGVisible("Btn_MailCompose", false);

				}
				/****
				 * End CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
				 ********/
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				System.out.println("GREEN FILE Digitization CR Phase2");
				Frames.add("Frame_DocUpload");
				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
				 ***********************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
				formObject.setNGLocked("CPI_REINSURANCE_CASE", false);
				formObject.setNGEnable("CPI_REINSURANCE_CASE", false);
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
				formObject.setNGLocked("CPI_UW_SEND_TO", false);
				formObject.setNGEnable("CPI_UW_SEND_TO", false);
				formObject.setNGEnable("CPI_ROUTE_TO", false);
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				if (sActivityName.equalsIgnoreCase("COPS_QC") || sActivityName.equalsIgnoreCase("Processing Hub")) {
					//////// //System.out.println("CPI_pas==="+formObject.getNGValue("CPI_pas"));
					//////// //System.out.println("corp_pas==="+formObject.getNGValue("corp_pas"));
					//////// //System.out.println("end_pas==="+formObject.getNGValue("end_pas"));
					if (formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder")
							|| formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Pathfinder")
							|| formObject.getNGValue("End_PAS").equalsIgnoreCase("Pathfinder")) {
						formObject.setNGLocked("CPI_PROPOSAL_NO", true);
					} else {
						formObject.setNGLocked("CPI_PROPOSAL_NO", false);
					}

				} else {
					formObject.setNGLocked("CPI_PROPOSAL_NO", false);
				}
				formObject.setNGVisible("Label120", false);
				formObject.setNGVisible("Corp_PROPOSAL_NO", false);
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				if (formObject.getNGValue("CPI_PH_Print_Option").equalsIgnoreCase("Yes")) {
					formObject.setNGLocked("CPI_PH_SEND_TO", true);
					formObject.setNGEnable("CPI_PH_SEND_TO", true);
				} else {
					formObject.setNGListIndex("CPI_PH_SEND_TO", 0);
					formObject.setNGEnable("CPI_PH_SEND_TO", false);
					formObject.setNGLocked("CPI_PH_SEND_TO", false);
				}
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ======= CPI PAS Integration Yogendra Saraswat ========
				/*
				 * if(formObject.getNGValue("CPI_PAS").equalsIgnoreCase(
				 * "Pathfinder")) {
				 * formObject.setNGEnable("CPI_POLICY_NO",false); }
				 */
				// ======= END CPI PAS Integration Yogendra Saraswat ========
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					/*************************
					 * CPI PID Additional Points
					 *****************************/
					if (formObject.getNGValue("End_pas").equalsIgnoreCase("Premia")
							|| formObject.getNGValue("cpi_pas").equalsIgnoreCase("Premia")) {
						formObject.setNGLocked("CPI_POLICY_NO", true);
					} else {
						formObject.setNGLocked("CPI_POLICY_NO", false);
					}
					/*************************
					 * End CPI PID Additional Points
					 **************************/
				} else {
					if (sActivityName.equalsIgnoreCase("PH_Print")
							|| formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder")) { // CPI
																									// PID
																									// Additional
																									// Points
						formObject.setNGLocked("CPI_POLICY_NO", false);
					} else if (!formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder")) // CPI
																									// PID
																									// Additional
																									// Points
					{
						formObject.setNGLocked("CPI_POLICY_NO", true);
					}

				}

				// bhagat CR CPU_HEALTH
				if (sActivityName.equalsIgnoreCase("PH_Print")) {
					if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
						//////// //System.out.println("CPU_HEALTH case: Inside
						//////// PH_Print");
						formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
						formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
						formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					} else {
						//////// //System.out.println("Non CPU_HEALTH case:
						//////// Inside PH_Print");
						formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
						formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
						formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
						formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					}
				}
				// end bhagat CR CPU_HEALTH
			} else if (sActivityName.equalsIgnoreCase("BSG Dispatch")
					|| sActivityName.equalsIgnoreCase("Coins_Lead_Policy")) {
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil999444:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes
				if (sActivityName.equalsIgnoreCase("BSG Dispatch")) {
					if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
							|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
						Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
																// CR-8001-56225
						formObject.setNGVisible("Frame LEADER URN NUMBER", true);
						formObject.setNGLocked("Frame LEADER URN NUMBER", false);
						//////// //System.out.println("Adding URN Frame-Read
						//////// only for follower case in BSG Dispatch");
					}
				}
				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame Corporate UW Fields");
				Frames.add("Frame Processing Hub Fields");

				/**************** CR 8 ***********/
				if (sActivityName.equalsIgnoreCase("BSG Dispatch")) {
					Frames.add("Frame_Route_To");
					/****
					 * Start CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ******/
					if (sActivityName.equalsIgnoreCase("BSG Dispatch")
							&& (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
									&& !formObject.getNGValue("CPI_INTERACTIONID").equalsIgnoreCase(""))) {
						Frames.add("BSG Datawashing Email frame");
						formObject.setNGVisible("Btn_MailCompose", false);

					}
					/****
					 * End CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ********/
					// ******************** OTC ********************
					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					// Commenting entire OTC block
					/*
					 * if (formObject.getNGValue("CPI_PRODUCT_TYPE").
					 * equalsIgnoreCase("OTC")) { ////////
					 * //System.out.println("CPI_Route_to OTC IF:::");
					 * formObject.setNGEnable("CPI_UW_DEO_SEND_TO",false);
					 * //***********************CR 24
					 ****************************/
					// formObject.NGAddItem("CPI_Route_to","BSG Ap
					// Clarification");
					// ***********************End CR
					// 24****************************//
					/*
					 * } else {
					 * 
					 * ////////
					 * //System.out.println("CPI_Route_to OTC Else:::");
					 * //bhagat CR CPU_HEALTH
					 * /*if(!formObject.getNGValue("CPI_CPU_HEALTH_STATUS").
					 * equalsIgnoreCase("1")) { //end bhagat CR CPU_HEALTH
					 * //////// //System.out.println("Non Cpu Health case:");
					 * /*====================CR 42 Additional UW
					 * worksteps====================
					 */
					/*
					 * formObject.NGAddItem("CPI_Route_to","UW1 Clarification");
					 * formObject.NGAddItem("CPI_Route_to","UW2 Clarification");
					 * formObject.NGAddItem("CPI_Route_to","UW3 Clarification");
					 * /*===================End CR 42 Additional UW
					 * worksteps=================
					 */
					/*
					 * formObject.NGAddItem(
					 * "CPI_Route_to","Corporate UW Clarification"); }
					 */
					// }
					// End Commenting OTC condition
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
					// ***************************End OTC
					// **************************
					// bhagat CR CPU_HEALTH
					if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
						//////// //System.out.println("CPU_HEALTH case: Inside
						//////// BSG Dispatch");
						formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
						formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
						formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					} else {
						//////// //System.out.println("Non CPU_HEALTH case:
						//////// Inside BSG Dispatch");
						formObject.NGAddItem("CPI_Route_to", "RM Clarification");
						formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
						formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
						formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
						formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
						formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
						formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
						formObject.NGAddItem("CPI_Route_to", "RI Clarification");
						formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
						formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
						// ***********************CR
						// 24****************************//
						formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
						// ***********************End CR
						// 24****************************//
					}
					// end bhagat CR CPU_HEALTH
				}
				/**************** End CR 8 ***********/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
				formObject.setNGLocked("Frame Processing Hub Fields", false);
				formObject.setNGLocked("CPI_REINSURANCE_CASE", false);
				formObject.setNGEnable("CPI_REINSURANCE_CASE", false);
				formObject.setNGLocked("CPI_UW_DEO_SEND_TO", false);
				formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
				formObject.setNGLocked("CPI_UW_SEND_TO", false);
				formObject.setNGEnable("CPI_UW_SEND_TO", false);
				formObject.setNGEnable("CPI_ROUTE_TO", false);
			} /******************* CR 45 Network Partner ********************/
			else if (sActivityName.equalsIgnoreCase("Ins_Org_PF")) {
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in Ins_Org_PF");
				}

				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame Corporate UW Fields");
				Frames.add("Frame Processing Hub Fields");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				Frames.add("Frame IT_Comments");// CR 45 Additional changes to
												// capture Rejected to IT
												// comments

				// formObject.setNGLocked("Frame BSG QC Check Fields",false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
				formObject.setNGLocked("Frame Corporate UW Fields", false);
				formObject.setNGLocked("Frame Processing Hub Fields", false);
				// formObject.setNGLocked("Frame Remarks",false);
				formObject.setNGLocked("CPI_REINSURANCE_CASE", false);
				formObject.setNGEnable("CPI_REINSURANCE_CASE", false);
				formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED", true);
				formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED", true);
				formObject.setNGEnable("CPI_POLICY_PRINT_GIVEN_TO_MO", true);
				formObject.setNGLocked("CPI_POLICY_PRINT_GIVEN_TO_MO", true);
			} /***************** end CR 45 Network Partner *******************/
			else if (sActivityName.equalsIgnoreCase("Exit") || sActivityName.equalsIgnoreCase("Work Exit1")
					|| sActivityName.equalsIgnoreCase("Query1") || sActivityName.equalsIgnoreCase("Discard")
					|| sActivityName.equalsIgnoreCase("Rejected_To_IT")) {
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("Inside FieldValueBagset for : " +
				//////// sActivityName + " Workstep");
				//////// //System.out.println("CPI_DATAWASHING_TYPE : " +
				//////// formObject.getNGValue("CPI_DATAWASHING_TYPE"));
				//////// //System.out.println("CPI_INTERACTIONID : " +
				//////// formObject.getNGValue("CPI_INTERACTIONID"));
				//////// //System.out.println("CPI_RM_ID : " +
				//////// formObject.getNGValue("CPI_RM_ID"));
				//////// //System.out.println("CLIENT_MAIL_RECIEVED_DATE: " +
				//////// formObject.getNGValue("CPI_CLIENT_MAIL_RECIEVED_DATE"));
				formObject.setNGValue("Txt_RM_ID", formObject.getNGValue("CPI_RM_ID"));
				sCPI_RM_ID = formObject.getNGValue("Txt_RM_ID");
				String wi_name = xmlParserGenData.getValueOf("ProcessInstanceId");

				String sQuery = "select interactionid from ng_cpi_ext_table  where wi_name ='" + wi_name + "'";
				ArrayList getInterList = formObject.getNGDataFromDataSource(sQuery, 1);
				String intMailDate = "";
				//////// //System.out.println("sQuery: " + sQuery);
				if (getInterList != null && getInterList.size() > 0) {

					String intId = (getInterList.get(0)).toString();
					// s_CoUser=s_CoUser.substring((s_CoUser.indexOf("[")+1),(s_CoUser.indexOf("]")));
					/*******************
					 * CR 46 CPU DataWashing
					 ********************/
					intMailDate = intId.substring((intId.indexOf("[") + 1), (intId.indexOf("]")));
					// userGroupFlag = s_CoUser.substring((s_CoUser.indexOf(",")
					// + 1), (s_CoUser.indexOf("]")));
					//////// //System.out.println("intMailDate in exit" +
					// intMailDate);

				}
				Frames.add("Frame_PaymentGrid");// PID_CPI process changes
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")
						|| formObject.getNGValue("End_coINSURANCE").equalsIgnoreCase("Follower")) {
					Frames.add("Frame LEADER URN NUMBER");// NEW FORMAT URN
															// CR-8001-56225
					formObject.setNGVisible("Frame LEADER URN NUMBER", true);
					formObject.setNGLocked("Frame LEADER URN NUMBER", false);
					//////// //System.out.println("Adding URN Frame-Read only
					//////// for follower case in Misc worksteps");
				}

				Frames.add("Frame_Withdrawal");
				Frames.add("Frame_UW_DEO_Fields");
				Frames.add("Frame UW Data Entry QC Fields");
				Frames.add("Frame Corporate UW Fields");
				Frames.add("Frame Processing Hub Fields");
				//////// //System.out.println("satish1 before : " +
				//////// formObject.getNGValue("CPI_DATAWASHING_TYPE"));
				//////// //System.out.println("satish1 CPI_INTERACTIONID before
				//////// : " + formObject.getNGValue("CPI_INTERACTIONID"));
				/****
				 * Start CR-OMCPI-1314-05 DataWashing -
				 * Mail_Management_Extension
				 ******/
				if ((sActivityName.equalsIgnoreCase("Exit") || sActivityName.equalsIgnoreCase("Work Exit1")
						|| sActivityName.equalsIgnoreCase("Discard"))
						&& (intMailDate != null && !intMailDate.equals(""))) {
					//////// //System.out.println("satish : " +
					//////// formObject.getNGValue("CPI_DATAWASHING_TYPE"));
					Frames.add("BSG Datawashing Email frame");
					// formObject.setNGVisible("BSG Datawashing Email frame",
					// true);
					formObject.setNGLocked("BSG Datawashing Email frame", true);
					formObject.setNGVisible("Btn_MailCompose", false);
					formObject.setNGLocked("Btn_MailHistory", true);

				}
				/****
				 * End CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
				 ********/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				Frames.add("Frame_GST");
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				Frames.add("Frame Remarks");
				/******
				 * CR 45 Additional changes to capture Rejected to IT comments
				 *****/
				Frames.add("Frame IT_Comments");
				formObject.setNGEnable("Frame IT_Comments", true);
				/****
				 * End CR 45 Additional changes to capture Rejected to IT
				 * comments
				 ****/
				// Frames.add("Frame UW Data Entry QC Fields");
				formObject.setNGLocked("Frame_PaymentGrid", false); // PID_CPI
																	// process
																	// changes
				formObject.setNGLocked("Frame_Withdrawal", false);
				formObject.setNGLocked("Frame BSG QC Check Fields", false);
				formObject.setNGLocked("Frame_UW_DEO_Fields", false);
				formObject.setNGLocked("Frame UW Data Entry QC Fields", false);
				formObject.setNGLocked("Frame Processing Hub Fields", false);
				formObject.setNGLocked("Frame Remarks", true);
				formObject.setNGLocked("CPI_LEADERS_POLICY_NO", false);
				formObject.setNGLocked("CPI_REINSURANCE_CASE", false);
				formObject.setNGEnable("CPI_REINSURANCE_CASE", false);
				formObject.setNGVisible("REMARKS", false);
				formObject.setNGVisible("CPI_REMARK", false);
				formObject.setNGControlHeight("Frame Remarks", 30);
				formObject.setNGControlTop("Btn_History", 30);
				formObject.setNGLocked("Btn_History", true);
			}

			if (sActivityName.equalsIgnoreCase("BSG_QC") || sActivityName.equalsIgnoreCase("UW_DEO")
					|| sActivityName.equalsIgnoreCase("RM_Clarification")
					|| sActivityName.equalsIgnoreCase("BSG_Clarification")
					|| sActivityName.equalsIgnoreCase("DEO_Clarification")
					|| /*
						 * =============================CR 42 Additional UW
						 * worksteps=============================
						 */ sActivityName.equalsIgnoreCase("UW1_Clarification")
					|| sActivityName.equalsIgnoreCase("UW2_Clarification")
					|| sActivityName.equalsIgnoreCase("UW3_Clarification")
					|| /*
						 * ===========================End CR 42 Additional UW
						 * worksteps===========================
						 */ sActivityName.equalsIgnoreCase("Corp_UWClarification")
					|| sActivityName.equalsIgnoreCase("BSG_Ap_Clarification")
					|| sActivityName.equalsIgnoreCase("ProcHubClarification")
					|| /*
						 * =============================CR 42 Additional UW
						 * worksteps=============================
						 */ sActivityName.equalsIgnoreCase("UW1") || sActivityName.equalsIgnoreCase("UW2")
					|| sActivityName.equalsIgnoreCase("UW3")
					|| /*
						 * ===========================End CR 42 Additional UW
						 * worksteps===========================
						 */ sActivityName.equalsIgnoreCase("BSG Approver")
					|| sActivityName.equalsIgnoreCase("Corporate_UW")
					|| sActivityName.equalsIgnoreCase("Processing Hub")
					|| sActivityName.equalsIgnoreCase("BSG Dispatch") || sActivityName.equalsIgnoreCase("PH_Print")
					|| /*******************
						 * CR 45 Network Partner
						 ********************/
					sActivityName.equalsIgnoreCase("Ins_Org_PF")
					|| /*****************
						 * end CR 45 Network Partner
						 *******************/
					/**********************
					 * Start Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 *************************/
					sActivityName.equalsIgnoreCase("Client_Hold") || sActivityName.equalsIgnoreCase("Proposal_Release")
					||
					/**********************
					 * End Development in Omniflow CPI Alternate Inwarding
					 * Process 4.0
					 ***************************/
					/*******************
					 * CR 46 CPU DataWashing
					 ********************/
					// sActivityName.equalsIgnoreCase("CPU_Data_Washing") ||
					sActivityName.equalsIgnoreCase("CPUCustClarification")
					|| /*****************
						 * end CR 46 CPU DataWashing
						 *******************/
					sActivityName.equalsIgnoreCase("Exit") || sActivityName.equalsIgnoreCase("Work Exit1")
					|| sActivityName.equalsIgnoreCase("Query1") || sActivityName.equalsIgnoreCase("Rejected_TO_IT")
					|| sActivityName.equalsIgnoreCase("Discard") || sActivityName.equalsIgnoreCase("Re-Insurance")
					|| sActivityName.equalsIgnoreCase("RI_Clarification")
					|| sActivityName.equalsIgnoreCase("Coins_Lead_Policy")
					|| sActivityName.equalsIgnoreCase("PHPrintClarification") || // bhagat
																					// CR
																					// CPU_HEALTH
					sActivityName.equalsIgnoreCase("CPU_HEALTH") || sActivityName.equalsIgnoreCase("CPU_Clarification")
					|| sActivityName.equalsIgnoreCase("CPU_Approver")// CR-OMCPI-1314-05
																		// DataWashing
																		// -
																		// Mail_Management_Extension
					|| sActivityName.equalsIgnoreCase("COPS_Cust_Id")
					|| sActivityName.equalsIgnoreCase("PF_PID_CPI_Update") // PID_CPI
																			// process
																			// changes
					|| sActivityName.equalsIgnoreCase("Vendor_Assignment") || sActivityName.equalsIgnoreCase("Vendor1")
					|| sActivityName.equalsIgnoreCase("Vendor2")
					|| sActivityName.equalsIgnoreCase("Vendor1Clarification")
					|| sActivityName.equalsIgnoreCase("Vendor2Clarification") // Vendor
																				// login
																				// &
																				// weather
																				// Product
					|| sActivityName.equalsIgnoreCase("PH_Complete") || sActivityName.equalsIgnoreCase("COMPLETE_SYNC")
					|| sActivityName.equalsIgnoreCase("COPS_QC") // CPI PID
																	// Additional
																	// Points
							&& !formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER")) {
				//////// //System.out.println("sActivityName:::" +
				//////// sActivityName);
				//////// //System.out.println("CPI_INST_NO_CD_NO_DEP_SLIP_NO=="
				//////// +
				//////// formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO"));
				//////// //System.out.println("CPI_moDE_OF_PAYMENT==" +
				//////// formObject.getNGValue("CPI_moDE_OF_PAYMENT"));
				//////// //System.out.println("CPI_inSTRUMENT_DATE==" +
				//////// formObject.getNGValue("CPI_inSTRUMENT_DATE"));
				//////// //System.out.println("CPI_baNK_NAME_CD_NAME##sandeep=="
				//////// + formObject.getNGValue("CPI_baNK_NAME_CD_NAME"));
				//////// //System.out.println("inSTRUMENT_AMOUNT==" +
				//////// formObject.getNGValue("CPI_inSTRUMENT_AMOUNT"));
				//////// //System.out.println("CPI_moDE_OF_PAYMENT2" +
				//////// formObject.getNGValue("CPI_moDE_OF_PAYMENT2"));
				//////// //System.out.println("CPI_INST_NO_CD_NO_DEP_SLIP_NO2" +
				//////// formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO2"));
				//////// //System.out.println("CPI_INST_NO_CD_NO_DEP_SLIP_NO2" +
				//////// formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO2"));
				//////// //System.out.println("CPI_baNK_NAME_CD_NAME2" +
				//////// formObject.getNGValue("CPI_baNK_NAME_CD_NAME2"));
				//////// //System.out.println("CPI_inSTRUMENT_AMOUNT2" +
				//////// formObject.getNGValue("CPI_inSTRUMENT_AMOUNT2"));

				if ((formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance"))
						&& (formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("No")
								|| formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("")
								|| formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("--Select--"))) {
					/***************************
					 * PID-CPI process changes
					 ***************************/
					// formObject.setNGLocked("Corp_INST_NO_CD_NO_DEP_SLIP_NO",
					// false);
					formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO", false);
					// formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO2",
					// false);
					// formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO3",
					// false);
					/***********************
					 * End PID-CPI process changes
					 ***************************/
				}
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				if (sActivityName.equalsIgnoreCase("DEO_Clarification")) {
					//////// //System.out.println("UW_DEO==" +
					//////// formObject.getNGValue("CPI_PROPOSAL_NO"));
					formObject.setNGValue("Corp_PROPOSAL_NO", formObject.getNGValue("CPI_PROPOSAL_NO"));
					if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
							|| formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Pathfinder")
							|| formObject.getNGValue("End_PAS").equalsIgnoreCase("Pathfinder")) {
						//////// //System.out.println("if in
						//////// DEO_Clarification==");
						formObject.setNGLocked("Corp_PROPOSAL_NO", true);
					} else {
						//////// //System.out.println("else in
						//////// DEO_Clarification==");
						formObject.setNGLocked("Corp_PROPOSAL_NO", false);
					}
				}
				formObject.setNGValue("Corp_PROPOSAL_NO", formObject.getNGValue("CPI_PROPOSAL_NO"));
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				if ((formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance"))
						&& (formObject.getNGValue("CPI_COINSURANCE").equalsIgnoreCase("Follower"))
						&& !sActivityName.equalsIgnoreCase("RM_Clarification")
						&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
					// ************ CR 14 LEADERS_POLICY_NO is not editable at
					// RM_Clarification
					formObject.setNGLocked("CPI_LEADERS_POLICY_NO", true);
				}

				formObject.setSpecificDateFormat("CPI_INSTRUMENT_DATE", "dd/MM/yyyy");
				if (sActivityName.equalsIgnoreCase("BSG_QC")) {
					// formObject.setNGValue("CPI_FILE_QC_DATE",dateformat.format(new
					// Date()));
				}
				String strProcessType = (formObject.getNGValue("CPI_Process_Type"));
				//////// //System.out.println("calling EnableONRMClarification
				//////// Method..flag false ");
				EnableONRMClarification(strProcessType, false);

				/*************************
				 * CPI URN CR 8001-61339 Multiple Changes CR
				 *****************************/
				/*
				 * if (sActivityName.equalsIgnoreCase("BSG_Clarification") ||
				 * sActivityName.equalsIgnoreCase("RM_Clarification")) {
				 * //////// //System.out.
				 * println(" vaibhav2 Inside BSG/RM Clarification Start CR 8001-61339 Multiple Changes sActivityName:"
				 * +sActivityName); if
				 * (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase(
				 * "Endorsement")) { //////// //System.out.
				 * println(" vaibhav2 inside fieldvaluebagset RM/BSG Clarification sActivityName: "
				 * +sActivityName); formObject.setNGLocked("CPI_ENDORSEMENT_NO",
				 * true); formObject.setNGEnable("CPI_ENDORSEMENT_NO", true);
				 * 
				 * } //////// //System.out.
				 * println(" vaibhav2 outside fieldvaluebagset RM/BSG Clarification CR 8001-61339 "
				 * ); }
				 */
				/*************************
				 * End CPI URN CR 8001-61339 Multiple Changes CR
				 **************************/

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					formObject.setSpecificDateFormat("CPI_RISK_INSPECTION_DATE", "dd/MM/yyyy");
					formObject.setSpecificDateFormat("CORP_RISK_EXPIRY_DATE", "dd/MM/yyyy");
					formObject.setSpecificDateFormat("CPI_RISK_EXPIRY_DATE", "dd/MM/yyyy");
					//////// //System.out.println(" CORP_RISK_EXPIRY_DATE: " +
					//////// formObject.getNGValue("CORP_RISK_EXPIRY_DATE"));
					//////// //System.out.println(" CPI_RISK_EXPIRY_DATE: " +
					//////// formObject.getNGValue("CPI_RISK_EXPIRY_DATE"));
					formObject.setNGValue("Corp_PAS", formObject.getNGValue("CPI_PAS"));

					/*
					 * =============================CR 8001-79910 Mapping
					 * Bucket(Yogesh)=============================
					 */
					// //System.out.println("Inside mapping bucket
					// fieldValueBagSet in BSG_QC setting Value of
					// Corp_SERVICE_RENDERED_JK Value");
					formObject.setNGValue("Corp_SERVICE_RENDERED_JK", formObject.getNGValue("CPI_SERVICE_RENDERED_JK"));
					// //System.out.println("Mapping Bucket
					// Corp_SERVICE_RENDERED_JK
					// Value:"+formObject.getNGValue("Corp_SERVICE_RENDERED_JK"));
					/*
					 * =============================End CR 8001-79910 Mapping
					 * Bucket(Yogesh)=============================
					 */

					/****************
					 * Start CR-8001-87420 Green File Digitization
					 ********************/
					// //System.out.println("Inside CR-8001-87420-Green File
					// Digitization BSG_QC setting Value ");
					formObject.setNGValue("CORP_ADDTNL_CIT_RM_ID", formObject.getNGValue("CPI_ADDTNL_CIT_RM_ID"));
					formObject.setNGValue("CORP_ADDTNL_CIT_RM_NAME", formObject.getNGValue("CPI_ADDTNL_CIT_RM_NAME"));
					formObject.setNGValue("CORP_UW_EMP_ID", formObject.getNGValue("CPI_UW_EMP_ID"));
					formObject.setNGValue("CORP_UW_NAME", formObject.getNGValue("CPI_UW_NAME"));
					/****************
					 * End CR-8001-87420 Green File Digitization
					 ********************/
					/******
					 * Start CR GREEN FILE Digitization Phase II (Yogesh)
					 ******/
					// System.out.println("Inside fieldValueBagSet Value setting
					// BSG_QC form CR GREEN FILE Digitization Phase II (Yogesh)
					// for Policy");
					formObject.setNGValue("CORP_RMT_FLAG", formObject.getNGValue("CPI_RMT_FLAG"));
					formObject.setNGValue("CORP_peRCENTAGE_OF_COMMISION",
							formObject.getNGValue("CPI_PERCENTAGE_OF_COMMISION"));
					/******
					 * End CR GREEN FILE Digitization Phase II (Yogesh)
					 ******/

					if ((sActivityName.equalsIgnoreCase("BSG_QC")
							&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")))
							|| sActivityName.equalsIgnoreCase("UW_DEO")
							|| sActivityName.equalsIgnoreCase("DEO_Clarification")) {
						//////// //System.out.println("Value Corp_PAS: " +
						//////// formObject.getNGValue("Corp_PAS"));
						formObject.setNGEnable("Corp_PAS", false);
						// **************** 31/01/2011 CR **********************
						if (formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Premia")) {
							//////// //System.out.println(" Q 31/01/2011 CR: ");
							formObject.setNGLocked("CPI_QUOTE_NO", true);
						}
						if (formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Pathfinder")) {
							//////// //System.out.println("T 31/01/2011 CR: ");
							formObject.setNGLocked("CPI_TRANSACTION_ID", true);
						}
						// **************** End 31/01/2011 CR
						// **********************
					}

					formObject.setNGValue("Corp_CUSTOMER_NAME", formObject.getNGValue("CPI_CUSTOMER_NAME"));
					formObject.setNGValue("Corp_CUSTOMER_ID", formObject.getNGValue("CPI_CUSTOMER_ID"));// PID_CPI
																										// process
																										// changes
					//////// //System.out.println(" CPI_CUSTOMER_NAME:11111 " +
					//////// formObject.getNGValue("CPI_CUSTOMER_NAME"));
					formObject.setNGValue("Corp_PRODUCT_NAME", formObject.getNGValue("CPI_PRODUCT_NAME"));
					formObject.setNGValue("Corp_TOTAL_PREMIUM", formObject.getNGValue("CPI_TOTAL_PREMIUM"));
					formObject.setNGValue("Corp_REJECTED_TO_IT", formObject.getNGValue("CPI_REJECTED_TO_IT"));
					//////// //System.out.println(" CPI_REJECTED_TO_IT: " +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					//////// //System.out.println(" CPI_Samadhan_Interaction_ID:
					//////// " +
					//////// formObject.getNGValue("CPI_Samadhan_Interaction_ID"));
					//////// //System.out.println("
					//////// Corp_Samadhan_Interaction_IDCR: " +
					//////// formObject.getNGValue("Corp_Samadhan_Interaction_ID"));
					formObject.setNGValue("Corp_Samadhan_Interaction_ID",
							formObject.getNGValue("CPI_Samadhan_Interaction_ID"));
					//////// //System.out.println("
					//////// Corp_Samadhan_Interaction_IDCR: " +
					//////// formObject.getNGValue("Corp_Samadhan_Interaction_ID"));
					formObject.setNGValue("Corp_RM_NAME", formObject.getNGValue("CPI_RM_NAME"));
					formObject.setNGValue("Corp_PRIMARY_VERTICAL", formObject.getNGValue("CPI_PRIMARY_VERTICAL"));

					formObject.setNGValue("Corp_PRIMARY_SUB_VERTICAL",
							formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL"));
					formObject.setNGValue("Corp_SECONDARY_VERTICAL", formObject.getNGValue("CPI_SECONDARY_VERTICAL"));
					formObject.setNGValue("Corp_SECONDARY_SUB_VERTICAL",
							formObject.getNGValue("CPI_SECONDARY_SUB_VERTICAL"));

					formObject.setNGValue("Corp_IL_LOCATION", formObject.getNGValue("CPI_IL_LOCATION"));
					//////// //System.out.println("CPI_PID_PAYMENT_TYPE: " +
					//////// formObject.getNGValue("CPI_PID_PAYMENT_TYPE"));
					/***************************
					 * PID-CPI process changes
					 ***************************/
					System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + sActivityName);
					formObject.setNGValue("Corp_PID_PAYMENT_TYPE", formObject.getNGValue("CPI_PID_PAYMENT_TYPE"));// PID_CPI
																													// process
																													// changes
					//////// //System.out.println("Corp_PID_PAYMENT_TYPE: " +
					//////// formObject.getNGValue("Corp_PID_PAYMENT_TYPE"));
					/*
					 * formObject.setNGValue("Corp_MODE_OF_PAYMENT",
					 * formObject.getNGValue("CPI_MODE_OF_PAYMENT"));
					 * formObject.setNGValue("Corp_INSTRUMENT_DATE",
					 * formObject.getNGValue("CPI_INSTRUMENT_DATE"));
					 * formObject.setNGValue("Corp_BANK_NAME_CD_NAME",
					 * formObject.getNGValue("CPI_BANK_NAME_CD_NAME"));
					 * formObject.setNGValue("Corp_INST_NO_CD_NO_DEP_SLIP_NO",
					 * formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO"));
					 */ // Suraj
					/***********************
					 * End PID-CPI process changes
					 ***************************/

					//////// //System.out.println("VAlue##sandeep" +
					//////// formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO"));
					////////// //System.out.println("VAlue##sandeep" +
					//////// formObject.getNGValue("Corp_INST_NO_CD_NO_DEP_SLIP_NO"));

					if (!(formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) && formObject
							.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						//////// //System.out.println("inside$$");
						formObject.setNGValue("Corp_Source_Name", formObject.getNGValue("CPI_Source_Name"));
						formObject.setNGValue("Corp_Channel_Name", formObject.getNGValue("CPI_Channel_Name"));
						formObject.setNGValue("Corp_Branch_Name", formObject.getNGValue("CPI_Branch_Name"));
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGValue("Corp_PRIVILEGE_BANKER_CODE",
								formObject.getNGValue("CPI_PRIVILEGE_BANKER_CODE"));
						formObject.setNGValue("Corp_CIF_ID", formObject.getNGValue("CPI_CIF_ID"));
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}

					if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("") && formObject
							.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {

						formObject.NGAddItem("Corp_Source_Name", formObject.getNGValue("CPI_Source_Name"));
						formObject.NGAddItem("Corp_Channel_Name", formObject.getNGValue("CPI_Channel_Name"));
						formObject.NGAddItem("Corp_Branch_Name", formObject.getNGValue("CPI_Branch_Name"));
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGValue("Corp_PRIVILEGE_BANKER_CODE",
								formObject.getNGValue("CPI_PRIVILEGE_BANKER_CODE"));
						formObject.setNGValue("Corp_CIF_ID", formObject.getNGValue("CPI_CIF_ID"));
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}

					// ========= End CR Qoute SYS ==================
					//////// //System.out.println("$$");
					formObject.setNGValue("Corp_CHANNEL_EMPLOYEE_ID", formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_ID"));
					/*****************************
					 * CR 28 by satish
					 *****************************/
					formObject.setNGValue("Corp_Channel_Employee_Name",
							formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_NAME"));
					formObject.setNGValue("Corp_Infra_Commission", formObject.getNGValue("CPI_INFRA_COMMISSION"));
					/***************************
					 * End CR 28 by satish
					 ***************************/
					formObject.setNGValue("Corp_Source_Name", formObject.getNGValue("CPI_Source_Name"));
					formObject.setNGValue("Corp_Channel_Name", formObject.getNGValue("CPI_Channel_Name"));
					formObject.setNGValue("Corp_Branch_Name", formObject.getNGValue("CPI_Branch_Name"));
					/***************************
					 * PID-CPI process changes
					 ***************************/
					formObject.setNGValue("Corp_PRIVILEGE_BANKER_CODE",
							formObject.getNGValue("CPI_PRIVILEGE_BANKER_CODE"));
					formObject.setNGValue("Corp_CIF_ID", formObject.getNGValue("CPI_CIF_ID"));
					formObject.setNGValue("Corp_CDBG_NO", formObject.getNGValue("CPI_CDBG_NO"));
					formObject.setNGValue("Corp_OTHER_PIDNO", formObject.getNGValue("CPI_OTHER_PIDNO"));
					formObject.setNGValue("Corp_RISK_EXPIRY_DATE", formObject.getNGValue("CPI_RISK_EXPIRY_DATE"));// CPI
																													// PID
																													// Additional
																													// Points
					formObject.setNGValue("Corp_LOCATION_OF_RISK", formObject.getNGValue("CPI_LOCATION_OF_RISK"));// CPI
																													// PID
																													// Additional
																													// Points
					/***********************
					 * End PID-CPI process changes
					 ***************************/

					//////// //System.out.println("Corp_Source_Name" +
					//////// formObject.getNGValue("CPI_Source_Name"));
					//////// //System.out.println("Corp_Source_Name" +
					//////// formObject.getNGValue("Corp_Source_Name"));

					/***********************
					 * Start CR-8001-54702 E-Mail Filter
					 ***************************/
					//////// //System.out.println("CR-8001-54702 E-Mail Filter
					//////// Saving values IAS/data_val for corporate ");
					formObject.setNGValue("CORP_DATA_VALIDATION_ID", formObject.getNGValue("CPI_DATA_VALIDATION_ID"));
					formObject.setNGValue("CORP_IAS_ID", formObject.getNGValue("CPI_IAS_ID"));
					/***********************
					 * End CR-8001-54702 E-Mail Filter
					 ***************************/

					/**********************
					 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
					 ***********************/

					//////// //System.out.println("Setting Value From Hidden
					//////// Field For All Worksteps CR-8001-59268");
					formObject.setNGValue("Corp_PAN", formObject.getNGValue("CPI_PAN"));

					/**********************
					 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
					 *************************/

					/**************************************
					 * CR-8001-92286 Omniflow held cover letter CR Start
					 *****************************************************/

					// //System.out.println("Setting Value From Hidden Field For
					// All Worksteps CR-8001-92286");
					formObject.setNGValue("CORP_SUM_INSURED_NO_OF_LIVES",
							formObject.getNGValue("CPI_SUM_INSURED_NO_OF_LIVES"));
					formObject.setNGValue("CORP_BSG_LOCATION", formObject.getNGValue("CPI_BSG_LOCATION"));
					formObject.setNGValue("CORP_RM_LOCATION", formObject.getNGValue("CPI_RM_LOCATION"));

					/**************************************
					 * CR-8001-92286 Omniflow held cover letter CR End
					 ******************************************************/
				} else {
					formObject.setSpecificDateFormat("CPI_FILE_QC_DATE", "dd/MM/yyyy");
					//////// //System.out.println("datesandeep2" +
					//////// dateformat.format(new Date()));
					formObject.setSpecificDateFormat("CPI_Endorsement_Effective_Date", "dd/MM/yyyy");
					// formObject.setSpecificDateFormat("End_INSTRUMENT_DATE",
					// "dd/MM/yyyy"); //PID_CPI process changes

					/*
					 * =============================CR 8001-79910 Mapping
					 * Bucket(Yogesh)=============================
					 */
					// //System.out.println("Inside mapping bucket
					// fieldValueBagSet in BSG_QC setting Value of
					// END_SERVICE_RENDERED_JK Value");
					formObject.setNGValue("END_SERVICE_RENDERED_JK", formObject.getNGValue("CPI_SERVICE_RENDERED_JK"));
					// //System.out.println("Mapping Bucket Value of
					// END_SERVICE_RENDERED_JK
					// :"+formObject.getNGValue("END_SERVICE_RENDERED_JK"));
					/*
					 * =============================End CR 8001-79910 Mapping
					 * Bucket(Yogesh)=============================
					 */

					/****************
					 * Start CR-8001-87420 Green File Digitization
					 ********************/
					// //System.out.println("Inside CR-8001-87420-Green File
					// Digitization BSG_QC setting Value ");
					formObject.setNGValue("END_ADDTNL_CIT_RM_ID", formObject.getNGValue("CPI_ADDTNL_CIT_RM_ID"));
					formObject.setNGValue("END_ADDTNL_CIT_RM_NAME", formObject.getNGValue("CPI_ADDTNL_CIT_RM_NAME"));
					formObject.setNGValue("END_UW_EMP_ID", formObject.getNGValue("CPI_UW_EMP_ID"));
					formObject.setNGValue("END_UW_NAME", formObject.getNGValue("CPI_UW_NAME"));
					/****************
					 * End CR-8001-87420 Green File Digitization
					 ********************/
					/******
					 * Start CR GREEN FILE Digitization Phase II (Yogesh)
					 ******/
					// System.out.println("Inside fieldValueBagSet Value setting
					// BSG_QC form CR GREEN FILE Digitization Phase II (Yogesh)
					// for Endorsement");
					formObject.setNGValue("End_RMT_FLAG", formObject.getNGValue("CPI_RMT_FLAG"));
					formObject.setNGValue("End_peRCENTAGE_OF_COMMISION",
							formObject.getNGValue("CPI_PERCENTAGE_OF_COMMISION"));
					/******
					 * End CR GREEN FILE Digitization Phase II (Yogesh)
					 ******/
					formObject.setNGValue("End_PAS", formObject.getNGValue("CPI_PAS"));
					formObject.setNGValue("End_CUSTOMER_NAME", formObject.getNGValue("CPI_CUSTOMER_NAME"));
					formObject.setNGValue("End_CUSTOMER_ID", formObject.getNGValue("CPI_CUSTOMER_ID"));// PID_CPI
																										// process
																										// changes
					formObject.setNGValue("End_PRODUCT_NAME", formObject.getNGValue("CPI_PRODUCT_NAME"));
					formObject.setNGValue("End_REJECTED_TO_IT", formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGValue("End_Samadhan_Interaction_ID",
							formObject.getNGValue("CPI_Samadhan_Interaction_ID"));

					formObject.setNGValue("End_TOTAL_PREMIUM", formObject.getNGValue("CPI_TOTAL_PREMIUM"));
					formObject.setNGValue("End_RM_NAME", formObject.getNGValue("CPI_RM_NAME"));

					//////// //System.out.println("VAlue##" +
					//////// formObject.getNGValue("CPI_PRIMARY_VERTICAL"));
					formObject.setNGValue("End_PRIMARY_VERTICAL", formObject.getNGValue("CPI_PRIMARY_VERTICAL"));
					formObject.setNGValue("End_PRIMARY_SUB_VERTICAL",
							formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL"));
					formObject.setNGValue("End_SECONDARY_VERTICAL", formObject.getNGValue("CPI_SECONDARY_VERTICAL"));
					formObject.setNGValue("End_SECONDARY_SUB_VERTICAL",
							formObject.getNGValue("CPI_SECONDARY_SUB_VERTICAL"));
					//////// //System.out.println("IL Location3:::" +
					//////// formObject.getNGValue("CPI_IL_LOCATION"));
					formObject.setNGValue("End_IL_LOCATION", formObject.getNGValue("CPI_IL_LOCATION"));
					//////// //System.out.println("IL Location4:::" +
					//////// formObject.getNGValue("End_IL_LOCATION"));
					//////// //System.out.println("CPI_PID_PAYMENT_TYPE: " +
					//////// formObject.getNGValue("CPI_PID_PAYMENT_TYPE"));
					/***************************
					 * PID-CPI process changes
					 ***************************/
					System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + sActivityName);
					formObject.setNGValue("End_PID_PAYMENT_TYPE", formObject.getNGValue("CPI_PID_PAYMENT_TYPE"));// PID_CPI
																													// process
																													// changes
					//////// //System.out.println("End_PID_PAYMENT_TYPE: " +
					//////// formObject.getNGValue("End_PID_PAYMENT_TYPE"));
					/*
					 * formObject.setNGValue("End_MODE_OF_PAYMENT",
					 * formObject.getNGValue("CPI_MODE_OF_PAYMENT"));
					 * formObject.setNGValue("End_INSTRUMENT_DATE",
					 * formObject.getNGValue("CPI_INSTRUMENT_DATE"));
					 * formObject.setNGValue("End_BANK_NAME_CD_NAME",
					 * formObject.getNGValue("CPI_BANK_NAME_CD_NAME"));
					 * formObject.setNGValue("End_INST_NO_CD_NO_DEP_SLIP_NO",
					 * formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO"));
					 */ // Suraj
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					formObject.setNGValue("End_Channel_Name", formObject.getNGValue("CPI_Channel_Name"));
					formObject.setNGValue("End_Source_Name", formObject.getNGValue("CPI_Source_Name"));
					formObject.setNGValue("End_Branch_Name", formObject.getNGValue("CPI_Branch_Name"));
					formObject.setNGValue("End_CHANNEL_EMPLOYEE_ID", formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_ID"));
					/*****************************
					 * CR 28 by satish
					 *****************************/
					formObject.setNGValue("End_Channel_Employee_Name",
							formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_NAME"));
					formObject.setNGValue("End_Infra_Commission", formObject.getNGValue("CPI_INFRA_COMMISSION"));
					/***************************
					 * End CR 28 by satish
					 ***************************/
					/***************************
					 * PID-CPI process changes
					 ***************************/
					formObject.setNGValue("End_PRIVILEGE_BANKER_CODE",
							formObject.getNGValue("CPI_PRIVILEGE_BANKER_CODE"));
					formObject.setNGValue("End_CIF_ID", formObject.getNGValue("CPI_CIF_ID"));
					formObject.setNGValue("End_CDBG_NO", formObject.getNGValue("CPI_CDBG_NO"));
					formObject.setNGValue("End_OTHER_PIDNO", formObject.getNGValue("CPI_OTHER_PIDNO"));
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					/*****************************
					 * CR 38 by satish
					 *****************************/
					formObject.setNGValue("End_Business_type", formObject.getNGValue("CPI_BUSINESS_TYPE"));
					formObject.setNGValue("End_Name_of_broker_agent",
							formObject.getNGValue("CPI_naME_OF_BROKER_AGENT"));
					/***************************
					 * End CR 38 by satish
					 ***************************/
					/*******************************
					 * CR 44 by satish
					 ****************************/
					formObject.setNGValue("End_coINSURANCE", formObject.getNGValue("CPI_coINSURANCE"));
					formObject.setNGValue("End_OUR_SHARE_PREMIUM", formObject.getNGValue("CPI_OUR_SHARE_PREMIUM"));
					/****************************
					 * end CR 44 by satish
					 ***************************/
					/********************
					 * CR 46 CPU DataWashing
					 ******************/
					if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
							&& (sActivityName.equalsIgnoreCase("CPUCustClarification")
									|| sActivityName.equalsIgnoreCase("RM_Clarification"))) {
						formObject.setNGValue("End_DMS_NO", formObject.getNGValue("CPI_dMS_NO"));
					}
					/******************
					 * End CR 46 CPU DataWashing
					 ****************/

					/***********************
					 * Start CR-8001-54702 E-Mail Filter
					 ***************************/
					//////// //System.out.println("CR-8001-54702 E-Mail Filter
					//////// Saving values IAS/data_val for endor ");
					formObject.setNGValue("End_DATA_VALIDATION_ID", formObject.getNGValue("CPI_DATA_VALIDATION_ID"));
					formObject.setNGValue("End_IAS_ID", formObject.getNGValue("CPI_IAS_ID"));
					/***********************
					 * End CR-8001-54702 E-Mail Filter
					 ***************************/

					/**********************
					 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
					 ***********************/

					//////// //System.out.println("Setting Value From Hidden
					//////// Field For All Worksteps CR-8001-59268");
					formObject.setNGValue("End_PAN", formObject.getNGValue("CPI_PAN"));

					/**********************
					 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
					 *************************/

					/**************************************
					 * CR-8001-92286 Omniflow held cover letter CR Start
					 *****************************************************/

					// //System.out.println("Setting Value From Hidden Field For
					// All Worksteps CR-8001-92286");
					formObject.setNGValue("END_SUM_INSURED_NO_OF_LIVES",
							formObject.getNGValue("CPI_SUM_INSURED_NO_OF_LIVES"));
					formObject.setNGValue("END_BSG_LOCATION", formObject.getNGValue("CPI_BSG_LOCATION"));
					formObject.setNGValue("END_RM_LOCATION", formObject.getNGValue("CPI_RM_LOCATION"));

					/**************************************
					 * CR-8001-92286 Omniflow held cover letter CR End
					 ******************************************************/

				}
				//////// //System.out.println("IL Location2:::" +
				//////// formObject.getNGValue("Corp_IL_LOCATION"));
				//////// //System.out.println("IL Location2:::" +
				//////// formObject.getNGValue("End_IL_LOCATION"));

				/******************* CR 46 CPU DataWashing ********************/
				if (sActivityName.equalsIgnoreCase("CPUCustClarification")) {
					formObject.setNGValue("End_DMS_NO", formObject.getNGValue("CPI_DMS_NO"));
				}
				/*****************
				 * end CR 46 CPU DataWashing
				 *******************/
				// Added by Ravi for CR2 Phase1
				if (sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("CPUCustClarification")) {
					EnableONRMClarification(strProcessType, true);
					formObject.setNGEnable("Corp_PAS", false);
					formObject.setNGEnable("End_PAS", false);
					//////// //System.out.println("TXT_RM_ID:::");
					formObject.setNGLocked("TXT_RM_ID", true);
				}

				if (sActivityName.equalsIgnoreCase("BSG_QC") || sActivityName.equalsIgnoreCase("BSG_Clarification")) {
					formObject.setNGLocked("CPI_PID_CCR_NUMBER", true);
				}

			}

			/********************
			 * CPI URN CR 8001-61339 Multiple Changes CR
			 ***********************/

			if (sActivityName.equalsIgnoreCase("BSG_Clarification")
					|| sActivityName.equalsIgnoreCase("RM_Clarification")) {
				//////// //System.out.println(" Inside fieldValueBagSet Method
				//////// 8001-61339 For:"+sActivityName);
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					//////// //System.out.println(" vaibhav3 inside
					//////// fieldvaluebagset RM/BSG Clarification
					//////// sActivityName: "+sActivityName);
					formObject.setNGLocked("CPI_ENDORSEMENT_NO", true);
					formObject.setNGEnable("CPI_ENDORSEMENT_NO", true);

				}
				//////// //System.out.println(" Exiting fieldvaluebagset Method
				//////// 8001-61339 For RM/BSG Clarification");
			}

			/**********************
			 * End CPI URN CR 8001-61339 Multiple Changes CR
			 ******************/

			if (sActivityName.equalsIgnoreCase("Exit") || sActivityName.equalsIgnoreCase("Work Exit1")
					|| sActivityName.equalsIgnoreCase("Query1") || sActivityName.equalsIgnoreCase("Discard")) {
				formObject.setNGLocked("CPI_LEADERS_POLICY_NO", false);
			}

			if (!sActivityName.equalsIgnoreCase("Work Introduction1")) {
				paintFrame();
			}
			if (!(sActivityName.equalsIgnoreCase("Work Introduction1") || sActivityName.equalsIgnoreCase("Endorsement")
					|| sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Co_Insurance")
					|| sActivityName.equalsIgnoreCase("Co_Insurance_RM")
					|| sActivityName.equalsIgnoreCase("CPU_Assignment")
					|| sActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")/* CR 46 CPU DataWashing */
					|| sActivityName.equalsIgnoreCase("CPU_DW_Clarification")
					|| sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")
					|| sActivityName.equalsIgnoreCase("COPS_Policy_Endr")
					|| sActivityName.equalsIgnoreCase("COPS_Policy_Print"))) // CR-8001-70893
																				// Marine
																				// CR
			{
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					if (!sActivityName.equalsIgnoreCase("RM_Clarification")) {
						formObject.NGAddItem("Corp_PRODUCT_NAME", formObject.getNGValue("CPI_PRODUCT_NAME"));
					}

					formObject.setNGValue("Corp_PRODUCT_NAME", formObject.getNGValue("CPI_PRODUCT_NAME"));
					// //System.out.println("CR12:::" +
					// formObject.getNGValue("CPI_PRODUCT_NAME"));
				} else {
					if (!sActivityName.equalsIgnoreCase("RM_Clarification")) {
						formObject.NGAddItem("End_PRODUCT_NAME", formObject.getNGValue("CPI_PRODUCT_NAME"));
					}

					formObject.NGAddItem("End_PRODUCT_NAME", formObject.getNGValue("CPI_PRODUCT_NAME"));
					formObject.setNGValue("End_PRODUCT_NAME", formObject.getNGValue("CPI_PRODUCT_NAME"));
					//////// //System.out.println("CR12:::" +
					//////// formObject.getNGValue("CPI_PRODUCT_NAME"));
				}
			}
			if (!sActivityName.equalsIgnoreCase("Co_Insurance") && !sActivityName.equalsIgnoreCase("Co_Insurance_RM")
					&& !sActivityName.equalsIgnoreCase("Work Introduction1")
					&& !sActivityName.equalsIgnoreCase("Endorsement")
					&& !sActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")/* CR 46 CPU DataWashing */
					&& !sActivityName.equalsIgnoreCase(
							"CPU_DW_Clarification")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 */
					&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) { // sandeep
																												// yadav
					Validate_Quote_SYS_Fields();
				}
			}

			// sandy
			/********************** CR18### *****************************/
			// satish
			if ((!sActivityName.equalsIgnoreCase("Work Introduction1"))
					&& (!sActivityName.equalsIgnoreCase("Co_insurance"))
					&& ((formObject.getNGValue("CPI_co_insurance_status")).equalsIgnoreCase("Co Insurance"))) {
				//////// //System.out.println("CoInsValidation called at Non
				//////// Co_insurance worksteps: ");
				CoInsValidation();
			}
			// satish
			/********************** End CR18### *****************************/
			// bhagat CR CPU_HEALTH
			// ..............................................
			// Field Enable Disable for all cases
			//////// //System.out.println("Field Enable Disable ");
			if (sActivityName.equalsIgnoreCase("Processing Hub") || sActivityName.equalsIgnoreCase("BSG_QC")
					|| sActivityName.equalsIgnoreCase("CPU_HEALTH") || sActivityName.equalsIgnoreCase("CPU_Approver")) // CR-8001-54702
																														// E-Mail
																														// Filter
																														// :
																														// Added
																														// health
																														// and
																														// approver
																														// wrkstps
			{
				//////// //System.out.println("Field Enable for CR-8001-54702
				//////// E-mail filter: ");
				formObject.setNGEnable("CPI_REFUND_ID", true);
				formObject.setNGLocked("CPI_REFUND_ID", true);
				formObject.setNGEnable("txtRefundID", true);
				formObject.setNGLocked("txtRefundID", true);
			} else {
				//////// //System.out.println("Disable: ");
				formObject.setNGLocked("CPI_REFUND_ID", false);
				formObject.setNGLocked("txtRefundID", false);
			}
			// ..............................................
			// end bhagat CR CPU_HEALTH
			// Sadik New Block for disabling cpi route to
			if (sActivityName.equalsIgnoreCase("Corporate_UW")) {
				String prevWrkStep = formObject.getNGValue("CPI_PREV_WRK_STEP");
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
					if (prevWrkStep.equalsIgnoreCase("CPU_Data_Washing")) {
						// //System.out.println("Sadik CR9 In Corporate_UW
						// disabling route to if block");
						// Disable Route to for datawashing cases
						formObject.setNGEnable("CPI_ROUTE_TO", false);
						formObject.setNGLocked("CPI_ROUTE_TO", false);
					}
				}
			}
			// end
			/**************************************
			 * CR-8001-92286 Omniflow held cover letter CR Start
			 *****************************************************/
			if ((sActivityName.equalsIgnoreCase("RM_Green_File")) && (formObject.getNGValue("CPI_quOTE_SYS_ID") != null
					&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
				// //System.out.println("Quote Case in
				// RM_Green_File..CR-8001-92286 Omniflow held cover
				// letter(vaibhav)");
				formObject.setNGEnable("CPI_NETWORK_PARTNER", true);
				formObject.setNGLocked("CPI_NETWORK_PARTNER", true);
				formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME", true);
				formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", true);

			}
			if (sActivityName.equalsIgnoreCase("BSG_Clarification")
					|| sActivityName.equalsIgnoreCase("RM_Clarification")) {
				// //System.out.println("Enabling QuoteSysID in Clarification
				// Buckets..CR-8001-92286 Omniflow held cover letter(vaibhav)");
				formObject.setNGEnable("Corp_QuoteSYSID", true);
				formObject.setNGLocked("Corp_QuoteSYSID", true);
			}

			/**************************************
			 * CR-8001-92286 Omniflow held cover letter CR End
			 ******************************************************/

			/*****
			 * Start CR-8001-71104_CR-8119-87478_Auto CPI generation iPartner
			 *****/
			if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
					|| sActivityName.equalsIgnoreCase("BSG_QC") || sActivityName.equalsIgnoreCase("RM_Clarification")
					|| sActivityName.equalsIgnoreCase("BSG_Clarification"))
					&& (formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))
					&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
					&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))
					&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
				formObject.setNGEnable("CPI_IPARTNER_POLICY_NO", true);
				formObject.setNGLocked("CPI_IPARTNER_POLICY_NO", true);
				// System.out.println("Inside fieldValueBagSet METHOD Auto CPI
				// generation iPartner");
				if (sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
						|| sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification")) {
					// System.out.println("Inside IF fieldValueBagSet METHOD
					// Auto CPI generation iPartner
					// "+formObject.getNGValue("CPI_Process_Type"));
					formObject.setNGEnable("CPI_SECONDARY_VERTICAL", false);
					formObject.setNGLocked("CPI_SECONDARY_VERTICAL", false);
					formObject.setNGEnable("CPI_SECONDARY_SUB_VERTICAL", false);
					// formObject.setNGLocked("CPI_SECONDARY_SUB_VERTICAL",false);
					System.out.println("Disabling value CPI_PID_PAYMENT_TYPE at " + sActivityName);
					// formObject.setNGValue("CPI_PID_PAYMENT_TYPE","No");
					formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", false);
					formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
					formObject.setNGEnable("CPI_PRIVILEGE_BANKER_CODE", false);
					formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
					formObject.setNGEnable("CPI_IAS_ID", false);
					formObject.setNGLocked("CPI_IAS_ID", false);
					formObject.setNGEnable("CPI_DATA_VALIDATION_ID", false);
					formObject.setNGLocked("CPI_DATA_VALIDATION_ID", false);
					formObject.setNGEnable("CPI_VAS", false);
					formObject.setNGLocked("CPI_VAS", false);
					formObject.setNGEnable("CPI_REFUND_ID", false);
					formObject.setNGLocked("CPI_REFUND_ID", false);
					formObject.setNGEnable("CPI_OTHER_PIDNO", false);
					formObject.setNGLocked("CPI_OTHER_PIDNO", false);
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Issuance")) {
						// System.out.println("Inside if Corporate Policy
						// Insurance Auto CPI generation iPartner
						// "+formObject.getNGValue("CPI_Process_Type"));
						// Default Value and freez
						// System.out.println("//Default Value and freez");
						formObject.setNGValue("CPI_MH", "No");
						formObject.setNGLocked("CPI_MH", false);
						// formObject.setNGEnable("CPI_MH",false);
						formObject.setNGValue("CPI_EXCEPTION_TO_MH", "I Partner");
						formObject.setNGLocked("CPI_EXCEPTION_TO_MH", false);
						formObject.setNGEnable("CPI_EXCEPTION_TO_MH", false);
						formObject.setNGValue("CPI_NETWORK_PARTNER", "No");
						formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
						// formObject.setNGEnable("CPI_NETWORK_PARTNER",false);
						formObject.setNGValue("CPI_RI_INWARD", "No");
						formObject.setNGLocked("CPI_RI_INWARD", false);
						formObject.setNGEnable("CPI_RI_INWARD", false);
						formObject.setNGValue("CPI_PRODUCT_TYPE", "iPartner");
						formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
						formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
						formObject.setNGValue("CPI_BOOKING_TYPE", "FINAL");
						formObject.setNGLocked("CPI_BOOKING_TYPE", false);
						formObject.setNGEnable("CPI_BOOKING_TYPE", false);
						// Enable

						// Disable
						// System.out.println("//Disable Value and freez");
						formObject.setNGEnable("CPI_SECONDARY_MO_ID", false);
						formObject.setNGLocked("CPI_SECONDARY_MO_ID", false);
						formObject.setNGEnable("CPI_SECONDARY_MO_NAME", false);
						formObject.setNGLocked("CPI_SECONDARY_MO_NAME", false);
						formObject.setNGEnable("CPI_quOTE_SYS_ID", false);
						formObject.setNGLocked("CPI_quOTE_SYS_ID", false);
						formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME", false);
						formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
						formObject.setNGEnable("CPI_MH_INTERACTION_NO", false);
						formObject.setNGLocked("CPI_MH_INTERACTION_NO", false);
						formObject.setNGEnable("CPI_TRANSACTION_ID", false);
						formObject.setNGLocked("CPI_TRANSACTION_ID", false);
						formObject.setNGEnable("CPI_CDBG_NO", false);
						formObject.setNGLocked("CPI_CDBG_NO", false);
					} else {
						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
							// System.out.println("Inside else Endorsement Auto
							// CPI generation iPartner");
							// Default Value and freez
							// System.out.println("//Default Value and freez");
							formObject.setNGValue("CPI_PAS", "Pathfinder");
							formObject.setNGLocked("CPI_PAS", false);
							formObject.setNGEnable("CPI_PAS", false);
							formObject.setNGValue("CPI_TYPE_OF_ENDORSEMENT", "External endorsement");
							formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", false);
							formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", false);
							// Enable

							// Disable
							// System.out.println("//Disable Value and freez");
							formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
							formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
							formObject.setNGEnable("CPI_CLAIM_NO", false);
							formObject.setNGLocked("CPI_CLAIM_NO", false);
							formObject.setNGEnable("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
							formObject.setNGLocked("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
						}
					}
				}
				if (sActivityName.equalsIgnoreCase("BSG_QC")) {
					// System.out.println("BSG_QC Auto CPI generation
					// iPartner.....");
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Issuance")) {
						formObject.setNGEnable("Corp_SECONDARY_VERTICAL", false);
						formObject.setNGLocked("Corp_SECONDARY_VERTICAL", false);
						formObject.setNGEnable("Corp_SECONDARY_SUB_VERTICAL", false);
						formObject.setNGLocked("Corp_SECONDARY_SUB_VERTICAL", false);
						formObject.setNGEnable("Corp_PID_PAYMENT_TYPE", false);
						formObject.setNGLocked("Corp_PID_PAYMENT_TYPE", false);
						formObject.setNGEnable("Corp_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGLocked("Corp_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGEnable("Corp_IAS_ID", false);
						formObject.setNGLocked("Corp_IAS_ID", false);
						formObject.setNGEnable("Corp_DATA_VALIDATION_ID", false);
						formObject.setNGLocked("Corp_DATA_VALIDATION_ID", false);
						formObject.setNGEnable("Corp_OTHER_PIDNO", false);
						formObject.setNGLocked("Corp_OTHER_PIDNO", false);
					} else {
						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
							formObject.setNGEnable("End_SECONDARY_VERTICAL", false);
							formObject.setNGLocked("End_SECONDARY_VERTICAL", false);
							formObject.setNGEnable("End_SECONDARY_SUB_VERTICAL", false);
							formObject.setNGLocked("End_SECONDARY_SUB_VERTICAL", false);
							formObject.setNGEnable("End_PID_PAYMENT_TYPE", false);
							formObject.setNGLocked("End_PID_PAYMENT_TYPE", false);
							formObject.setNGEnable("End_PRIVILEGE_BANKER_CODE", false);
							formObject.setNGLocked("End_PRIVILEGE_BANKER_CODE", false);
							formObject.setNGEnable("End_IAS_ID", false);
							formObject.setNGLocked("End_IAS_ID", false);
							formObject.setNGEnable("End_DATA_VALIDATION_ID", false);
							formObject.setNGLocked("End_DATA_VALIDATION_ID", false);
							formObject.setNGEnable("End_OTHER_PIDNO", false);
							formObject.setNGLocked("End_OTHER_PIDNO", false);
						}
					}
				}
			} else {
				formObject.setNGEnable("CPI_IPARTNER_POLICY_NO", false);
				formObject.setNGLocked("CPI_IPARTNER_POLICY_NO", false);
			}
			/*****
			 * End CR-8001-71104_CR-8119-87478_Auto CPI generation iPartner
			 *****/

			/****** Start CR GREEN FILE Digitization Phase II (Yogesh) ******/
			if ((sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")
					|| sActivityName.equalsIgnoreCase("BSG_QC") || sActivityName.equalsIgnoreCase("RM_Clarification")
					|| sActivityName.equalsIgnoreCase("BSG_Clarification"))
					&& !(formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))
					&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
					&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
				// System.out.println("Inside IF fieldValueBagSet METHOD CR
				// GREEN FILE Digitization Phase II (Yogesh)
				// "+formObject.getNGValue("CPI_Process_Type"));
				formObject.setNGEnable("CPI_TRANSACTION_TYPE", true);
				formObject.setNGLocked("CPI_TRANSACTION_TYPE", true);
				formObject.setNGEnable("CPI_TOTAL_PREMIUM", true);
				formObject.setNGLocked("CPI_TOTAL_PREMIUM", true);
				if (sActivityName.equalsIgnoreCase("RM_Green_File") || sActivityName.equalsIgnoreCase("Endorsement")) {
					// System.out.println("enabling fieldValueBagSet
					// RM_Green_File Endorsement");
					formObject.setNGEnable("CPI_RMT_FLAG", true);
					formObject.setNGLocked("CPI_RMT_FLAG", true);
					formObject.setNGEnable("CPI_PERCENTAGE_OF_COMMISION", true);
					formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", true);
				} else if (sActivityName.equalsIgnoreCase("BSG_QC")
						|| sActivityName.equalsIgnoreCase("RM_Clarification")
						|| sActivityName.equalsIgnoreCase("BSG_Clarification")) {
					// System.out.println("Inside elseIF fieldValueBagSet METHOD
					// for policy CR GREEN FILE Digitization Phase II (Yogesh)
					// "+formObject.getNGValue("CPI_Process_Type"));

					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						// System.out.println("enabling fieldValueBagSet
						// Corporate Policy Insurance");
						formObject.setNGEnable("CPI_PRODUCT_TYPE", true);
						formObject.setNGLocked("CPI_PRODUCT_TYPE", true);
						formObject.setNGEnable("CPI_PRODUCT_NAME", true);
						formObject.setNGLocked("CPI_PRODUCT_NAME", true);
						formObject.setNGEnable("CORP_RMT_FLAG", true);
						formObject.setNGLocked("CORP_RMT_FLAG", true);
						formObject.setNGEnable("CORP_PERCENTAGE_OF_COMMISION", true);
						formObject.setNGLocked("CORP_PERCENTAGE_OF_COMMISION", true);
						formObject.setNGEnable("CORP_TOTAL_PREMIUM", true);
						formObject.setNGLocked("CORP_TOTAL_PREMIUM", true);
					} else if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement"))

					{
						// System.out.println("enabling fieldValueBagSet
						// Endorsement");

						formObject.setNGEnable("End_RMT_FLAG", true);
						formObject.setNGLocked("End_RMT_FLAG", true);
						formObject.setNGEnable("End_TOTAL_PREMIUM", true);
						formObject.setNGLocked("End_TOTAL_PREMIUM", true);
						formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", true);
						formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", true);
						formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
						formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
						formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", true);
						formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", true);
						formObject.setNGEnable("CPI_ENDORSEMENT_EFFECTIVE_DATE", true);
						formObject.setNGLocked("CPI_ENDORSEMENT_EFFECTIVE_DATE", true);
						formObject.setNGEnable("CPI_ENDORSEMENT_NO", true);
						formObject.setNGLocked("CPI_ENDORSEMENT_NO", true);
						if (formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("No")) {
							formObject.setNGEnable("CPI_TOTAL_PREMIUM", true);
							formObject.setNGLocked("CPI_TOTAL_PREMIUM", true);
						}
						formObject.setNGEnable("End_PERCENTAGE_OF_COMMISION", true);
						formObject.setNGLocked("End_PERCENTAGE_OF_COMMISION", true);
					} else {
						// System.out.println("disabling fieldValueBagSet");
						formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", false);
						formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", false);
						formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGEnable("CPI_ENDORSEMENT_EFFECTIVE_DATE", false);
						formObject.setNGLocked("CPI_ENDORSEMENT_EFFECTIVE_DATE", false);
						formObject.setNGEnable("CPI_TOTAL_PREMIUM", false);
						formObject.setNGLocked("CPI_TOTAL_PREMIUM", false);
						formObject.setNGEnable("CPI_ENDORSEMENT_NO", false);
						formObject.setNGLocked("CPI_ENDORSEMENT_NO", false);
						formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
						formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
						formObject.setNGEnable("CPI_PRODUCT_NAME", false);
						formObject.setNGLocked("CPI_PRODUCT_NAME", false);
						formObject.setNGEnable("End_RMT_FLAG", false);
						formObject.setNGLocked("End_RMT_FLAG", false);
						formObject.setNGEnable("End_PERCENTAGE_OF_COMMISION", false);
						formObject.setNGLocked("End_PERCENTAGE_OF_COMMISION", false);
						formObject.setNGEnable("End_TOTAL_PREMIUM", false);
						formObject.setNGLocked("End_TOTAL_PREMIUM", false);
						formObject.setNGEnable("CORP_RMT_FLAG", false);
						formObject.setNGLocked("CORP_RMT_FLAG", false);
						formObject.setNGEnable("CORP_PERCENTAGE_OF_COMMISION", false);
						formObject.setNGLocked("CORP_PERCENTAGE_OF_COMMISION", false);
						formObject.setNGEnable("CORP_TOTAL_PREMIUM", false);
						formObject.setNGLocked("CORP_TOTAL_PREMIUM", false);
					}
				} else {
					// System.out.println("in side fieldValueBagSet Else CR
					// GREEN FILE Digitization Phase II (Yogesh) disable
					// control");
					formObject.setNGEnable("CPI_TRANSACTION_TYPE", false);
					formObject.setNGLocked("CPI_TRANSACTION_TYPE", false);
					formObject.setNGEnable("CPI_RMT_FLAG", false);
					formObject.setNGLocked("CPI_RMT_FLAG", false);
					formObject.setNGEnable("CPI_PERCENTAGE_OF_COMMISION", false);
					formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", false);
				}
			}
			/****** End CR GREEN FILE Digitization Phase II (Yogesh) ******/

			if (sActivityName.equalsIgnoreCase("Corporate_UW")) {
				// System.out.println("Vaibhav Corporate_UW Exception Issue
				// Fieldvaluebagset==");
				formObject.setNGEnable("CPI_ROUTE_TO", true);
				formObject.setNGLocked("CPI_ROUTE_TO", true);
			}

		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return "0";
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return "0";
		}

		//////// //System.out.println("Exiting fieldValueBagSet at : " +
		//////// dateFormat1.format(new Date()));

		return null;
	}

	public void showPage(String url) {
		//////// //System.out.println("Entering showPage at : " +
		//////// dateFormat1.format(new Date()));

		str[0] = url;
		obj = js.call("OpenURL_CPI", str);

		//////// //System.out.println("Exiting showPage at : " +
		//////// dateFormat1.format(new Date()));
	}

	/*****************
	 * CR-OMCPI-1314-03 Mail_Management_for_CPU_Datawashing Start
	 **********/
	public void showMailPage(String url, String type) {
		//////// //System.out.println("Entering showPage at : " +
		//////// dateFormat1.format(new Date()));

		str[0] = url;
		if (type.equalsIgnoreCase("viewmail")) {
			obj = js.call("OpenMailURL_CPI", str);
		} else if (type.equalsIgnoreCase("replymail")) {
			obj = js.call("OpenReplyMail_CPI", str);
		} else if (type.equalsIgnoreCase("urnnumberupdate")) {
			obj = js.call("OpenUrnNumUpdate_CPI", str);
		} else if (type.equalsIgnoreCase("docupload")) {
			obj = js.call("OpenDocUpload_CPI", str);
		} else if (type.equalsIgnoreCase("ViewDocument")) {
			obj = js.call("OpenDocumentView_MHT", str);
		} else if (type.equalsIgnoreCase("hypothecated")) { // CR-8001-92286
															// Omniflow held
															// cover letter CR
			obj = js.call("hypothecatedsearch_CPI", str);
		} /*
			 * else if (type.equalsIgnoreCase("ExceptioName")) { obj =
			 * js.call("setExceptionName_CPI", str); }
			 */

		//////// //System.out.println("Exiting showPage at : " +
		//////// dateFormat1.format(new Date()));
	}

	/*****************
	 * CR-OMCPI-1314-03 Mail_Management_for_CPU_Datawashing End
	 **********/
	public void lockPaymentModes() {
		formObject.setNGLocked("CPI_MODE_OF_PAYMENT", false);
		formObject.setNGLocked("CPI_MODE_OF_PAYMENT2", false);
		formObject.setNGLocked("CPI_MODE_OF_PAYMENT3", false);
	}

	/*************** Start CR-OMCPI-1314-04 URN No *****************/
	public String generateURNNo(String workStepName) {
		String rmId = null;
		String productName = null;
		String processType = null;
		String riskInspectionDate = null;
		String classOfBusiness = null;
		String finYear = null;
		String endorEffDate = null;
		int procCode = 0;
		String nameOfComp = "";
		String offCode = "";
		String serialNo = "";
		String qryRes = "";

		rmId = formObject.getNGValue("CPI_RM_ID");
		productName = formObject.getNGValue("CPI_PRODUCT_NAME");
		processType = formObject.getNGValue("CPI_Process_Type");
		if (workStepName.equalsIgnoreCase("RM_Green_File") || workStepName
				.equalsIgnoreCase("BSG_QC")/* Quote BSG_QC URN generate Suraj */) {
			riskInspectionDate = formObject.getNGValue("CPI_RISK_INSPECTION_DATE");
		} else if (workStepName.equalsIgnoreCase("Endorsement")) {
			endorEffDate = formObject.getNGValue("CPI_eNDORSEMENT_EFFECTIVE_DATE");
		}

		if (rmId == null || rmId.equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "Please select rm_id");
			formObject.NGFocus("CPI_RM_ID");
			return "0";
		} else if (productName == null || productName.equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "Please Select PRODUCT_NAME");
			formObject.NGFocus("CPI_PRODUCT_NAME");
			return "0";
		} else if (processType == null || processType.equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "Please Select Process Type");
			formObject.NGFocus("CPI_Process_Type");
			return "0";
		} else if ((riskInspectionDate == null || riskInspectionDate.equalsIgnoreCase(""))
				&& (workStepName.equalsIgnoreCase("RM_Green_File") || workStepName.equalsIgnoreCase(
						"BSG_QC")/* Quote BSG_QC URN generate Suraj */)) {
			JOptionPane.showMessageDialog(null, "Pls Enter Risk inception date");
			formObject.NGFocus("CPI_RISK_INSPECTION_DATE");
			return "0";
		} else if ((endorEffDate == null || endorEffDate.equalsIgnoreCase(""))
				&& workStepName.equalsIgnoreCase("Endorsement")) {
			JOptionPane.showMessageDialog(null, "Pls Enter Endorsement Effective date");
			formObject.NGFocus("CPI_eNDORSEMENT_EFFECTIVE_DATE");
			return "0";
		}

		if (!productName.equalsIgnoreCase("") && productName != null) {
			classOfBusiness = getClassOfBusiness(productName);
			if (classOfBusiness == null || classOfBusiness.equals("")) {
				JOptionPane.showMessageDialog(null, "ClassOfBusiness of Product doesn't exist in the System");
				return "0";
			}

		}
		if ((riskInspectionDate != null && !riskInspectionDate.equalsIgnoreCase(""))
				|| (endorEffDate != null && !endorEffDate.equalsIgnoreCase(""))) {
			String dateFieldName = "";
			if (workStepName.equalsIgnoreCase("RM_Green_File") || workStepName.equalsIgnoreCase(
					"BSG_QC")/* Quote BSG_QC URN generate Suraj */) {
				finYear = getFinancialYear(riskInspectionDate);
				dateFieldName = "risk inception date";
			} else if (workStepName.equalsIgnoreCase("Endorsement")) {
				finYear = getFinancialYear(endorEffDate);
				dateFieldName = "Endorsement Effective date";
			}
			// finYear = getFinancialYear(riskInspectionDate);
			if (finYear == "0" || finYear.equals("0")) {
				JOptionPane.showMessageDialog(null,
						"URN number cannot have a " + dateFieldName + " prior to 1 Jan 2014");
				return "0";
			} else if (finYear == "1" || finYear.equals("1")) {
				JOptionPane.showMessageDialog(null, "Please Select Valid" + dateFieldName);
				return "0";
			}
		}
		if (processType != null && processType.equalsIgnoreCase("Corporate Policy Insurance")) {
			// procCode = 1;
			procCode = 0; // NEW FORMAT URN CR-8001-56225
		} else if (processType != null && processType.equalsIgnoreCase("Endorsement")) {
			String extEndrType = formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE");
			if (extEndrType != null && extEndrType.equalsIgnoreCase("Extension endorsement")) {
				// procCode = 1; // for all Extension endorsement
				procCode = 0; // for all Extension endorsement NEW FORMAT
								// CR-8001-56225
			} else {
				// procCode = 2;// for all Endorsement cases
				procCode = 1; // for all Endorsement cases NEW FORMAT
								// CR-8001-56225
			}
		}

		String getQry = "select Name_of_Comp,Office_Code,SerialNo from NG_CPI_URNNo where Policy_TypeCode=" + procCode;
		ArrayList urnList = formObject.getNGDataFromDataSource(getQry, 3);
		if (urnList != null && urnList.size() > 0) {
			qryRes = (urnList.get(0)).toString();
			//////// //System.out.println("qryRes== " + qryRes);
			qryRes = qryRes.substring((qryRes.indexOf("[") + 1), (qryRes.indexOf("]")));
			String res[] = qryRes.split(",");
			nameOfComp = res[0].trim();
			offCode = res[1].trim();
			serialNo = res[2].trim();
			//////// //System.out.println("nameOfComp== " + nameOfComp +
			//////// "**offCode===" + offCode + "**serialNo==" + serialNo);
		}
		//////// //System.out.println("classOfBusiness=="+classOfBusiness +
		//////// "finYear=="+finYear);
		if (classOfBusiness != null && !classOfBusiness.equals("") && !finYear.equals("") && !nameOfComp.equals("")
				&& !offCode.equals("") && !serialNo.equals("")) {
			int serial = Integer.parseInt(serialNo);
			serial = serial + 1;
			int ser = serial;
			int count = 0;
			while (ser > 0) {
				ser = ser / 10;
				count++;
			}
			String num = "";
			for (int m = count; m < 8; m++) {
				num = num + "0";
			}
			String finalUrnNo = num + "" + serial;
			// String urnNumber = nameOfComp + "/" + offCode + "/" +
			// classOfBusiness + "/" + procCode + "/" + finalUrnNo + "/" +
			// finYear;
			String urnNumber = nameOfComp + "" + offCode + "" + classOfBusiness + "" + procCode + "" + finalUrnNo + ""
					+ finYear; // NEW FORMAT URN CR-8001-56225

			////////// //System.out.println("final urnNumber== " + urnNumber);
			//////// //System.out.println("final urnNumber NEW FORMAT== " +
			////////// urnNumber);
			return urnNumber + "~" + finalUrnNo;
		}

		//////// //System.out.println("complete");
		return "1";

	}

	public void enableDesiableURNFields(String coin_dd, boolean bool) {
		// for enable and desiable fields for URN generation
		//////// //System.out.println("coin_dd==" + coin_dd + "---bool==" +
		// bool);
		String urnDateStatus = "";
		// formObject.setNGLocked("CPI_Leader_URN_No",bool);
		if (coin_dd != null && coin_dd.equalsIgnoreCase("Leader")) {
			formObject.setNGEnable("Gen_Urn_No", bool);
			formObject.setNGLocked("CPI_Leader_URN_No", false);
		} else if (coin_dd != null
				&& (coin_dd.equalsIgnoreCase("Follower") || coin_dd.equalsIgnoreCase("No Co-Insurance"))) {
			formObject.setNGEnable("Gen_Urn_No", false);
			if (coin_dd.equalsIgnoreCase("Follower")) {
				formObject.setNGLocked("CPI_Leader_URN_No", true);
			} else {
				formObject.setNGLocked("CPI_Leader_URN_No", false);
			}
		}

		formObject.setNGLocked("CPI_coINSURANCE", bool);
		formObject.setNGEnable("CPI_coINSURANCE", bool);
		if (formObject.getWFActivityName().equalsIgnoreCase("RM_Green_File")) {
			// formObject.setNGLocked("CPI_RISK_INSPECTION_DATE",bool);
			formObject.setNGEnable("CPI_RISK_INSPECTION_DATE", bool);
		} else if (formObject.getWFActivityName().equalsIgnoreCase("Endorsement")) {
			// formObject.setNGLocked("CPI_eNDORSEMENT_EFFECTIVE_DATE",bool);
			formObject.setNGEnable("CPI_eNDORSEMENT_EFFECTIVE_DATE", bool);
		}
		formObject.setNGLocked("CPI_RM_ID", bool);
		formObject.setNGEnable("CPI_RM_ID", bool);
		formObject.setNGLocked("CPI_prODUCT_TYPE", bool);
		formObject.setNGEnable("CPI_prODUCT_TYPE", bool);
		// formObject.setNGLocked("CPI_prODUCT_NAME",bool);
		formObject.setNGEnable("CPI_prODUCT_NAME", bool);
	}

	/*************** End CR-OMCPI-1314-04 URN No *******************/
	public void NGF_EventHandler(String pEventName, String pControlName, String pControlValue, String pReserved) {
		//////// //System.out.println("Entering NGF_EventHandler at : " +
		//////// dateFormat1.format(new Date()));
		//////// //System.out.println("Quote Event: " + pControlName);
		//////// //System.out.println("\n\nNGF_EventHandler Called \n" +
		//////// pEventName + " " + pControlName + " " + pControlValue + " " +
		//////// pReserved);

		NGPickList picklist = null;
		PickListListener pl = null;

		String lstrProcessName = formObject.getWFProcessName();
		String lstrActivityName = formObject.getWFActivityName();
		/*********************************
		 * Start Yogesh Marine
		 ***********************/
		if ((lstrActivityName.equalsIgnoreCase("BSG_QC") || lstrActivityName.equalsIgnoreCase("BSG_Clarification")
				|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))
				&& (!formObject.getNGValue("CPI_QUOTE_SYS_ID").equalsIgnoreCase(""))
				&& (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance"))) {
			formObject.setNGEnable("CORP_SP_NAME", true);
			formObject.setNGLocked("CORP_SP_NAME", true);
			// //System.out.println("After Enable :true Locked :true mean
			// unlock");
		}
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_RM_ID"))
				&& (lstrActivityName.equalsIgnoreCase("BSG_QC")
						|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))
				&& (!formObject.getNGValue("CPI_QUOTE_SYS_ID").equalsIgnoreCase(""))) {
			// //System.out.println("Inside RM_ID KeyPress Yogesh");
			String name = "RM_ID,RM_NAME";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
		}
		/*********************************
		 * End Yogesh Marine
		 ***********************/
		/***** Start CR-8001-87420-Green File Digitization *****/
		// additional cit/rm name
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_ADDTNL_CIT_RM_ID"))
				&& (lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("BSG_QC")
						|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))
				&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG1")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG2")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))) {
			// //System.out.println("inside Green File Digitization...Additinal
			// CIT/RM ID KeyPress F3");
			String name = "Additinal CIT/RM ID,Additional CIT/RM NAME";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
		}
		// uw emp id
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_UW_EMP_ID"))
				&& (lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("RM_Green_File"))) {
			// //System.out.println("inside Green File Digitization...Additinal
			// CIT/RM ID KeyPress F3");
			String name = "UW EMP ID,UW NAME";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
		}
		// CPI_SECONDARY_MO_ID
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_SECONDARY_MO_ID"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File"))) {
			// //System.out.println("inside Green File Digitization...Additinal
			// CIT/RM ID KeyPress F3");
			String name = "SECONDARY MO ID,SECONDARY MO NAME";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
		}
		// CPI_RM_EMP_ID_SPG_IBG
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_RM_EMP_ID_SPG_IBG"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File"))
				&& (formObject.getNGValue("CPI_prIMARY_SUB_VERTICAL").equalsIgnoreCase("IBGNP"))) {
			// //System.out.println("inside Green File Digitization...Additinal
			// CIT/RM ID KeyPress F3");
			String name = "RM EMP ID SPG IBG,RM NAME SPG IBG";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
		}
		// CPI_PREV_POLICY_NO
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_PREV_POLICY_NO"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File"))
				&& (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal"))
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
			// //System.out.println("inside Green File Digitization...Additinal
			// CIT/RM ID KeyPress F3");
			String name = "Previos Policy No,Customer id,Customer Name";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
		}
		// CPI_POLICY_NUMBER_BASE
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_POLICY_NUMBER_BASE"))
				&& (lstrActivityName.equalsIgnoreCase("Endorsement"))) {
			// //System.out.println("inside Green File Digitization...Additinal
			// CIT/RM ID KeyPress F3");
			String name = "Base Policy No.,Policy Start Date,Customer id,Customer Name,Product Name,Product Code";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
		}
		if (pEventName.equalsIgnoreCase("Click") && pControlName.equalsIgnoreCase("CPI_PRODUCT_NAME")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))) {
			// //System.out.println("inside the IS_PF_FETCH value setting....");
			String prdcode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
			// //System.out.println("Product code value is
			// :---"+formObject.getNGValue("CPI_PRODUCT_IRDACODE"));
			if (formObject.getNGValue("CPI_IS_PF_FETCH") == null
					|| formObject.getNGValue("CPI_IS_PF_FETCH").equalsIgnoreCase("")) {
				if ((formObject.getNGValue("CPI_PRODUCT_IRDACODE") != null
						|| !formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4037")
								|| formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4047"))) {
					formObject.setNGValue("CPI_IS_PF_FETCH", "No");// hidden
																	// form
																	// control
																	// CPI_IS_PF_FETCH
					// //System.out.println("inside if value of CPI_IS_PF_FETCH
					// ==="+formObject.getNGValue("CPI_IS_PF_FETCH"));
				} else {
					formObject.setNGValue("CPI_IS_PF_FETCH", "Yes");// hidden
																	// form
																	// control
																	// CPI_IS_PF_FETCH
					// //System.out.println("inside else value of
					// CPI_IS_PF_FETCH
					// ==="+formObject.getNGValue("CPI_IS_PF_FETCH"));
				}
			} else {
				if ((formObject.getNGValue("CPI_PRODUCT_IRDACODE") != null
						|| !formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4037")
								|| formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4047"))
						&& !(formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1"))) {
					formObject.setNGValue("CPI_IS_PF_FETCH", "No");// hidden
																	// form
																	// control
																	// CPI_IS_PF_FETCH
					// //System.out.println("inside if value of CPI_IS_PF_FETCH
					// ==="+formObject.getNGValue("CPI_IS_PF_FETCH"));
				} else {
					formObject.setNGValue("CPI_IS_PF_FETCH", "Yes");// hidden
																	// form
																	// control
																	// CPI_IS_PF_FETCH
					// //System.out.println("inside else value of
					// CPI_IS_PF_FETCH
					// ==="+formObject.getNGValue("CPI_IS_PF_FETCH"));
				}
			}
		}
		// RM_ID need to check with satish for bifercation of process condition
		/*
		 * if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) &&
		 * (pControlName.equalsIgnoreCase("CPI_RM_ID")) &&
		 * (formObject.getNGValue("CPI_IS_PF_FETCH").equalsIgnoreCase("Yes")) &&
		 * (lstrActivityName.equalsIgnoreCase("RM_Green_File"))) { //
		 * //System.out.println("Inside RM_ID KeyPress Yogesh"); String name =
		 * "RM_ID,RM_NAME,Primary Vertical,Primary Vertical Code,Primary Sub Vertical,Primary Sub Vertical Code"
		 * ; picklist = formObject.getNGPickList(pControlName, name, true); pl =
		 * new PickListListener(formObject, pControlName, picklist);
		 * picklist.addPickListListener(pl); picklist.setSearchEnable(true);
		 * picklist.setVisible(true); }
		 */
		/***** End CR-8001-87420-Green File Digitization *****/
		// FR;
		// **************************Mail Management Extension (S)[FR-5.0 &
		// 6.0]**************************

		if (pEventName.equalsIgnoreCase("Click")) {
			if ((lstrActivityName.equalsIgnoreCase("RM_Clarification")
					|| lstrActivityName.equalsIgnoreCase("Endorsement"))
					&& (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
							|| formObject.getNGValue("CPI_MAIL_ALIASID").equalsIgnoreCase("2"))) // CR-8001-70893
																									// Marine
																									// CR
			{
				//////// //System.out.println("\n**********Mail Management
				//////// Extension (Start)[FR-5.0 & 6.0]**********");

				//////// //System.out.println("\nXmlParserGenData:::: " +
				//////// xmlParserGenData);
				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				//////// //System.out.println("\n\nWorkItemName: " + sWIName +
				//////// "\nUserName: " + sUserName);
				String sQuery = "SELECT IP FROM NG_CPI_CONFIG_MASTER where SrNo=1 and rownum<=1";
				//////// //System.out.println("DocView sQuery:" + sQuery);
				ArrayList getVal = formObject.getNGDataFromDataSource(sQuery, 1);
				String s_IP = (getVal.get(0)).toString();
				s_IP = s_IP.substring(s_IP.indexOf("[") + 1, s_IP.indexOf("]"));
				// String s_CabName = (getVal.get(1)).toString();
				// s_CabName = s_CabName.substring(s_CabName.indexOf("[") + 1,
				// s_CabName.indexOf("]"));
				//////// //System.out.println("s_IP: " + s_IP);
				////////// //System.out.println("s_CabName: " + s_CabName);

				if (pControlName.equalsIgnoreCase("Btn_DocUpload")) {
					url = "DocUpload.jsp?Process=CPI" + "&Pid=" + sWIName + "&userId=" + sUserName
							+ "&cabinetName=ilombardcabinet" + "&DmsIP=" + s_IP;
					//////// //System.out.println("docUpload URL: " + url);
					showMailPage(url, "docupload");
				}

				if (pControlName.equalsIgnoreCase("Btn_DocView")) {
					//////// //System.out.println("Inside the view document
					//////// block");
					// url =
					//////// "http://10.24.155.149:8080/omnidocs/integration/foldView/viewFoldList.jsp?Application=Omniflow&FolderName="
					//////// + sWIName;
					String appName = "";
					if (s_IP.equalsIgnoreCase("10.16.167.106")) {
						appName = "Omniflow";
					} else {
						appName = "OmniflowCloud";
					}
					url = "http://" + s_IP + "/omnidocs/integration/foldView/viewFoldList.jsp?Application=" + appName
							+ "&FolderName=" + sWIName;
					//////// //System.out.println("Btn_DocView URL: " + url);
					showMailPage(url, "ViewDocument");
				}

				//////// //System.out.println("\n**********Mail Management
				//////// Extension (End)[FR-5.0 & 6.0]**********");
			}
			/***************************
			 * Vendor login & weather Product
			 ****************************/

			if (lstrActivityName.equalsIgnoreCase("Vendor1") || lstrActivityName.equalsIgnoreCase("Vendor2")
					|| lstrActivityName.equalsIgnoreCase("Vendor1Clarification")
					|| lstrActivityName.equalsIgnoreCase("Vendor2Clarification")) {
				//////// //System.out.println("Inside vendor1/vendor2
				//////// btn_disable");

				//////// //System.out.println("btn_disable end");
				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				String indexFlag = "";

				String sQuery = "SELECT IP FROM NG_CPI_CONFIG_MASTER where SrNo=1 and rownum<=1";
				//////// //System.out.println("DocView sQuery:" + sQuery);
				ArrayList getVal = formObject.getNGDataFromDataSource(sQuery, 1);
				String s_IP = (getVal.get(0)).toString();
				String parentIndex = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
				String vendor1Ind = formObject.getNGValue("CPI_CHILD1_FOLDERINDEX");
				String vendor2Ind = formObject.getNGValue("CPI_CHILD2_FOLDERINDEX");
				if (lstrActivityName.equalsIgnoreCase("Vendor1")
						|| lstrActivityName.equalsIgnoreCase("Vendor1Clarification")) {
					indexFlag = "Vendor1";
				} else if (lstrActivityName.equalsIgnoreCase("Vendor2")
						|| lstrActivityName.equalsIgnoreCase("Vendor2Clarification")) {
					indexFlag = "Vendor2";
				}

				s_IP = s_IP.substring(s_IP.indexOf("[") + 1, s_IP.indexOf("]"));
				// String s_CabName = (getVal.get(1)).toString();
				// s_CabName = s_CabName.substring(s_CabName.indexOf("[") + 1,
				// s_CabName.indexOf("]"));
				//////// //System.out.println("s_IP: " + s_IP);

				if (pControlName.equalsIgnoreCase("Btn_DocUpload")) {
					url = "Weather.jsp?Process=CPI" + "&Pid=" + sWIName + "&userId=" + sUserName
							+ "&cabinetName=ilombardcabinet" + "&DmsIP=" + s_IP + "&vendor1Index=" + vendor1Ind
							+ "&vendor2Index=" + vendor2Ind + "&flag=" + indexFlag + "&wiIndex=" + parentIndex;
					//////// //System.out.println("docUpload URL: " + url);
					showMailPage(url, "docupload");
				}
				// Parent folder documents view (eg:
				/*
				 * if (pControlName.equalsIgnoreCase("Btn_DocView")) { ////////
				 * //System.out.println("Inside the view document block"); //url
				 * =
				 * "http://10.24.155.149:8080/omnidocs/integration/foldView/viewFoldList.jsp?Application=Omniflow&FolderName="
				 * + sWIName; String appName = "";
				 * if(s_IP.equalsIgnoreCase("10.16.167.106")) { appName =
				 * "Omniflow"; } else { appName = "OmniflowCloud"; } url =
				 * "http://"+s_IP+
				 * "/omnidocs/integration/foldView/viewFoldList.jsp?Application="
				 * +appName+"&FolderName=" + sWIName; ////////
				 * //System.out.println("Btn_DocView URL: " + url);
				 * showMailPage(url, "ViewDocument"); }
				 */

				// View Document Code

				String appName = "";
				String dclassname = "";
				if (s_IP.equalsIgnoreCase("10.16.167.106")) {
					appName = "Omniflowprod";// for vendor View document only
					dclassname = "omniflowfold";
					s_IP = s_IP + ":8081"; // for vendor View document only
				} else {
					appName = "Omniflow";
					// appName = "Omniflowfoldview";
					dclassname = "omniflowfold";
				}

				if (pControlName.equalsIgnoreCase("Btn_VenDocview")) {
					if (parentIndex != null && !parentIndex.equalsIgnoreCase("")) {
						//////// //System.out.println("Inside the Parent view
						//////// document block");
						url = "http://" + s_IP + "/omnidocs/integration/foldView/viewFoldList.jsp?Application="
								+ appName + "&DataClassName=" + dclassname + "&DC.folderindex=" + parentIndex; // rohit
																												// new
																												// link
						//////// //System.out.println("Btn_VenDocview URL: " +
						//////// url);
						showMailPage(url, "ViewDocument");
					} else {
						//////// //System.out.println("Inside the Parent Folder
						//////// else JOptionPane11");
						JOptionPane.showMessageDialog(null, "Please upload some documents");
					}
				}

				if ((lstrActivityName.equalsIgnoreCase("Vendor1")
						|| lstrActivityName.equalsIgnoreCase("Vendor1Clarification"))
						&& pControlName.equalsIgnoreCase("Btn_Vendor1")) {

					if (vendor1Ind != null && !vendor1Ind.equalsIgnoreCase("")) {
						String encvendor1Ind = (String) DataEncryption.encrypt(vendor1Ind);
						String encappName = (String) DataEncryption.encrypt(appName);
						//////// //System.out.println("Inside the Vendor1 view
						//////// document block");
						//////// //System.out.println("encvendor1Ind=="+encvendor1Ind);
						//////// //System.out.println("encappName==="+encappName);
						/*
						 * url = "http://"+s_IP+
						 * "/omnidocs/integration/foldView/advanceFolderView.jsp?Application="
						 * +appName+"&FolderIndex=" + vendor1Ind;
						 */
						// url =
						// "http://"+s_IP+"/omnidocs/integration/foldView/advanceFolderView.jsp?Application="+encappName+"&FolderIndex="
						// + encvendor1Ind;
						url = "http://" + s_IP + "/omnidocs/integration/foldView/viewFoldList.jsp?Application="
								+ appName + "&DataClassName=" + dclassname + "&DC.folderindex=" + vendor1Ind; // rohit
																												// new
																												// link

						//////// //System.out.println("Btn_VenDocview URL: " +
						//////// url);
						showMailPage(url, "ViewDocument");
					} else {
						//////// //System.out.println("Inside the Vendor1 else
						//////// JOptionPane11");
						JOptionPane.showMessageDialog(null, "Please upload some documents");
					}

				}

				if ((lstrActivityName.equalsIgnoreCase("Vendor2")
						|| lstrActivityName.equalsIgnoreCase("Vendor2Clarification"))
						&& pControlName.equalsIgnoreCase("Btn_Vendor2")) {
					if (vendor2Ind != null && !vendor2Ind.equalsIgnoreCase("")) {
						String encvendor2Ind = (String) DataEncryption.encrypt(vendor1Ind);
						String encappName = (String) DataEncryption.encrypt(appName);
						//////// //System.out.println("Inside the Vendor2 View
						//////// document block");
						//////// //System.out.println("encvendor2Ind=="+encvendor2Ind);
						//////// //System.out.println("encappName==="+encappName);
						/*
						 * url = "http://"+s_IP+
						 * "/omnidocs/integration/foldView/advanceFolderView.jsp?Application="
						 * +appName+"&FolderIndex=" + vendor2Ind;
						 */
						// url =
						// "http://"+s_IP+"/omnidocs/integration/foldView/advanceFolderView.jsp?Application="+encappName+"&FolderIndex="
						// + encvendor2Ind;
						url = "http://" + s_IP + "/omnidocs/integration/foldView/viewFoldList.jsp?Application="
								+ appName + "&DataClassName=" + dclassname + "&DC.folderindex=" + vendor2Ind; // rohit
																												// new
																												// link

						//////// //System.out.println("Btn_VenDocview URL: " +
						//////// url);
						showMailPage(url, "ViewDocument");
					} else {
						//////// //System.out.println("Inside the Vendor2 else
						//////// JOptionPane11");
						JOptionPane.showMessageDialog(null, "Please upload some documents");
					}
				}

			}
			/*************************
			 * End Vendor login & weather Product
			 **************************/
			/**********************
			 * Start CR-8001-87420 GREEN FILE Digitization CR Vaibhav
			 ***********************/

			// //System.out.println("Before UploadButton Click
			// CR-8001-87420-Green File Digitization NGF_EventHandler() Checking
			// for Datawashing cases..");
			if ((lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement")
					|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
					|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
					|| lstrActivityName.equalsIgnoreCase("BSG_QC"))
					&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
				// //System.out.println("Inside UploadButton Click
				// CR-8001-87420-Green File Digitization NGF_EventHandler()");
				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				String sProcess_Type = formObject.getNGValue("CPI_PROCESS_TYPE");
				String prodIrdaCode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
				String parentIndex = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
				// //System.out.println("Parent Folder Index before==" +
				// parentIndex);
				// //System.out.println("prodIrdaCode before==" + prodIrdaCode);
				if (!(prodIrdaCode.equalsIgnoreCase("4037") || prodIrdaCode.equalsIgnoreCase("4047"))) {
					if (pControlName.equalsIgnoreCase("Btn_DocUpload")) {
						// //System.out.println("Inside IF Document Upload ");
						// //System.out.println("prodIrdaCode in GreenFile
						// Bucket..==" + prodIrdaCode);
						// //System.out.println("ProcessInstanceId==" +
						// sWIName);
						// //System.out.println("sProcess_Type==" +
						// sProcess_Type);
						url = "GreenFile.jsp?Process=CPI" + "&Pid=" + sWIName + "&userId=" + sUserName
								+ "&cabinetName=ilombardcabinet" + "&Process_Type=" + sProcess_Type;
						showMailPage(url, "docupload");
					}
				} else {
					// //System.out.println("Document Upload Not allowed for
					// this Product..");
				}

				if (pControlName.equalsIgnoreCase("Btn_DocView")) {
					// //System.out.println("Inside IF Document View
					// Functionalityyy");

					String sQuery = "SELECT IP FROM NG_CPI_CONFIG_MASTER where SrNo=1 and rownum<=1";
					ArrayList getVal = formObject.getNGDataFromDataSource(sQuery, 1);
					String s_IP = (getVal.get(0)).toString();
					s_IP = s_IP.substring(s_IP.indexOf("[") + 1, s_IP.indexOf("]"));
					// url
					// ="http://"+s_IP+"/omnidocs/integration/foldView/viewFoldList.jsp?Application=Folderview&FolderName="+sWIName;
					url = "http://10.16.167.106:8081/omnidocs/integration/foldView/viewFoldList.jsp?Application=Omniflowfoldview&FolderName="
							+ sWIName;
					// //System.out.println("Btn_DocView URL: " + url);
					showMailPage(url, "ViewDocument");
				}
			}
			/**********************
			 * End CR-8001-87420 GREEN FILE Digitization CR Vaibhav
			 ***********************/

			/**********************
			 * Start CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
			 ***********************/

			// System.out.println("On View Document Click..");
			if (!lstrActivityName.equalsIgnoreCase("Work Introduction1")) {
				// System.out.println("Inside View Button Click ");
				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				String sProcess_Type = formObject.getNGValue("CPI_PROCESS_TYPE");
				String prodIrdaCode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
				String parentIndex = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
				// System.out.println("Parent Folder Index before==" +
				// parentIndex);
				// System.out.println("prodIrdaCode before==" + prodIrdaCode);

				if (pControlName.equalsIgnoreCase("Btn_DocView")) {
					// System.out.println("Inside IF Document View
					// Functionalityyy");

					String sQuery = "SELECT IP FROM NG_CPI_CONFIG_MASTER where SrNo=1 and rownum<=1";
					ArrayList getVal = formObject.getNGDataFromDataSource(sQuery, 1);
					String s_IP = (getVal.get(0)).toString();
					s_IP = s_IP.substring(s_IP.indexOf("[") + 1, s_IP.indexOf("]"));
					// System.out.println("IP while view Document : " + s_IP);
					String appName = "";

					if (s_IP.equalsIgnoreCase("10.16.167.106")) {
						appName = "Omniflow";
					} else {
						appName = "OmniflowCloud";
					}
					url = "http://" + s_IP + "/omnidocs/integration/foldView/viewFoldList.jsp?Application=" + appName
							+ "&FolderName=" + sWIName;
					// System.out.println("Btn_DocView URL: " + url);
					showMailPage(url, "ViewDocument");
				}
			}
			/**********************
			 * End CR-8001-87420 GREEN FILE Digitization CR Phase2 Vaibhav
			 ***********************/
			// Sadik
			// //System.out.println("\n**********Start Generate PDF RM Green
			// File (Start)[FR-7.0]**********");
			if ((lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement")
					|| lstrActivityName.equalsIgnoreCase("BSG_QC")
					|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
					|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))) {
				// //System.out.println("\n**********Generate PDF RM Green File
				// (Start)[FR-7.0]**********");
				// //System.out.println("\n Generate PDF RM Green File
				// XmlParserGenData:::: " + xmlParserGenData);
				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String processType = formObject.getNGValue("CPI_PROCESS_TYPE");
				// //System.out.println("\n\n Generate PDF RM Green File
				// WorkItemName: " + sWIName+" Process Type:"+processType);
				if (pControlName.equalsIgnoreCase("Btn_GeneratePdf")) {
					url = "GreenFile_PDF.jsp?wi_name=" + sWIName + "&process_type=" + processType;
					// url =
					// "FetchCopyWorkItem.jsp?Process=CPI&ActivityName="+lstrActivityName+"&Pid="+sWIName;//for
					// fetchcopy
					// System.out.println("Generate PDF RM Green File URL: " +
					// url);
					showMailPage(url, "docupload");
				}
				// System.out.println("\n**********Generate PDF RM Green File
				// (End)[FR-7.0]**********");

			}
			// End

			/**************************************
			 * CR-8127-95325 : GST-Omniflow development Statrt
			 *****************************************************/

			if ((lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement")
					|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
					|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
					|| lstrActivityName.equalsIgnoreCase("BSG_QC"))) {
				if (pControlName.equalsIgnoreCase("Btn_AddGst")) {
					// //System.out.println("Inside GST Frame Add_Gst Button
					// Click ");
					String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
					String processType = formObject.getNGValue("CPI_PROCESS_TYPE");
					String sUserName = formObject.getUserName();
					url = "AddGst.jsp?Process=CPI" + "&Pid=" + sWIName + "&userId=" + sUserName
							+ "&cabinetName=ilombardcabinet" + "&Process_Type=" + processType;
					showMailPage(url, "hypothecated");
					// //System.out.println("GST Information URL: " + url);
				}
			}
			if (!lstrActivityName.equalsIgnoreCase("Work Introduction1")) {
				if (pControlName.equalsIgnoreCase("Btn_ViewGst")) {
					// //System.out.println("Inside GST Frame View_Gst Button
					// Click ");
					String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
					String processType = formObject.getNGValue("CPI_PROCESS_TYPE");
					String sUserName = formObject.getUserName();
					url = "ViewGst.jsp?Process=CPI" + "&Pid=" + sWIName + "&userId=" + sUserName
							+ "&cabinetName=ilombardcabinet" + "&Process_Type=" + processType;
					showMailPage(url, "hypothecated");
					// //System.out.println("GST Information URL: " + url);
				}
			}
			/**************************************
			 * CR-8127-95325 : GST-Omniflow development End
			 ******************************************************/

		} // click end;
			// **************************Mail Management Extension (E) [FR-5.0 &
			// 6.0]**************************
			// FR;

		// ================= CR Quote SYS ==============================
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_rm_ID"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("BSG_QC")
						|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")/* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification")/*
														 * CR-OMCPI-1314-03 CPU
														 * DataWashing
														 */
						|| lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))
				&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) // CR-8001-70893
																											// Marine
																											// CR
		{
			/***** Start CR-8001-87420-Green File Digitization *****/
			if (formObject.getNGValue("CPI_IS_PF_FETCH").equalsIgnoreCase("Yes")
					&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
							|| lstrActivityName.equalsIgnoreCase("Endorsement")
							|| lstrActivityName.equalsIgnoreCase("BSG_QC")
							|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
							|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))) {
				// //System.out.println("Inside RM_ID KeyPress Yogesh");
				String name = "RM_ID,RM_NAME,Primary Vertical,Primary Vertical Code,Primary Sub Vertical,Primary Sub Vertical Code";
				picklist = formObject.getNGPickList(pControlName, name, true);
				pl = new PickListListener(formObject, pControlName, picklist);
				picklist.addPickListListener(pl);
				picklist.setSearchEnable(true);
				picklist.setVisible(true);
			}
			/***** End CR-8001-87420-Green File Digitization *****/
			else {
				String name = "EMP_CODE,RM_NAME";
				picklist = formObject.getNGPickList(pControlName, name, true);

				pl = new PickListListener(formObject, pControlName, picklist);
				picklist.addPickListListener(pl);
				picklist.setSearchEnable(true);
				picklist.setVisible(true);
				// //System.out.println("2End RM ID KeyPress(F3)");
			}
		}
		// sandeep yadav
		// ================= End CR Quote SYS ==========================

		/**** Start CR-8001-70893 Marine CR *******************************/
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& pControlName.equalsIgnoreCase("CPI_process_type")
				&& (lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))) {
			// //System.out.println("changing processtype field");
			if (formObject.getNGValue("CPI_process_type").equalsIgnoreCase("Corporate Policy Insurance")) {
				// //System.out.println("CPI_PROCESS_TYPE:"+formObject.getNGValue("CPI_process_type")+"Selected...");
				// formObject.setNGValue("CPI_TYPE_OF_ENDORSEMENT","--Select--");
				formObject.setNGListIndex("CPI_TYPE_OF_ENDORSEMENT", 0);
				// formObject.setNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE","--Select--");
				formObject.setNGListIndex("CPI_EXTERNAL_ENDORSEMENT_TYPE", 0);
				// formObject.setNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE","--Select--");
				formObject.setNGListIndex("CPI_INTERNAL_ENDORSEMENT_TYPE", 0);
				formObject.setNGValue("CPI_ENDORSEMENT_EFFECTIVE_DATE", "");
				formObject.setNGValue("CPI_ENDORSEMENT_NO", "");
				formObject.setNGValue("CPI_CLAIM_NO", "");
				formObject.setNGValue("CPI_REFUND_ID", "");

				formObject.setNGEnable("Frame_Endorsement_Fields", false);
				formObject.setNGLocked("Frame_Endorsement_Fields", false);

				formObject.setNGEnable("Frame_Corporate_Fields", true);
				formObject.setNGLocked("Frame_Corporate_Fields", true);

				formObject.setNGValue("CPI_PRODUCT_TYPE", "OTC");
				formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
				formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
				formObject.setNGValue("CPI_NETWORK_PARTNER", "No");
				formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
				formObject.setNGLocked("CPI_QUOTE_SYS_ID", false);
				formObject.setNGEnable("CPI_QUOTE_SYS_ID", false);
				formObject.setNGEnable("CPI_BOOKING_TYPE", true);
				formObject.setNGLocked("CPI_BOOKING_TYPE", true);
			} else if (formObject.getNGValue("CPI_process_type").equalsIgnoreCase("Endorsement")) {
				// //System.out.println("Endorsement selected Yogesh");
				formObject.setNGValue("CPI_QUOTE_NO", "");
				formObject.setNGValue("CPI_TRANSACTION_ID", "");
				// formObject.setNGValue("CPI_TRANSACTION_TYPE","--Select--");
				formObject.setNGListIndex("CPI_TRANSACTION_TYPE", 0);
				// formObject.setNGValue("CPI_BOOKING_TYPE","--Select--");
				formObject.setNGListIndex("CPI_BOOKING_TYPE", 0);
				formObject.setNGValue("CPI_RISK_INSPECTION_DATE", "");
				// formObject.setNGValue("CPI_RI_INWARD","--Select--");
				formObject.setNGListIndex("CPI_RI_INWARD", 0);
				formObject.setNGValue("CPI_RISK_EXPIRY_DATE", "");
				formObject.setNGValue("CPI_NETWORK_PARTNER_NAME", "");
				formObject.setNGValue("CPI_HYPOTHECATED_TO", "");
				// formObject.setNGValue("CPI_MH","--Select--");
				formObject.setNGListIndex("CPI_MH", 0);
				formObject.setNGValue("CPI_MH_INTERACTION_NO", "");
				formObject.setNGValue("CPI_EXCEPTION_TO_MH", "");

				formObject.setNGEnable("Frame_Corporate_Fields", false);
				formObject.setNGLocked("Frame_Corporate_Fields", false);

				formObject.setNGEnable("Frame_Endorsement_Fields", true);
				formObject.setNGLocked("Frame_Endorsement_Fields", true);
				formObject.setNGLocked("CPI_PRODUCT_TYPE", true);
				formObject.setNGEnable("CPI_PRODUCT_TYPE", true);

				CheckEnableOnChange(lstrActivityName, pControlName);
			}

		}
		/**** ENd CR-8001-70893 Marine CR *********************************/
		/***** Start CR-8001-87420-Green File Digitization *****/
		if ((lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement")
				|| lstrActivityName.equalsIgnoreCase("BSG_QC") || lstrActivityName.equalsIgnoreCase("BSG_Clarification")
				|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))
				&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) { // formObject.setSpecificDateFormat("CPI_POLICY_START_DATE",
																										// "dd/MM/yyyy");
			if (lstrActivityName.equalsIgnoreCase("RM_Green_File")) {
				// //System.out.println("Inside main if enable the
				// NGF_EventHandler Green File
				// Digitization"+formObject.getNGValue("CPI_Process_Type"));
				if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
						&& (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader"))) {
					//// //System.out.println("Inside enable
					//// CPI_IL_CO_INS_LEADER");
					formObject.setNGEnable("CPI_IL_CO_INS_LEADER", true);
					formObject.setNGLocked("CPI_IL_CO_INS_LEADER", true);
				}
				if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
						&& formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal")
						&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					formObject.setNGEnable("CPI_GRNFL_PROPOSAL_NO", true);
					formObject.setNGLocked("CPI_GRNFL_PROPOSAL_NO", true);
				}
				if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
						&& (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal"))) {
					//// //System.out.println("Inside enable
					//// CPI_PREV_POLICY_NO");
					formObject.setNGEnable("CPI_PREV_POLICY_NO", true);
					formObject.setNGLocked("CPI_PREV_POLICY_NO", true);
				}
				if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
						&& (formObject.getNGValue("CPI_IL_CO_INS_LEADER").equalsIgnoreCase("IL Share Payout"))) {
					//// //System.out.println("Inside enable CPI_IL_SHARE");
					formObject.setNGEnable("CPI_IL_SHARE", true);
					formObject.setNGLocked("CPI_IL_SHARE", true);
				}
				if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
						&& (formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("Yes"))) {
					//// //System.out.println("Inside enable CPI_RI_INWARD_TYPE
					//// ");
					formObject.setNGEnable("CPI_RI_INWARD_TYPE", true);
					formObject.setNGLocked("CPI_RI_INWARD_TYPE", true);
				}
				if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
						&& (formObject.getNGValue("CPI_prIMARY_SUB_VERTICAL").equalsIgnoreCase("IBGNP"))) {
					//// //System.out.println("Inside enable
					//// CPI_RM_EMP_ID_SPG_IBG");
					formObject.setNGEnable("CPI_RM_EMP_ID_SPG_IBG", true);
					formObject.setNGLocked("CPI_RM_EMP_ID_SPG_IBG", true);
				}
				if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
						&& (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal") && formObject
								.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("GROUPHEALTHFLOATERPOLICY"))) {
					//// //System.out.println("Inside enable CPI_NEFT_DETAILS");
					formObject.setNGEnable("CPI_NEFT_DETAILS", true);
					formObject.setNGLocked("CPI_NEFT_DETAILS", true);
				}
				if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
						&& (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")
								|| formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower"))) {
					//// //System.out.println("Inside enable all
					//// CPI_CO_INSURER_NAME1");
					formObject.setNGEnable("CPI_CO_INSURER_NAME1", true);
					formObject.setNGLocked("CPI_CO_INSURER_NAME1", true);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE1", true);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE1", true);
					formObject.setNGEnable("CPI_CO_INSURER_NAME2", true);
					formObject.setNGLocked("CPI_CO_INSURER_NAME2", true);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE2", true);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE2", true);
					formObject.setNGEnable("CPI_CO_INSURER_NAME3", true);
					formObject.setNGLocked("CPI_CO_INSURER_NAME3", true);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE3", true);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE3", true);
					formObject.setNGEnable("CPI_CO_INSURER_NAME4", true);
					formObject.setNGLocked("CPI_CO_INSURER_NAME4", true);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE4", true);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE4", true);
					formObject.setNGEnable("CPI_CO_INSURER_NAME5", true);
					formObject.setNGLocked("CPI_CO_INSURER_NAME5", true);
					formObject.setNGEnable("CPI_CO_INSURER_SHARE5", true);
					formObject.setNGLocked("CPI_CO_INSURER_SHARE5", true);
				}
			} else if (lstrActivityName.equalsIgnoreCase("Endorsement")) {
				//// //System.out.println("Inside enable the NGF_EventHandler
				//// Green File
				//// Digitization"+formObject.getNGValue("CPI_Process_Type"));
				formObject.setNGEnable("CPI_POLICY_NUMBER_BASE", true);
				formObject.setNGLocked("CPI_POLICY_NUMBER_BASE", true);
				//// //System.out.println("enable CPI_POLICY_NUMBER_BASE");
			} else {
				//// //System.out.println("Inside main else disable all the
				//// NGF_EventHandler Green File Digitization");
				formObject.setNGEnable("CPI_ADDTNL_CIT_RM_ID", false);
				formObject.setNGLocked("CPI_ADDTNL_CIT_RM_ID", false);
				formObject.setNGEnable("CPI_ADDTNL_CIT_RM_NAME", false);
				formObject.setNGLocked("CPI_ADDTNL_CIT_RM_NAME", false);
				formObject.setNGEnable("CPI_UW_EMP_ID", false);
				formObject.setNGLocked("CPI_UW_EMP_ID", false);
				formObject.setNGEnable("CPI_UW_NAME", false);
				formObject.setNGLocked("CPI_UW_NAME", false);

				formObject.setNGEnable("CPI_POLICY_NUMBER_BASE", false);
				formObject.setNGLocked("CPI_POLICY_NUMBER_BASE", false);
				formObject.setNGEnable("CPI_PREV_POLICY_NO", false);
				formObject.setNGLocked("CPI_PREV_POLICY_NO", false);
				formObject.setNGEnable("CPI_IL_CO_INS_LEADER", false);
				formObject.setNGLocked("CPI_IL_CO_INS_LEADER", false);
				formObject.setNGEnable("CPI_IL_SHARE", false);
				formObject.setNGLocked("CPI_IL_SHARE", false);
				formObject.setNGEnable("CPI_RI_INWARD_TYPE", false);
				formObject.setNGLocked("CPI_RI_INWARD_TYPE", false);
				formObject.setNGEnable("CPI_RM_EMP_ID_SPG_IBG", false);
				formObject.setNGLocked("CPI_RM_EMP_ID_SPG_IBG", false);
				formObject.setNGEnable("CPI_NEFT_DETAILS", false);
				formObject.setNGLocked("CPI_NEFT_DETAILS", false);
				formObject.setNGEnable("CPI_CO_INSURER_NAME1", false);
				formObject.setNGLocked("CPI_CO_INSURER_NAME1", false);
				formObject.setNGEnable("CPI_CO_INSURER_SHARE1", false);
				formObject.setNGLocked("CPI_CO_INSURER_SHARE1", false);
				formObject.setNGEnable("CPI_CO_INSURER_NAME2", false);
				formObject.setNGLocked("CPI_CO_INSURER_NAME2", false);
				formObject.setNGEnable("CPI_CO_INSURER_SHARE2", false);
				formObject.setNGLocked("CPI_CO_INSURER_SHARE2", false);
				formObject.setNGEnable("CPI_CO_INSURER_NAME3", false);
				formObject.setNGLocked("CPI_CO_INSURER_NAME3", false);
				formObject.setNGEnable("CPI_CO_INSURER_SHARE3", false);
				formObject.setNGLocked("CPI_CO_INSURER_SHARE3", false);
				formObject.setNGEnable("CPI_CO_INSURER_NAME4", false);
				formObject.setNGLocked("CPI_CO_INSURER_NAME4", false);
				formObject.setNGEnable("CPI_CO_INSURER_SHARE4", false);
				formObject.setNGLocked("CPI_CO_INSURER_SHARE4", false);
				formObject.setNGEnable("CPI_CO_INSURER_NAME5", false);
				formObject.setNGLocked("CPI_CO_INSURER_NAME5", false);
				formObject.setNGEnable("CPI_CO_INSURER_SHARE5", false);
				formObject.setNGLocked("CPI_CO_INSURER_SHARE5", false);
				formObject.setNGEnable("CPI_GRNFL_PROPOSAL_NO", false);
				formObject.setNGLocked("CPI_GRNFL_PROPOSAL_NO", false);
			}

		}
		/***** End CR-8001-87420-Green File Digitization *****/

		/*************************
		 * CPI URN CR 8001-61339 Multiple Changes CR
		 *****************************/

		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& pControlName.equalsIgnoreCase("CPI_MH")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("BSG_QC")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
						|| lstrActivityName.equalsIgnoreCase("BSG_Clarification") || lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr")/* yogesh marine */)) { // (lstrActivityName.equalsIgnoreCase("BSG_QC")
																			// Added
																			// Due
																			// to
																			// Omni
																			// flow
																			// CPI
																			// –Channel
																			// Employee
																			// id
																			// –
																			// MH
																			// V
																			// 1.0
																			// CR
																			//////// //System.out.println("Inside
																			// NGF_EventHandler
																			// Method
																			// 8001-61339
																			// :
																			// ");
			if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("Yes")) {
				//////// //System.out.println("Inside NGF_EventHandler Method :
				//////// " +formObject.getNGValue("CPI_MH"));
				formObject.setNGValue("CPI_Exception_To_MH", "");
				formObject.NGFocus("CPI_MH_Interaction_No");
				formObject.setNGLocked("CPI_MH_Interaction_No", true);
				formObject.setNGEnable("CPI_MH_Interaction_No", true);
				formObject.setNGLocked("CPI_Exception_To_MH", false);
				formObject.setNGEnable("CPI_Exception_To_MH", false);

			} else if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("No")) {
				//////// //System.out.println("Inside NGF_EventHandler Method :
				//////// " +formObject.getNGValue("CPI_MH"));
				formObject.setNGValue("CPI_MH_Interaction_No", "");
				formObject.NGFocus("CPI_Exception_To_MH");
				formObject.setNGLocked("CPI_Exception_To_MH", false);
				formObject.setNGEnable("CPI_Exception_To_MH", true);
				formObject.setNGEnable("CPI_MH_Interaction_No", false);
				formObject.setNGLocked("CPI_MH_Interaction_No", false);

			} else {
				//////// //System.out.println("Inside NGF_EventHandler Method :
				//////// " +formObject.getNGValue("CPI_MH"));
				formObject.setNGValue("CPI_MH_Interaction_No", "");
				formObject.setNGValue("CPI_Exception_To_MH", "");
				formObject.setNGLocked("CPI_MH_Interaction_No", false);
				formObject.setNGEnable("CPI_MH_Interaction_No", false);
				formObject.setNGLocked("CPI_Exception_To_MH", false);
				formObject.setNGEnable("CPI_Exception_To_MH", false);
			}
			//////// //System.out.println("Exiting NGF_EventHandler Method
			//////// 8001-61339 : ");

		}

		/**********************
		 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
		 ***********************/

		if ((pEventName.equalsIgnoreCase("CHANGE")) && pControlName.equalsIgnoreCase("CPI_TOTAL_PREMIUM")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))) // CR-8001-70893
																					// Marine
																					// CR
		{

			String totalpremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
			//////// //System.out.println("Inside NGF_EventHandler Method
			//////// Checking totalpremium validation CR-8001-59268 :
			//////// "+totalpremium);
			boolean flag1 = false;
			int totalpremiumparsed = 0;
			if (totalpremium != null && !totalpremium.equalsIgnoreCase("")
					&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
				try {
					totalpremiumparsed = Integer.parseInt(totalpremium);
					//////// //System.out.println("After parsing
					//////// totalpremiumparsed: "+totalpremiumparsed);
				} catch (Exception e) {
					flag1 = true;
				}
				if (!flag1 && totalpremiumparsed >= 100000) {
					//////// //System.out.println("Inside CPI_PAN check");
					formObject.setNGEnable("CPI_PAN", true);
					formObject.setNGLocked("CPI_PAN", true);
				} else {
					formObject.setNGValue("CPI_PAN", "");
					formObject.setNGEnable("CPI_PAN", false);
					formObject.setNGLocked("CPI_PAN", false);
				}
			} else {
				//////// //System.out.println("Inside Change Event : "
				//////// +formObject.getNGValue("CPI_PAN"));
				formObject.setNGValue("CPI_PAN", "");
				formObject.setNGEnable("CPI_PAN", false);
				formObject.setNGLocked("CPI_PAN", false);
			}
			//////// //System.out.println("Exiting NGF_EventHandler Method
			//////// CR-8001-59268 : "+totalpremium);

		}

		/**********************
		 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
		 ************************/
		/***********************
		 * Start CR-8001-54702 E-Mail Filter
		 ***************************/
		if ((pEventName.equalsIgnoreCase("CHANGE")) && pControlName.equalsIgnoreCase("CPI_POLICY_NO")
				&& (lstrActivityName.equalsIgnoreCase("CPU_HEALTH") || lstrActivityName.equalsIgnoreCase("BSG_QC")
						|| lstrActivityName.equalsIgnoreCase("CPU_Approver")
						|| lstrActivityName.equalsIgnoreCase("Processing Hub")
						|| lstrActivityName.equalsIgnoreCase("PH_Complete"))) {
			if (!formObject.getNGValue("CPI_POLICY_NO").equalsIgnoreCase("")) {
				String polNo = formObject.getNGValue("CPI_POLICY_NO");
				//////// //System.out.println("polNo at BSG_QC"+polNo);
				String coverNoteNo = getCoverNoteNo(polNo);
				//////// //System.out.println("coverNoteNo at All"+coverNoteNo);
				// Integer no = Integer.parseInt(coverNoteNo);
				formObject.setNGValue("CPI_COVERNOTE_NO", coverNoteNo);

			}
			//////// //System.out.println("coverNoteNo at
			//////// All"+formObject.getNGValue("CPI_COVERNOTE_NO"));
		}
		if ((pEventName.equalsIgnoreCase("CHANGE")) && pControlName.equalsIgnoreCase("CPI_eNDORSEMENT_NO")
				&& (lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
						|| lstrActivityName.equalsIgnoreCase("Endorsement"))) {
			if (!formObject.getNGValue("CPI_eNDORSEMENT_NO").equalsIgnoreCase("")) {
				String endNo = formObject.getNGValue("CPI_eNDORSEMENT_NO");
				//////// //System.out.println("endNo at BSG_QC"+endNo);
				String coverNoteNo = getCoverNoteNo(endNo);
				//////// //System.out.println("CPI_eNDORSEMENT_NO coverNoteNo at
				//////// All"+coverNoteNo);
				// Integer no = Integer.parseInt(coverNoteNo);
				formObject.setNGValue("CPI_COVERNOTE_NO", coverNoteNo);

			}
			//////// //System.out.println("coverNoteNo at
			//////// All"+formObject.getNGValue("CPI_COVERNOTE_NO"));
		}
		/***********************
		 * End CR-8001-54702 E-Mail Filter
		 ***************************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_Exception_To_MH"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("BSG_QC")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
						|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
						|| lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))) // CR-8001-70893
																					// Marine
																					// CR
		{// (lstrActivityName.equalsIgnoreCase("BSG_QC") Added Due to Omni flow
			// CPI –Channel Employee id – MH V 1.0 CR
			//////// //System.out.println("Checking For Omni flow CPI –Channel
			// Employee id – MH V 1.0 CR");
			// //(lstrActivityName.equalsIgnoreCase("BSG_QC") Added Due to Omni
			// flow CPI –Channel Employee id – MH V 1.0 CR
			//////// //System.out.println("In CPI_Exception_To_MH KeyPress(F3)
			// lstrActivityName:"+lstrActivityName);
			String name = "Exception To MH";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			//////// //System.out.println("End CPI_Exception_To_MH KeyPress(F3)
			//////// 8001-61339");
		}

		/*************************
		 * End CPI URN CR 8001-61339 Multiple Changes CR
		 **************************/

		/********************
		 * CR-OMCPI-1314-03 CPU DataWashing Start
		 **********************/
		if (pEventName.equalsIgnoreCase("KeyPress(F3)") && pControlName.equalsIgnoreCase("CPI_CPU_ASSIGN_TO")
				&& (lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase("COPS_Cpu_Assignment"))) // CR-8001-70893
																						// Marine
																						// CR
		{
			//////// //System.out.println("1 CPI_CPU_ASSIGN_TO KeyPress(F3)");
			String name = "EMP CODE,EMP NAME";
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			//////// //System.out.println("2 End CPI_CPU_ASSIGN_TO
			//////// KeyPress(F3)");
		}
		/********************
		 * CR-OMCPI-1314-03 CPU DataWashing END
		 **********************/
		/**************************************
		 * Client Registration CR Start
		 *****************************************************/

		if (pEventName.equalsIgnoreCase("KeyPress(F3)") && pControlName.equalsIgnoreCase("CPI_POLICYNO_SEARCH")
				&& (lstrActivityName.equalsIgnoreCase("CPU_Data_Washing"))) {
			// //System.out.println("Entering in Client Registration CR");
			String name = "POLICY NUMBER,PRODUCT NAME,RM ID,RM NAME,IL LOCATION,PRIMARY VERTICAL,PRIMARY SUB VERTICAL,CUSTOMER ID,NAME OF BROKER/AGENT,CUSTOMER NAME,PAYMENT MODE,INST_NO_CD_NO_DEP_SLIP_NO,PRODUCT CODE";
			picklist = formObject.getNGPickList(pControlName, name, true);
			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// //System.out.println("Exiting From Client Registration CR");
		}

		/**************************************
		 * Client Registration CR End
		 ******************************************************/ /*************************
																 * CPI PID
																 * Additional
																 * Points
																 *****************************/
		/*
		 * if ((pEventName.equalsIgnoreCase("CHANGE") ||
		 * pEventName.equalsIgnoreCase("click")) &&
		 * (pControlName.equalsIgnoreCase("CPI_TRANSACTION_TYPE")) &&
		 * (lstrActivityName.equalsIgnoreCase("RM_Green_File") ||
		 * lstrActivityName.equalsIgnoreCase("BSG_QC")) &&
		 * formObject.getNGValue("CPI_Process_Type").
		 * equalsIgnoreCase("Corporate Policy Insurance")) { if
		 * (formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder") &&
		 * formObject.getNGValue("CPI_TRANSACTION_TYPE").
		 * equalsIgnoreCase("New Client") ||
		 * formObject.getNGValue("CPI_TRANSACTION_TYPE").
		 * equalsIgnoreCase("New From Exisiting Client")) { ////////
		 * //System.out.println("CPI_TRANSACTION_TYPE is empty");
		 * formObject.setNGValue("CPI_CUSTOMER_ID","");
		 * formObject.setNGLocked("CPI_CUSTOMER_ID",false); } else {
		 * formObject.setNGLocked("CPI_CUSTOMER_ID",true); } }
		 */
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& pControlName.equalsIgnoreCase("CPI_pas")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement"))
				&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
			if (formObject.getNGValue("CPI_pas").equalsIgnoreCase("OM")
					|| formObject.getNGValue("CPI_pas").equalsIgnoreCase("Premia")) {
				//////// //System.out.println("CPI_TRANSACTION_TYPE is empty");
				System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + lstrActivityName);
				formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "No");
				formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
			} else {
				//////// //System.out.println("CPI_TRANSACTION_TYPE is empty");
				formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "");
				formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", true);
			}
		}
		/*************************
		 * End CPI PID Additional Points
		 **************************/
		// sadik
		// //System.out.println("Sadik CR9 CPU_Data_Washing ngEventHandler
		// change IAS");
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& (pControlName.equalsIgnoreCase("CPI_CHANGED_MAIL_STATUS"))
				&& (lstrActivityName.equalsIgnoreCase("CPU_Data_Washing"))) {
			// //System.out.println("Sadik CR9 CPI_CHANGED_MAIL_STATUS change
			// IAS");
			if (formObject.getNGValue(pControlName).equalsIgnoreCase("Pending for Approval")) {
				// //System.out.println("Sadik CR9 CPI_IAS_ID change IAS");
				formObject.setNGEnable("CPI_IAS_ID", true);
				formObject.setNGLocked("CPI_IAS_ID", true);
			} else {
				// //System.out.println("Sadik CR9 CPI_IAS_ID else change IAS");
				// formObject.setNGValue("CPI_IAS_ID", "");
				formObject.setNGEnable("CPI_IAS_ID", false);
				formObject.setNGLocked("CPI_IAS_ID", true);
			}
		}
		// end
		// Sadik
		// Sadik
		// System.out.println("Sadik CR9 CPI_MAIL_TO_CLIENT ngEventHandler
		// change CPI_ROUTE_TO");
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& (pControlName.equalsIgnoreCase("CPI_ROUTE_TO")) && (lstrActivityName.equalsIgnoreCase("CPU_Health"))
				&& formObject.getNGValue("CPI_process_type").equalsIgnoreCase("Endorsement")) {
			// //System.out.println("Sadik CR9 CPI_MAIL_TO_CLIENT change RM
			// Clarification:"+formObject.getNGValue(pControlName));
			if (!(formObject.getNGValue(pControlName).trim().equalsIgnoreCase("")
					|| formObject.getNGValue(pControlName).equalsIgnoreCase("--Select--"))) {
				// //System.out.println("Sadik CR9 CPI_MAIL_TO_CLIENT change RM
				// Clarification");
				formObject.setNGLocked("CPI_MAIL_TO_CLIENT", true);
				formObject.setNGEnable("CPI_MAIL_TO_CLIENT", true);
			} else {
				// //System.out.println("Sadik CR9 CPI_MAIL_TO_CLIENT else
				// change RM Clarification");
				formObject.setNGListIndex("CPI_MAIL_TO_CLIENT", 0);
				formObject.setNGLocked("CPI_MAIL_TO_CLIENT", false);
				formObject.setNGEnable("CPI_MAIL_TO_CLIENT", false);
			}
		}

		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& (pControlName.equalsIgnoreCase("CPI_ROUTE_TO"))
				&& (lstrActivityName.equalsIgnoreCase("Corporate_UW"))) {
			// System.out.println("Vaibhav Corporate_UW Exception Issue==");
			formObject.setNGEnable("CPI_ROUTE_TO", true);
			formObject.setNGLocked("CPI_ROUTE_TO", true);

		}
		// End
		// end
		/*********************
		 * CR 45 Network Partner
		 *****************************/
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& (pControlName.equalsIgnoreCase(
						"CPI_PRODUCT_TYPE") /*
											 * || pControlName.equalsIgnoreCase(
											 * "CPI_quOTE_SYS_ID")
											 */)
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))
				&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
			//////// //System.out.println("1 Click CPI_NETWORK_PARTNER : ");
			if (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("iPartner")
					|| !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
				//////// //System.out.println("1 CR 45 if ipartner: " +
				//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));
				formObject.setNGListIndex("CPI_NETWORK_PARTNER", 0);
				formObject.setNGEnable("CPI_NETWORK_PARTNER", false);
				formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
				formObject.setNGValue("CPI_NETWORK_PARTNER_NAME", "");
				formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME", false);
				formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
			} else {
				//////// //System.out.println("2 CR 45 else ipartner: " +
				//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));
				formObject.setNGEnable("CPI_NETWORK_PARTNER", true);
				formObject.setNGLocked("CPI_NETWORK_PARTNER", true);
				// formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME",false);
				formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
			}
			//////// //System.out.println("4 End Click CPI_NETWORK_PARTNER : ");
		}

		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& (pControlName.equalsIgnoreCase("CPI_NETWORK_PARTNER"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))
				&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
			//////// //System.out.println("1 Click CPI_NETWORK_PARTNER : ");
			if ((formObject.getNGValue("CPI_NETWORK_PARTNER")).equalsIgnoreCase("Yes")) {
				//////// //System.out.println("2 Click CPI_NETWORK_PARTNER : ");
				formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME", true);
				formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
			} else {
				//////// //System.out.println("3 Click CPI_NETWORK_PARTNER : ");
				formObject.setNGValue("CPI_NETWORK_PARTNER_NAME", "");
				formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME", false);
				formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
				if (lstrActivityName.equalsIgnoreCase("RM_Clarification")
						&& !formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("")
						&& formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("No")) {
					//////// //System.out.println("sat Click CPI_NETWORK_PARTNER
					//////// : " +
					//////// formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("No"));
					formObject.setNGListIndex("CPI_ORG_PROPOSAL_FORM_RECEIVED", 0);
					formObject.setNGEnable("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
					formObject.setNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED", false);
				}
			}
			//////// //System.out.println("4 End Click CPI_NETWORK_PARTNER : ");
		}

		if (pEventName.equalsIgnoreCase("KeyPress(F3)") && pControlName.equalsIgnoreCase("CPI_NETWORK_PARTNER_NAME")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))) {
			//////// //System.out.println("1CPI_NETWORK_PARTNER_NAME
			//////// KeyPress(F3)");
			String name = "NETWORK PARTNER NAME";
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			//////// //System.out.println("2CPI_NETWORK_PARTNER_NAME
			//////// KeyPress(F3)");
		}
		/*********************
		 * End CR 45 Network Partner
		 *************************/
		/********************* CR18### *****************************/
		// satish
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_RM_Name"))
				&& ((lstrActivityName.equalsIgnoreCase("Co_insurance")))) {
			//////// //System.out.println("1RM ID KeyPress(F3)");
			String name = "RM NAME,EMP CODE";
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			//////// //System.out.println("2End RM ID KeyPress(F3)");
		}
		// satish
		/********************** End CR18### *****************************/
		/***************************
		 * CR 28 by satish
		 *****************************/
		// satish
		if (pEventName.equalsIgnoreCase("KeyPress(F3)") && pControlName.equalsIgnoreCase("CPI_NAME_OF_BROKER_AGENT")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						/* CR 38 */ || lstrActivityName
								.equalsIgnoreCase("Endorsement")/* CR 38 */
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing") /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))) { // CR-8001-70893
																						// Marine
																						// CR
			//////// //System.out.println("1Agent KeyPress(F3)");
			/***************************
			 * PID-CPI process changes
			 ***************************/
			// String name = "AGENT NAME,iBANK AGENT";
			String name = "AGENT NAME,iBANK AGENT,AGENT ID";
			/***********************
			 * End PID-CPI process changes
			 ***************************/
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			//////// //System.out.println("2End Agent KeyPress(F3)");
		}
		// satish
		/***************************
		 * End of CR 28
		 *********************************/
		/*****************
		 * CPI_IL_Location by vishal for CR21
		 *********************/
		/* ILLocation code for CO Ins *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_IL_Location"))
				&& (lstrActivityName.equalsIgnoreCase("Co_insurance"))) {
			//////// //System.out.println("1CO INs IL Location KeyPress(F3)");
			String name = "IL Location";
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// picklist.setTitle("IL Location");

			//////// //System.out.println("2CO INs IL Location KeyPress(F3)");
		}

		/* END ILLocation code for CO Ins *********************/
		/*****************
		 * CPI_IL_Location by vishal for CR21
		 *********************/

		/* ILLocation code *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)"))
				&& ((pControlName.equalsIgnoreCase("CPI_IL_Location"))
						|| (pControlName.equalsIgnoreCase("Corp_IL_Location"))
						|| (pControlName.equalsIgnoreCase("End_IL_Location")))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
						|| lstrActivityName.equalsIgnoreCase(
								"CPUCustClarification")/*
														 * CR 46 CPU DataWashing
														 */
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification")/*
														 * CR-OMCPI-1314-03 CPU
														 * DataWashing
														 */
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
						|| lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) { // CR-8001-70893
																						// Marine
																						// CR
			//////// //System.out.println("1IL Location KeyPress(F3)");
			String name = "IL Location";
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// picklist.setTitle("IL Location");

			//////// //System.out.println("2End IL Location KeyPress(F3)");
		}

		/* ILLocation code *********************/
		/********************** CPI_SPECIFIED_PERSON *********************/
		if (pEventName.equalsIgnoreCase("KeyPress(F3)") && pControlName.equalsIgnoreCase("CPI_SPECIFIED_PERSON")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing") /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr") /*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */ )) {
			//////// //System.out.println("1SPECIFIED_PERSON KeyPress(F3)");
			/**************************************
			 * CR-8001-92286 Omniflow held cover letter CR Start
			 *****************************************************/
			/*
			 * String name = "SPECIFIED PERSON"; picklist =
			 * formObject.getNGPickList(pControlName, name, true);
			 * 
			 * pl = new PickListListener(formObject, pControlName, picklist);
			 * picklist.addPickListListener(pl); picklist.setSearchEnable(true);
			 * picklist.setVisible(true);
			 */

			/**************************************
			 * CR-8001-92286 Omniflow held cover letter CR End
			 ******************************************************/
			//////// //System.out.println("2End SPECIFIED_PERSON KeyPress(F3)");
		}

		// ------------------------Yogendra
		// Saraswat--------------------------------
		/********** Start Yogesh Marine ***********/ // commented disabled
														// functionality for QMS
														// Cases
		/*
		 * if (pEventName.equalsIgnoreCase("KeyPress(F3)") &&
		 * pControlName.equalsIgnoreCase("Corp_SP_Name") &&
		 * lstrActivityName.equalsIgnoreCase("BSG_QC") &&
		 * (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
		 * // //System.out.println("1Corp_SP_Name KeyPress(F3)"); String name =
		 * "SPECIFIED PERSON"; picklist = formObject.getNGPickList(pControlName,
		 * name, true);
		 * 
		 * pl = new PickListListener(formObject, pControlName, picklist);
		 * picklist.addPickListListener(pl); picklist.setSearchEnable(true);
		 * picklist.setVisible(true); //
		 * //System.out.println("2End Corp_SP_Name KeyPress(F3)"); }
		 */
		/********** End Yogesh Marine ***********/

		// ------------------------Yogendra
		// Saraswat--------------------------------
		/********************** End CPI_SPECIFIED_PERSON *********************/
		/********************** CPI_PRIMARY_VERTICAL *********************/
		// satish
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && ((pControlName.equalsIgnoreCase("CPI_PRIMARY_VERTICAL")))
				&& ((lstrActivityName.equalsIgnoreCase("RM_Green_File"))
						|| (lstrActivityName.equalsIgnoreCase("Endorsement"))
						|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")) /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */)
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
			//////// //System.out.println("1PRIMARY_VERTICAL KeyPress(F3)");
			// String name = "PRIMARY VERTICAL";//PID_CPI process changes
			String name = "PRIMARY VERTICAL,PRIMARY VERTICAL CODE";// PID_CPI
																	// process
																	// changes
			formObject.setNGValue("CPI_SOURCE_NAME", "");
			formObject.setNGValue("CPI_CHANNEL_NAME", "");
			formObject.setNGValue("CPI_BRANCH_NAME", "");
			clearDetails();// PID_CPI process changes
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);

			//////// //System.out.println("2End PRIMARY_VERTICAL KeyPress(F3)");
		}
		/********************** End CPI_PRIMARY_VERTICAL *********************/
		/********************** CPI_PRIMARY_SUB_VERTICAL *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)"))
				&& ((pControlName.equalsIgnoreCase("CPI_PRIMARY_SUB_VERTICAL")))
				&& ((lstrActivityName.equalsIgnoreCase("RM_Green_File"))
						|| (lstrActivityName.equalsIgnoreCase("Endorsement"))
						|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")) /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr") /*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */)
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
			//////// //System.out.println("1PRIMARY_SUB_VERTICAL KeyPress(F3)");
			// String name = "PRIMARY SUB VERTICAL";//PID_CPI process changes
			String name = "PRIMARY SUB VERTICAL,PRIMARY SUB VERTICAL CODE";// PID_CPI
																			// process
																			// changes
			formObject.setNGValue("CPI_SOURCE_NAME", "");
			formObject.setNGValue("CPI_CHANNEL_NAME", "");
			formObject.setNGValue("CPI_BRANCH_NAME", "");
			clearDetails();// PID_CPI process changes
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);

			//////// //System.out.println("2End PRIMARY_SUB_VERTICAL
			//////// KeyPress(F3)");
		}
		/**********************
		 * End CPI_PRIMARY_SUB_VERTICAL
		 *********************/
		/**** Start CR-8001-70893 Marine CR *******************************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)"))
				&& (pControlName.equalsIgnoreCase("CPI_SECONDARY_VERTICAL")
						&& lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
			// //System.out.println("1SECONDARY_VERTICAL(F3)");
			String name = "SECONDARY VERTICAL";
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// //System.out.println("2End SECONDARY_VERTICAL KeyPress(F3)");
		}
		/**** ENd CR-8001-70893 Marine CR *********************************/ /********************** CPI_SECONDARY_SUB_VERTICAL *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)"))
				&& ((pControlName.equalsIgnoreCase("CPI_SECONDARY_SUB_VERTICAL")))
				&& ((lstrActivityName.equalsIgnoreCase("RM_Green_File"))
						|| (lstrActivityName.equalsIgnoreCase("Endorsement"))
						|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")) /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr") /*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */)
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
			//////// //System.out.println("1SECONDARY_SUB_VERTICAL(F3)");
			String name = "SECONDARY SUB VERTICAL";
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			//////// //System.out.println("2End SECONDARY_SUB_VERTICAL
			//////// KeyPress(F3)");
		}

		/**********************
		 * End CPI_SECONDARY_SUB_VERTICAL
		 *********************/
		/***************************** CPI_SOURCE_NAME ****************************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && ((pControlName.equalsIgnoreCase("CPI_SOURCE_NAME")))
				&& ((lstrActivityName.equalsIgnoreCase("Endorsement"))
						|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")) /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */
						|| ((lstrActivityName.equalsIgnoreCase("RM_Green_File"))))) {
			//////// //System.out.println("1SOURCE_NAME KeyPress(F3)");
			//////// //System.out.println("BBRKKR Value" + bBGKRGID);
			formObject.setNGValue("CPI_CHANNEL_NAME", "");
			formObject.setNGValue("CPI_BRANCH_NAME", "");
			clearDetails();// PID_CPI process changes
			String name = "CPI_SOURCE_NAME";
			BBGKRGVAL = formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL");
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			pl.bBGKRGID1 = bBGKRGID;
			pl.BBGKRGVAL1 = BBGKRGVAL;
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// picklist.setTitle("IL Location");
			//////// //System.out.println("2End SOURCE_NAME KeyPress(F3)");
		}

		// ------Yogendra Saraswat---------------------
		if (((pEventName.equalsIgnoreCase("KeyPress(F3)")) && ((pControlName.equalsIgnoreCase("Corp_SOURCE_Name")))
				&& (lstrActivityName.equalsIgnoreCase("BSG_QC"))
				&& (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")))) {
			//////// //System.out.println("1Corp_SOURCE_Name KeyPress(F3)");
			//////// //System.out.println("BBRKKR Value" + bBGKRGID);
			formObject.setNGValue("CORP_CHANNEL_NAME", "");
			formObject.setNGValue("CORP_BRANCH_NAME", "");

			String name = "CPI_SOURCE_NAME";
			BBGKRGVAL = formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL");
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			pl.bBGKRGID1 = bBGKRGID;
			pl.BBGKRGVAL1 = BBGKRGVAL;
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// picklist.setTitle("IL Location");

			//////// //System.out.println("2End Corp_SOURCE_Name KeyPress(F3)");
		}
		// ------Yogendra Saraswat---------------------

		/************************ End CPI_SOURCE_NAME *********************/
		/************************ CPI_CHANNEL_NAME *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && ((pControlName.equalsIgnoreCase("CPI_CHANNEL_NAME")))
				&& ((lstrActivityName.equalsIgnoreCase("Endorsement"))
						|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")) /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr") /*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */
						|| ((lstrActivityName.equalsIgnoreCase("RM_Green_File"))))) {
			//////// //System.out.println("1SOURCE_NAME KeyPress(F3)");
			sourceID = SourceID(formObject.getNGValue("CPI_SOURCE_NAME"));
			String name = "CPI_CHANNEL_NAME";
			picklist = formObject.getNGPickList(pControlName, name, true);
			BBGKRGVAL = formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL");
			pl = new PickListListener(formObject, pControlName, picklist);
			pl.bBGKRGID1 = bBGKRGID;
			pl.BBGKRGVAL1 = BBGKRGVAL;
			pl.sourceID1 = sourceID;
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// picklist.setTitle("IL Location");

			//////// //System.out.println("2End SOURCE_NAME KeyPress(F3)");
		}

		// --------Yogendra Saraswat===========

		if (((pEventName.equalsIgnoreCase("KeyPress(F3)")) && ((pControlName.equalsIgnoreCase("CORP_CHANNEL_NAME")))
				&& (lstrActivityName.equalsIgnoreCase("BSG_QC"))
				&& (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")))) {
			//////// //System.out.println("1CPI_CHANNEL_NAME KeyPress(F3)");
			sourceID = SourceID(formObject.getNGValue("CORP_SOURCE_NAME"));
			String name = "CPI_CHANNEL_NAME";
			picklist = formObject.getNGPickList(pControlName, name, true);
			BBGKRGVAL = formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL");
			pl = new PickListListener(formObject, pControlName, picklist);
			pl.bBGKRGID1 = bBGKRGID;
			pl.BBGKRGVAL1 = BBGKRGVAL;
			pl.sourceID1 = sourceID;
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);

			//////// //System.out.println("2CORP_CHANNEL_NAME KeyPress(F3)");
		}

		// --------Yogendra Saraswat===========
		/************************ End CPI_CHANNEL_NAME *********************/
		/************************* CPI_BRANCH_NAME code *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && ((pControlName.equalsIgnoreCase("CPI_BRANCH_NAME")))
				&& ((lstrActivityName.equalsIgnoreCase("Endorsement"))
						|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")) /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */
						|| ((lstrActivityName.equalsIgnoreCase("RM_Green_File"))))) {
			//////// //System.out.println("1BRANCH_NAME KeyPress(F3)");
			// String name = "CPI_BRANCH_NAME";//PID_CPI process changes
			String name = "CPI_BRANCH_NAME,CPI_BRANCH_ID,SPName1,SPCode1,SPName2,SPCode2,SPName3,SPCode3,SPName4,SPCode4"; // PID_CPI
																															// process
																															// changes

			picklist = formObject.getNGPickList(pControlName, name, true);
			sourceID = SourceID(formObject.getNGValue("CPI_SOURCE_NAME"));
			BBGKRGVAL = formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL");
			pl = new PickListListener(formObject, pControlName, picklist);
			pl.bBGKRGID1 = bBGKRGID;
			pl.BBGKRGVAL1 = BBGKRGVAL;
			pl.sourceID1 = sourceID;
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// picklist.setTitle("IL Location");

			//////// //System.out.println("2End BRANCH_NAME KeyPress(F3)");
		}

		// =======Yogendra Saraswat============
		if (((pEventName.equalsIgnoreCase("KeyPress(F3)")) && ((pControlName.equalsIgnoreCase("Corp_Branch_Name")))
				&& (lstrActivityName.equalsIgnoreCase("BSG_QC"))
				&& (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")))) {
			//////// //System.out.println("1Corp_Branch_Name KeyPress(F3)");
			// String name = "CPI_BRANCH_NAME";//PID_CPI process changes
			String name = "CPI_BRANCH_NAME,CPI_BRANCH_ID,SPName1,SPCode1,SPName2,SPCode2,SPName3,SPCode3,SPName4,SPCode4"; // PID_CPI
																															// process
																															// changes

			picklist = formObject.getNGPickList(pControlName, name, true);
			sourceID = SourceID(formObject.getNGValue("CORP_SOURCE_NAME"));
			BBGKRGVAL = formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL");
			pl = new PickListListener(formObject, pControlName, picklist);
			pl.bBGKRGID1 = bBGKRGID;
			pl.BBGKRGVAL1 = BBGKRGVAL;
			pl.sourceID1 = sourceID;
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);

			//////// //System.out.println("2Corp_Branch_Name KeyPress(F3)");
		}
		// ====Yogendra Saraswat==============

		/*************************
		 * END CPI_BRANCH_NAME code
		 *********************/
		/*****************
		 * CPI_naME_OF_LEADER by satish for CR21
		 *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_naME_OF_LEADER"))
				&& (lstrActivityName.equalsIgnoreCase("Co_Insurance"))) {
			if (((formObject.getNGValue("CPI_LEADER_CATEGORY")).equalsIgnoreCase("PSU"))
					|| ((formObject.getNGValue("CPI_LEADER_CATEGORY")).equalsIgnoreCase("Private"))) {
				int nl = LeaderID(formObject.getNGValue("CPI_LEADER_CATEGORY"));

				//////// //System.out.println("1 CPI_naME_OF_LEADER
				//////// KeyPress(F3)" + nl);
				String name = "Name of Leader";
				picklist = formObject.getNGPickList(pControlName, name, true);

				pl = new PickListListener(formObject, pControlName, picklist);
				pl.product_type_val = nl;// formObject.getNGValue("CPI_LEADER_CATEGORY");
				picklist.addPickListListener(pl);
				picklist.setSearchEnable(true);
				picklist.setVisible(true);
				// picklist.setTitle("IL Location");

				//////// //System.out.println("2End CPI_naME_OF_LEADER
				//////// KeyPress(F3)");
			}
		}

		if ((pEventName.equalsIgnoreCase("click")) && (pControlName.equalsIgnoreCase("CPI_LEADER_CATEGORY"))
				&& (lstrActivityName.equalsIgnoreCase("co_insurance"))) {
			//////// //System.out.println("1 Click CPI_LEADER_CATEGORY : ");
			formObject.setNGValue("CPI_NAME_OF_LEADER", "");
			if ((formObject.getNGValue("CPI_LEADER_CATEGORY")).equalsIgnoreCase("")) {
				//////// //System.out.println("2 Click CPI_LEADER_CATEGORY : ");
				formObject.setNGEnable("CPI_NAME_OF_LEADER", false);
			} else {
				//////// //System.out.println("3 Click CPI_LEADER_CATEGORY : ");
				formObject.setNGEnable("CPI_NAME_OF_LEADER", true);
				formObject.setNGLocked("CPI_NAME_OF_LEADER", false);
			}
			//////// //System.out.println("4 End Click CPI_LEADER_CATEGORY : ");
		}
		/*****************
		 * End CPI_naME_OF_LEADER by satish for CR21
		 *********************/
		/*****************
		 * CPI_PRODUCT_NAME by satish for CR21
		 *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_PRODUCT_NAME"))
				&& ((lstrActivityName.equalsIgnoreCase("Co_Insurance"))
						|| (lstrActivityName.equalsIgnoreCase("Co_Insurance_RM")))) {
			if (!(formObject.getNGValue("CPI_PRODUCT_CATEGORY").equalsIgnoreCase(""))) {
				int pc = ProductCategoryID(formObject.getNGValue("CPI_PRODUCT_CATEGORY"));

				//////// //System.out.println("1 CPI_PRODUCT_NAME KeyPress(F3)"
				//////// + pc);
				String name = "PRODUCT NAME,PRODUCT CODE";// Vendor login &
															// weather Product
				picklist = formObject.getNGPickList(pControlName, name, true);

				pl = new PickListListener(formObject, pControlName, picklist);
				pl.product_type_val = pc;// formObject.getNGValue("CPI_PRODUCT_CATEGORY");
				picklist.addPickListListener(pl);
				picklist.setSearchEnable(true);
				picklist.setVisible(true);
				// picklist.setTitle("IL Location");

				//////// //System.out.println("2End CPI_PRODUCT_NAME
				//////// KeyPress(F3)");
			}
		}

		/***************************
		 * PID-CPI process changes
		 ***************************/
		/************** moDE_OF_PAYMENT code *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && ((pControlName.equalsIgnoreCase("CPI_moDE_OF_PAYMENT"))
				|| (pControlName.equalsIgnoreCase("CPI_MODE_OF_PAYMENT2"))
				|| (pControlName.equalsIgnoreCase(
						"CPI_MODE_OF_PAYMENT3"))/*
												 * || (pControlName.
												 * equalsIgnoreCase(
												 * "Corp_moDE_OF_PAYMENT")) ||
												 * (pControlName.
												 * equalsIgnoreCase(
												 * "End_moDE_OF_PAYMENT"))
												 */) /* Suraj */
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
						|| lstrActivityName.equalsIgnoreCase(
								"CPUCustClarification")/*
														 * CR 46 CPU DataWashing
														 */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr") /*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
			//////// //System.out.println("1 moDE_OF_PAYMENT KeyPress(F3)");
			String name = "Mode of Payment";
			picklist = formObject.getNGPickList(pControlName, name, true);

			pl = new PickListListener(formObject, pControlName, picklist);
			picklist.addPickListListener(pl);
			picklist.setSearchEnable(true);
			picklist.setVisible(true);
			// picklist.setTitle("IL Location");

			//////// //System.out.println("2End moDE_OF_PAYMENT KeyPress(F3)");
		}
		/**************** moDE_OF_PAYMENT code *********************/
		/**************
		 * HYPOTHECATED_TO KeyPress HeldCover CR
		 *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_HYPOTHECATED_TO"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("BSG_QC")
						|| lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))) // CR-8001-70893
																					// Marine
																					// CR
		{
			//////// //System.out.println("In HYPOTHECATED_TO KeyPress(F3)");
			/*
			 * String name = "Hypothecated To"; picklist =
			 * formObject.getNGPickList(pControlName, name, true);
			 * 
			 * pl = new PickListListener(formObject, pControlName, picklist);
			 * picklist.addPickListListener(pl); picklist.setSearchEnable(true);
			 * picklist.setVisible(true);
			 */
			/**************************************
			 * CR-8001-92286 Omniflow held cover letter CR Start
			 *****************************************************/
			url = "hypothecatedsearch.jsp";
			// //System.out.println("hypothecatedsearch URL: " + url);
			showMailPage(url, "hypothecated");
			/**************************************
			 * CR-8001-92286 Omniflow held cover letter CR End
			 ******************************************************/
			// picklist.setTitle("IL Location");

			//////// //System.out.println("End HYPOTHECATED_TO KeyPress(F3)");
		}
		/****************
		 * HYPOTHECATED_TO KeyPress HeldCover CR
		 *********************/

		/* Change Event for MODE_OF_PAYMENT */
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")) && ((pControlName
				.equalsIgnoreCase("CPI_moDE_OF_PAYMENT"))
				|| (pControlName.equalsIgnoreCase("CPI_MODE_OF_PAYMENT2"))
				|| (pControlName.equalsIgnoreCase(
						"CPI_MODE_OF_PAYMENT3"))/*
												 * || (pControlName.
												 * equalsIgnoreCase(
												 * "Corp_moDE_OF_PAYMENT")) ||
												 * (pControlName.
												 * equalsIgnoreCase(
												 * "End_moDE_OF_PAYMENT"))
												 */) /* Suraj */
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
						|| lstrActivityName.equalsIgnoreCase("CPUCustClarification")
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification"))
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
			//////// //System.out.println("Start moDE_OF_PAYMENT Change");
			//////// //System.out.println("Control Field"+pControlName);
			// event_PID_Tagging(pControlName);
			//////// //System.out.println("End moDE_OF_PAYMENT Change");
		}
		/* End Change Event for MODE_OF_PAYMENT Suraj */
		/***********************
		 * End PID-CPI process changes
		 ***************************/

		if ((pEventName.equalsIgnoreCase("click")) && (pControlName.equalsIgnoreCase("CPI_PRODUCT_CATEGORY"))
				&& (lstrActivityName.equalsIgnoreCase("co_insurance"))) {
			//////// //System.out.println("1 Click CPI_PRODUCT_CATEGORY : ");
			//////// //System.out.println("CPI_PRODUCT_NAME b4 clearing: " +
			//////// formObject.getNGValue("CPI_PRODUCT_NAME"));
			String p_name = formObject.getNGValue("CPI_PRODUCT_NAME");
			//////// //System.out.println("CPI_PRODUCT_NAME after clearing: " +
			//////// p_name);
			formObject.setNGValue("CPI_PRODUCT_NAME", "");
			formObject.setNGValue("CPI_PRODUCT_IRDACODE", "");// Vendor login &
																// weather
																// Product

			if ((formObject.getNGValue("CPI_PRODUCT_CATEGORY")).equalsIgnoreCase("")) {
				//////// //System.out.println("satish Click CPI_PRODUCT_CATEGORY
				//////// is null : ");
				formObject.setNGEnable("CPI_PRODUCT_NAME", false);
			} else {
				//////// //System.out.println("satish Click CPI_PRODUCT_CATEGORY
				//////// is not null: ");
				formObject.setNGEnable("CPI_PRODUCT_NAME", true);
				formObject.setNGLocked("CPI_PRODUCT_NAME", false);
			}
			//////// //System.out.println("2 End Click CPI_PRODUCT_CATEGORY :
			//////// ");
		}
		/*****************
		 * End CPI_PRODUCT_NAME by satish for CR21
		 *********************/
		/*****************
		 * CPI_PRODUCT_NAME sandeep 999++++
		 *********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)"))
				&& ((pControlName.equalsIgnoreCase("CPI_PRODUCT_NAME"))
						|| (pControlName.equalsIgnoreCase("Corp_PRODUCT_NAME"))
						|| (pControlName.equalsIgnoreCase("End_PRODUCT_NAME")))
				&& ((lstrActivityName.equalsIgnoreCase("Endorsement"))
						|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment")
								|| lstrActivityName.equalsIgnoreCase("CPU_Data_Washing"))
						|| (lstrActivityName.equalsIgnoreCase(
								"CPUCustClarification"))/*
														 * CR 46 CPU DataWashing
														 */
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr") /*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 * //CR-8001-70893 Marine CR
													 */
						|| (lstrActivityName.equalsIgnoreCase("RM_Green_File"))
						|| (lstrActivityName.equalsIgnoreCase("RM_Clarification")))
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))
				&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
			// System.out.println("Inside keypress f3 Yogesh...Corp_PRODUCT_NAME
			// ");
			if (!(lstrActivityName.equalsIgnoreCase("RM_Clarification"))
					&& !(lstrActivityName.equalsIgnoreCase("CPUCustClarification"))) {
				// System.out.println("Inside keypress f3
				// Yogesh...Corp_PRODUCT_NAME 4545");

				/**********************
				 * Changes by vishal for iPartner CR
				 ************************/
				if (((formObject.getNGValue("CPI_PRODUCT_TYPE")).equalsIgnoreCase("NON-OTC"))
						|| ((formObject.getNGValue("CPI_PRODUCT_TYPE")).equalsIgnoreCase("OTC"))
						|| ((formObject.getNGValue("CPI_PRODUCT_TYPE")).equalsIgnoreCase(
								"iPartner"))) /**********************
												 * Changes by vishal for
												 * iPartner CR
												 ************************/
				{
					int pp = ProducttypeID(formObject.getNGValue("CPI_PRODUCT_TYPE"));
					// System.out.println("Inside keypress f3
					// Yogesh...Corp_PRODUCT_NAME 1");

					// System.out.println("1 CPI_PRODUCT_NAMEKeyPress(F3)" +
					// pp);
					String name = "PRODUCT NAME,PRODUCT CODE";// Vendor login &
																// weather
																// Product
					picklist = formObject.getNGPickList(pControlName, name, true);

					pl = new PickListListener(formObject, pControlName, picklist);
					pl.product_type_val = pp;
					picklist.addPickListListener(pl);
					picklist.setSearchEnable(true);
					picklist.setVisible(true);
					// picklist.setTitle("IL Location");

					//////// //System.out.println("2End IL CPI_PRODUCT_NAME
					//////// KeyPress(F3)");
				}
				/***********************
				 * Start CR-8001-61337 URN Medium Priority
				 ***************************/
				else if ((lstrActivityName.equalsIgnoreCase("RM_Green_File"))
						&& formObject.getNGValue("CPI_Transaction_type").equalsIgnoreCase("Renewal")
						&& ((formObject.getNGValue("CPI_PRODUCT_TYPE")).equalsIgnoreCase("Renewal Notice"))) {
					int pp = 1; // default value if renewal notice is seleted as
								// non-otc products are required

					//////// //System.out.println("CPI_PRODUCT_NAMEKeyPress(F3)
					//////// for renewal notice case " + pp);
					String name = "PRODUCT NAME,PRODUCT CODE";
					picklist = formObject.getNGPickList(pControlName, name, true);

					pl = new PickListListener(formObject, pControlName, picklist);
					pl.product_type_val = pp;
					picklist.addPickListListener(pl);
					picklist.setSearchEnable(true);
					picklist.setVisible(true);

				}
				/***********************
				 * End CR-8001-61337 URN Medium Priority
				 ***************************/
			} else if ((lstrActivityName.equalsIgnoreCase("RM_Clarification")
					|| lstrActivityName.equalsIgnoreCase("CPUCustClarification"))
					&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {

				if (((formObject.getNGValue("CPI_PRODUCT_TYPE")).equalsIgnoreCase("NON-OTC"))
						|| ((formObject.getNGValue("CPI_PRODUCT_TYPE")).equalsIgnoreCase("OTC"))) {
					int pp = ProducttypeID(formObject.getNGValue("CPI_PRODUCT_TYPE"));

					//////// //System.out.println("1
					//////// Corp_PRODUCT_NAMEKeyPress(F3)" + pp);
					String name = "PRODUCT NAME,PRODUCT CODE";// Vendor login &
																// weather
																// Product
					picklist = formObject.getNGPickList(pControlName, name, true);

					pl = new PickListListener(formObject, pControlName, picklist);
					pl.product_type_val = pp;
					picklist.addPickListListener(pl);
					picklist.setSearchEnable(true);
					picklist.setVisible(true);
					// picklist.setTitle("IL Location");

					//////// //System.out.println("2End RM_Clarification
					//////// Corporate Policy Insurance KeyPress(F3)");
				}
			} else if ((lstrActivityName.equalsIgnoreCase("RM_Clarification")
					|| lstrActivityName.equalsIgnoreCase("CPUCustClarification"))
					&& (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement"))) {
				if (((formObject.getNGValue("End_PRODUCT_TYPE")).equalsIgnoreCase("NON-OTC"))
						|| ((formObject.getNGValue("End_PRODUCT_TYPE")).equalsIgnoreCase("OTC"))) {
					int pp = ProducttypeID(formObject.getNGValue("End_PRODUCT_TYPE"));

					//////// //System.out.println("1
					//////// End_PRODUCT_NAMEKeyPress(F3)" + pp);
					String name = "PRODUCT NAME,PRODUCT CODE";// Vendor login &
																// weather
																// Product
					picklist = formObject.getNGPickList(pControlName, name, true);

					pl = new PickListListener(formObject, pControlName, picklist);
					pl.product_type_val = pp;
					picklist.addPickListListener(pl);
					picklist.setSearchEnable(true);
					picklist.setVisible(true);
					// picklist.setTitle("IL Location");

					//////// //System.out.println("2End RM_Clarification
					//////// Endorsement KeyPress(F3)");
				}
			}
		}

		if ((pEventName.equalsIgnoreCase("click")) && (pControlName.equalsIgnoreCase("CPI_PRODUCT_TYPE"))
				&& ((lstrActivityName.equalsIgnoreCase("RM_Green_File"))
						|| (lstrActivityName.equalsIgnoreCase("Endorsement"))
						|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")) /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification")/*
														 * CR-OMCPI-1314-03 CPU
														 * DataWashing
														 */)
				&& (!(lstrActivityName.equalsIgnoreCase("RM_Clarification") || lstrActivityName.equalsIgnoreCase(
						"CPUCustClarification")/* CR 46 CPU DataWashing */))
				&& !(formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))) {
			formObject.setNGValue("CPI_PRODUCT_NAME", "");
			formObject.setNGValue("CPI_PRODUCT_IRDACODE", "");// Vendor login &
																// weather
																// Product

			//////// //System.out.println("2End Click Product Type");

			// bhagat CR CPU_HEALTH
			formObject.setNGListIndex("CPI_VAS", 0);
			formObject.setNGEnable("CPI_VAS", false);
			formObject.setNGLocked("CPI_VAS", false);
			// end bhagat CR CPU_HEALTH
		}

		if (pEventName.equalsIgnoreCase("click")
				&& (pControlName.equalsIgnoreCase("CPI_PRODUCT_TYPE")
						|| pControlName.equalsIgnoreCase("End_PRODUCT_TYPE"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Clarification") || lstrActivityName.equalsIgnoreCase(
						"CPUCustClarification")/* CR 46 CPU DataWashing */)
				&& !(formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))) {
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				formObject.setNGValue("Corp_PRODUCT_NAME", "");
				formObject.setNGValue("CPI_PRODUCT_IRDACODE", "");// Vendor
																	// login &
																	// weather
																	// Product
			} else if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				formObject.setNGValue("End_PRODUCT_NAME", "");
				formObject.setNGValue("CPI_PRODUCT_IRDACODE", "");// Vendor
																	// login &
																	// weather
																	// Product
			}
			//////// //System.out.println("2End Click Product Type");
		}

		/******************
		 * END CPI_PRODUCT_NAME sandeep 999++++
		 *********************/
		// Start CR2 Phase1 ravi
		if (pControlName.equalsIgnoreCase("End_REJECTED_TO_IT") && pEventName.equalsIgnoreCase("CLICK")) {
			//////// //System.out.println("1");
			if (pControlValue.equalsIgnoreCase("true")) {
				//////// //System.out.println("2");
				formObject.setNGLocked("END_Samadhan_Interaction_ID", true);
				formObject.setNGValue("CPI_REJECTED_TO_IT", "true");
			}
			if (pControlValue.equalsIgnoreCase("false")) {
				//////// //System.out.println("3");
				if (!lstrActivityName.equalsIgnoreCase("Rejected_To_IT"))// CR
																			// 45
																			// Additional
																			// changes
																			// to
																			// capture
																			// samadhan
																			// id
																			// at
																			// Rejected_To_IT
																			// workstep
				{
					formObject.setNGValue("END_Samadhan_Interaction_ID", "");
				}
				formObject.setNGLocked("END_Samadhan_Interaction_ID", false);
				formObject.setNGValue("CPI_REJECTED_TO_IT", "false");
			}
		}
		if (pControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
				&& formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
			//////// //System.out.println("satish10");
			if (pEventName.equalsIgnoreCase("CHANGE")
					&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
				//////// //System.out.println("satish11");
				formObject.setNGLocked("CPI_Samadhan_Interaction_ID", true);
				formObject.setNGValue("CPI_REJECTED_TO_IT", "True");
			}
			if (pEventName.equalsIgnoreCase("CHANGE")
					&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")) {
				//////// //System.out.println("satish12");
				formObject.setNGLocked("CPI_Samadhan_Interaction_ID", false);
				formObject.setNGValue("CPI_REJECTED_TO_IT", "False");
			}
		}
		if (pControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
				&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
			//////// //System.out.println("10");
			if (pEventName.equalsIgnoreCase("CHANGE")
					&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
				//////// //System.out.println("11");
				formObject.setNGLocked("End_Samadhan_Interaction_ID", true);
				formObject.setNGValue("End_REJECTED_TO_IT", "True");
			}
			if (pEventName.equalsIgnoreCase("CHANGE")
					&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")) {
				//////// //System.out.println("12");
				formObject.setNGLocked("End_Samadhan_Interaction_ID", false);
				formObject.setNGValue("End_REJECTED_TO_IT", "False");
			}
		}

		if (pControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT") && pEventName.equalsIgnoreCase("CLICK")) {
			//////// //System.out.println("7");
			if (pControlValue.equalsIgnoreCase("true")) {
				//////// //System.out.println("8");
				formObject.setNGLocked("Corp_Samadhan_Interaction_ID", true);
				formObject.setNGValue("CPI_REJECTED_TO_IT", "true");
			}
			if (pControlValue.equalsIgnoreCase("false")) {
				//////// //System.out.println("9");
				if (!lstrActivityName.equalsIgnoreCase("Rejected_To_IT"))// CR
																			// 45
																			// Additional
																			// changes
																			// to
																			// capture
																			// samadhan
																			// id
																			// at
																			// Rejected_To_IT
																			// workstep
				{
					formObject.setNGValue("Corp_Samadhan_Interaction_ID", "");
				}
				formObject.setNGLocked("Corp_Samadhan_Interaction_ID", false);
				formObject.setNGValue("CPI_REJECTED_TO_IT", "false");
			}
		}
		if (pControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
				&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
			//////// //System.out.println("4");
			if (pEventName.equalsIgnoreCase("CHANGE")
					&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
				//////// //System.out.println("5");
				formObject.setNGLocked("Corp_Samadhan_Interaction_ID", true);
				formObject.setNGValue("Corp_REJECTED_TO_IT", "True");
			}
			if (pEventName.equalsIgnoreCase("CHANGE")
					&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")) {
				//////// //System.out.println("6");
				formObject.setNGLocked("Corp_Samadhan_Interaction_ID", false);
				formObject.setNGValue("Corp_REJECTED_TO_IT", "False");
			}
		}

		// For Withdrawal Cases
		if (pControlName.equalsIgnoreCase("CPI_Withdrawn_Status")
				&& (pEventName.equalsIgnoreCase("CLICK") || pEventName.equalsIgnoreCase("CHANGE"))) {
			//////// //System.out.println("1");
			if (pControlValue.equalsIgnoreCase("true")) {
				//////// //System.out.println("2");
				formObject.setNGEnable("CPI_Withdrawn_Reason", true);
				// bhagat CR CPU_HEALTH
				if (lstrActivityName.equalsIgnoreCase("CPU_HEALTH")) {
					formObject.setNGListIndex("CPI_PH_Print_Option", 0);
					formObject.setNGLocked("CPI_PH_Print_Option", false);// Yogendra
																			// Saraswat
																			// for
																			// CPU
																			// Health
					formObject.setNGValue("CPI_POLICY_NO", "");
					formObject.setNGLocked("CPI_POLICY_NO", false);// Yogendra
																	// Saraswat
																	// for CPU
																	// Health
				}
				// end bhagat CR CPU_HEALTH
			}
			if (pControlValue.equalsIgnoreCase("false")) {
				//////// //System.out.println("3");
				formObject.setNGListIndex("CPI_Withdrawn_Reason", 0);
				formObject.setNGEnable("CPI_Withdrawn_Reason", false);
				// bhagat CR CPU_HEALTH
				if (lstrActivityName.equalsIgnoreCase("CPU_HEALTH")) {
					formObject.setNGLocked("CPI_PH_Print_Option", true);// Yogendra
																		// Saraswat
																		// for
																		// CPU
																		// Health
					formObject.setNGLocked("CPI_POLICY_NO", true);// Yogendra
																	// Saraswat
																	// for CPU
																	// Health
				}
				// end bhagat CR CPU_HEALTH
			}
		}
		// End Withdrawal Cases

		// end CR2 Phase1 ravi

		/***************************
		 * PID-CPI process changes
		 ***************************/
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
				|| pEventName.equalsIgnoreCase("DBCLICK"))
				&& (pControlName.equalsIgnoreCase(
						"CPI_PID_PAYMENT_TYPE") /*
												 * ||
												 * pControlName.equalsIgnoreCase
												 * ("Corp_PID_PAYMENT_TYPE") ||
												 * pControlName.equalsIgnoreCase
												 * ("End_PID_PAYMENT_TYPE")
												 */)
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification") /*
														 * || lstrActivityName.
														 * equalsIgnoreCase(
														 * "RM_Clarification")
														 * || lstrActivityName.
														 * equalsIgnoreCase(
														 * "CPUCustClarification")
														 */)) {
			//////// //System.out.println("Inside CPI_PID_PAYMENT_TYPE click
			//////// event");
			if (formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")) {
				event_PID_Tagging("true"); // Sending true as dummy value
				formObject.setNGEnable("Frame_PaymentGrid", false);
				formObject.setNGLocked("Frame_PaymentGrid", false);
				// Suraj
				/*
				 * formObject.setNGValue("CPI_moDE_OF_PAYMENT", "");
				 * formObject.setNGEnable("CPI_moDE_OF_PAYMENT", false);
				 * formObject.setNGLocked("CPI_moDE_OF_PAYMENT", false);
				 * if(formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase
				 * ("Endorsement")) {
				 * formObject.setNGValue("CPI_INSTRUMENT_AMOUNT", "");
				 * formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT", false); }
				 * formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO", "");
				 * formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
				 * false); formObject.setNGValue("CPI_BANK_NAME_CD_NAME", "");
				 * formObject.setNGLocked("CPI_BANK_NAME_CD_NAME", false);
				 * formObject.setNGValue("CPI_INSTRUMENT_DATE", "");
				 * formObject.setNGEnable("CPI_INSTRUMENT_DATE", false); Suraj
				 */
				// formObject.setNGLocked("CPI_INSTRUMENT_DATE", false);
			} else {
				formObject.setNGEnable("Frame_PaymentGrid", true);
				formObject.setNGLocked("Frame_PaymentGrid", true);
				// Suraj
				/*
				 * formObject.setNGEnable("CPI_moDE_OF_PAYMENT", true);
				 * formObject.setNGLocked("CPI_moDE_OF_PAYMENT", false);
				 * if(formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase
				 * ("Endorsement")) {
				 * formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT", true); }
				 * formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
				 * true); formObject.setNGLocked("CPI_BANK_NAME_CD_NAME", true);
				 * formObject.setNGEnable("CPI_INSTRUMENT_DATE", true);
				 */
				// formObject.setNGLocked("CPI_INSTRUMENT_DATE", false);
			}
		}
		/***********************
		 * End PID-CPI process changes
		 ***************************/

		/* CR-OMCPI-1314-03 CPU DataWashing Start */
		/*
		 * if ((pEventName.equalsIgnoreCase("CHANGE") ||
		 * pEventName.equalsIgnoreCase("CLICK") ||
		 * pEventName.equalsIgnoreCase("DBCLICK")) &&
		 * pControlName.equalsIgnoreCase("CPI_MODE_OF_PAYMENT") &&
		 * lstrActivityName.equalsIgnoreCase("CPU_Data_Washing"))
		 */ // commented for PID_CPI process changes
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("KEYPRESS"))
				&& pControlName.equalsIgnoreCase("CPI_MODE_OF_PAYMENT")
				&& lstrActivityName.equalsIgnoreCase("CPU_Data_Washing"))// PID_CPI
																			// process
																			// changes
		{
			if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("CD")) {
				formObject.NGClear("CPI_CHANGED_MAIL_STATUS");
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Pending for Payment Confirmation");
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Pending for Clarification");
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Previous Endorsement");// CR-OMCPI-1314-05
																						// DataWashing
																						// -
																						// Mail_Management_Extension
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Pending for Booking");
				// Sadik
				// Start CR-8001-85712 Adding New Mail Status By Mohammad Sadik
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Payment Confirmation Not Required");
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Pending for Approval");
				// End CR-8001-85712 Adding New Mail Status By Mohammad Sadik
				// End
				formObject.setNGListIndex("CPI_CHANGED_MAIL_STATUS", 0);
			} else {
				formObject.NGClear("CPI_CHANGED_MAIL_STATUS");
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Pending for Payment Confirmation");
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Pending for Clarification");
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Previous Endorsement");// CR-OMCPI-1314-05
																						// DataWashing
																						// -
																						// Mail_Management_Extension
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Pending for Payment");
				// Sadik
				// Start CR-8001-85712 Adding New Mail Status By Mohammad Sadik
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Payment Confirmation Not Required");
				formObject.NGAddItem("CPI_CHANGED_MAIL_STATUS", "Pending for Approval");
				// End CR-8001-85712 Adding New Mail Status By Mohammad Sadik
				// End
				formObject.setNGListIndex("CPI_CHANGED_MAIL_STATUS", 0);
			}
		}
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
				|| pEventName.equalsIgnoreCase("DBCLICK")) && pControlName.equalsIgnoreCase("CPI_Route_to")
				&& lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
			if (formObject.getNGValue("CPI_Route_to").equalsIgnoreCase("RM Clarification")) {
				formObject.setNGListIndex("CPI_CHANGED_MAIL_STATUS", 0);
				formObject.setNGEnable("CPI_CHANGED_MAIL_STATUS", false);
				formObject.setNGLocked("CPI_CHANGED_MAIL_STATUS", false);
			} else {
				formObject.setNGEnable("CPI_CHANGED_MAIL_STATUS", true);
				formObject.setNGLocked("CPI_CHANGED_MAIL_STATUS", true);
			}
		}
		// //System.out.println("Checking null pointer :
		// "+formObject.getNGValue("CPI_DATAWASHING_TYPE"));
		/****
		 * Start CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
		 ******/
		if (!(lstrActivityName.equalsIgnoreCase("Work Introduction1"))
				&& (pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
						|| pEventName.equalsIgnoreCase("DBCLICK"))
				&& (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
				&& (pControlName.equalsIgnoreCase("CPI_CO_INS_ROUTE_TO_BACK")
						|| pControlName.equalsIgnoreCase("CPI_CPU_SEND_TO"))
				&& (lstrActivityName.equalsIgnoreCase("CPU_HEALTH"))) {

			if (pControlName.equalsIgnoreCase("CPI_CO_INS_ROUTE_TO_BACK")) {
				//////// //System.out.println("CPI_CO_INS_ROUTE_TO_BACK
				//////// case:"+formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK"));
				if (formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK") != null
						&& formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK").equalsIgnoreCase("CPU_Data_Washing")) {
					//////// //System.out.println("CPI_CO_INS_ROUTE_TO_BACK if
					//////// case:"+formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK"));
					formObject.setNGListIndex("CPI_CPU_SEND_TO", 0);
					formObject.setNGEnable("CPI_CPU_SEND_TO", false);
					formObject.setNGLocked("CPI_CPU_SEND_TO", false);
				} else {
					//////// //System.out.println("CPI_CPU_SEND_TO else
					//////// case:"+formObject.getNGValue("CPI_CPU_SEND_TO"));
					formObject.setNGEnable("CPI_CPU_SEND_TO", true);
					formObject.setNGLocked("CPI_CPU_SEND_TO", true);
				}
			}
			if (pControlName.equalsIgnoreCase("CPI_CPU_SEND_TO")) {
				if (formObject.getNGValue("CPI_CPU_SEND_TO") != null
						&& (formObject.getNGValue("CPI_CPU_SEND_TO").equalsIgnoreCase("Corporate_UW")
								|| formObject.getNGValue("CPI_CPU_SEND_TO").equalsIgnoreCase("CPU_Approver")
								|| formObject.getNGValue("CPI_CPU_SEND_TO").equalsIgnoreCase("Client_Hold"))) // added
																												// due
																												// to
																												// CPI
																												// Alternate
																												// Inwarding
																												// Process
																												// 4.0
				{
					//////// //System.out.println("CPI_CPU_SEND_TO
					//////// case:"+formObject.getNGValue("CPI_CPU_SEND_TO"));
					formObject.setNGListIndex("CPI_CO_INS_ROUTE_TO_BACK", 0);
					formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", false);
					formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", false);
				} else {
					//////// //System.out.println("CPI_CPU_SEND_TO else
					//////// case:"+formObject.getNGValue("CPI_CPU_SEND_TO"));
					formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", true);
					formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", true);
				}
			}
		}
		/**** Start CR-8001-70893 Marine CR *******************************/
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
				|| pEventName.equalsIgnoreCase("DBCLICK"))
				&& (pControlName.equalsIgnoreCase("CPI_CO_INS_ROUTE_TO_BACK")
						|| pControlName.equalsIgnoreCase("CPI_SEND_TO")
						|| /* Yogesh Marine CR */ pControlName.equalsIgnoreCase("CPI_BUSINESS_TYPE"))
				&& lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr")
				|| lstrActivityName.equalsIgnoreCase(
						"COPS_Policy_Print")/* Yogesh Marine CR */) {
			if (pControlName.equalsIgnoreCase("CPI_CO_INS_ROUTE_TO_BACK")) {
				// //System.out.println("CPI_CO_INS_ROUTE_TO_BACK
				// case:"+formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK"));
				if (formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK") != null
						&& formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK").equalsIgnoreCase("COPS_Cpu_Assignment")) {
					// //System.out.println("CPI_CO_INS_ROUTE_TO_BACK if
					// case:"+formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK"));
					formObject.setNGListIndex("CPI_SEND_TO", 0);
					formObject.setNGEnable("CPI_SEND_TO", false);
					formObject.setNGLocked("CPI_SEND_TO", false);
				} else {
					// //System.out.println("CPI_SEND_TO else
					// case:"+formObject.getNGValue("CPI_SEND_TO"));
					formObject.setNGEnable("CPI_SEND_TO", true);
					formObject.setNGLocked("CPI_SEND_TO", true);
				}
			}
			if (pControlName.equalsIgnoreCase("CPI_SEND_TO")) {
				if (formObject.getNGValue("CPI_SEND_TO") != null
						&& (formObject.getNGValue("CPI_SEND_TO").equalsIgnoreCase("CPU Customer Clarification")
								|| formObject.getNGValue("CPI_SEND_TO").equalsIgnoreCase("COPS_Policy_Print"))) // added
																												// due
																												// to
																												// CPI
																												// Alternate
																												// Inwarding
																												// Process
																												// 4.0
				{
					// //System.out.println("CPI_SEND_TO
					// case:"+formObject.getNGValue("CPI_SEND_TO"));
					formObject.setNGListIndex("CPI_CO_INS_ROUTE_TO_BACK", 0);
					formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", false);
					formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", false);
				} else {
					// //System.out.println("CPI_SEND_TO else
					// case:"+formObject.getNGValue("CPI_SEND_TO"));
					formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", true);
					formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", true);
				}
			}
		}
		/**** ENd CR-8001-70893 Marine CR *********************************/
		/****
		 * End CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
		 ********/
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
				|| pEventName.equalsIgnoreCase("DBCLICK"))
				&& pControlName.equalsIgnoreCase("CPI_RM_ID")
				&& (lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
						|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr"))
				&& !(formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))) { // CPI
																								// URN
																								// CR
																								// 8001-61339
																								// Multiple
																								// Changes
																								// CR
																								// //CR-8001-70893
																								// Marine
																								// CR
			String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
			String sQuery = "select RMEMAIL from Ng_Lombard_Emp_Detail where rmid='" + sCPI_RM_ID + "'";
			//////// //System.out.println("CPI_RM_EMAILID :" + sQuery);
			ArrayList getRMEmailId = formObject.getNGDataFromDataSource(sQuery, 1);
			String s_RMEmailId = (getRMEmailId.get(0)).toString();
			s_RMEmailId = s_RMEmailId.substring(s_RMEmailId.indexOf("[") + 1, s_RMEmailId.indexOf("]"));
			//////// //System.out.println("s_RMEmailId: " + s_RMEmailId);
			formObject.setNGValue("CPI_RM_EMAILID", s_RMEmailId);
		}
		/* CR-OMCPI-1314-03 CPU DataWashing End */

		/*************** Start CR-OMCPI-1314-04 URN No *****************/
		if ((pEventName.equalsIgnoreCase("CHANGE")) && pControlName.equalsIgnoreCase("CPI_URN_UPD_STATUS")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("BSG_QC"))) { // Quote
																			// BSG_QC
																			// URN
																			// generate
																			// Suraj
			String urnno = formObject.getNGValue("CPI_LEADER_URN_NO");
			String urnStatus = formObject.getNGValue("CPI_URN_UPD_STATUS");
			String coinsurance = formObject.getNGValue("CPI_COINSURANCE");
			//////// //System.out.println("urnStatus: " + urnStatus);
			//////// //System.out.println("urnno====== " + urnno);
			if (urnStatus != null && !urnStatus.equals("") && urnStatus.equalsIgnoreCase("success")) {
				//////// //System.out.println("urnStatus button desiabled ");
				if (coinsurance != null && coinsurance.equalsIgnoreCase("Leader")) {
					//////// //System.out.println("Only Leader Case ");
					formObject.setNGEnable("Gen_Urn_No", false);
					enableDesiableURNFields("Leader", false);
				}

			}
		}
		if ((pEventName.equalsIgnoreCase("CHANGE")) && pControlName.equalsIgnoreCase("CPI_LEADER_URN_NO")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("BSG_QC"))) { // Quote
																			// BSG_QC
																			// URN
																			// generate
																			// Suraj
			String urnno = formObject.getNGValue("CPI_LEADER_URN_NO");
			String urnStatus = formObject.getNGValue("CPI_URN_UPD_STATUS");
			//////// //System.out.println("urnStatus: " + urnStatus);
			//////// //System.out.println("urnno====== " + urnno);
			if ((!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
					&& !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))
					&& formObject.getNGValue("CPI_COINSURANCE").equalsIgnoreCase("Follower")) {
				//////// //System.out.println("urnStatus button desiabled ");
				formObject.setNGValue("CPI_URN_UPD_STATUS", "success");
			}
		}
		/*************** End CR-OMCPI-1314-04 URN No *******************/

		/***** Quote BSG_QC URN generate Suraj *********/
		/*
		 * if ((pEventName.equalsIgnoreCase("CHANGE")) &&
		 * pControlName.equalsIgnoreCase("CPI_URN_UPD_STATUS") &&
		 * lstrActivityName.equalsIgnoreCase("BSG_QC")) { ////////
		 * //System.out.println("Quote BSG_QC URN generate Suraj");
		 * 
		 * String urnno = formObject.getNGValue("CPI_LEADER_URN_NO"); String
		 * urnStatus = formObject.getNGValue("CPI_URN_UPD_STATUS"); String
		 * coinsurance = formObject.getNGValue("CPI_COINSURANCE"); ////////
		 * //System.out.println("urnStatus: " + urnStatus); ////////
		 * //System.out.println("urnno====== " + urnno); if (urnStatus != null
		 * && !urnStatus.equals("") && urnStatus.equalsIgnoreCase("success")) {
		 * //////// //System.out.println("urnStatus button desiabled "); if
		 * (coinsurance != null && coinsurance.equalsIgnoreCase("Leader")) {
		 * //////// //System.out.println("Only Leader Case ");
		 * formObject.setNGEnable("Gen_Urn_No", false);
		 * enableDesiableURNFields("Leader", false); }
		 * 
		 * } } if ((pEventName.equalsIgnoreCase("CHANGE")) &&
		 * pControlName.equalsIgnoreCase("CPI_LEADER_URN_NO") &&
		 * lstrActivityName.equalsIgnoreCase("BSG_QC")) { String urnno =
		 * formObject.getNGValue("CPI_LEADER_URN_NO"); String urnStatus =
		 * formObject.getNGValue("CPI_URN_UPD_STATUS"); ////////
		 * //System.out.println("urnStatus: " + urnStatus); ////////
		 * //System.out.println("urnno====== " + urnno); if
		 * ((!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase(
		 * "Endorsement") && !formObject.getNGValue("CPI_co_insurance_status").
		 * equalsIgnoreCase("Co Insurance")) &&
		 * formObject.getNGValue("CPI_COINSURANCE").equalsIgnoreCase("Follower")
		 * ) { //////// //System.out.println("urnStatus button desiabled ");
		 * formObject.setNGValue("CPI_URN_UPD_STATUS", "success"); } }
		 */
		/***** End Quote BSG_QC URN generate Suraj *********/

		//////// //System.out.println("0Validation CR 15: ");
		// ================== ClientInformation Validation on Tab
		//////// =====================
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
				|| pEventName.equalsIgnoreCase("DBCLICK") && (pControlName.equalsIgnoreCase("CPI_PRIMARY_VERTICAL")
						|| pControlName.equalsIgnoreCase("CPI_PRIMARY_SUB_VERTICAL")
						|| pControlName.equalsIgnoreCase("CPI_SECONDARY_VERTICAL")
						|| pControlName.equalsIgnoreCase(" CPI_SECONDARY_SUB_VERTICAL")))
				&& (lstrActivityName.equalsIgnoreCase("Endorsement") || (lstrActivityName
						.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")/* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification")/*
														 * CR-OMCPI-1314-03 CPU
														 * DataWashing
														 */)
						|| lstrActivityName.equalsIgnoreCase("RM_Green_File"))) {
			Validate_ClientInformation(pEventName, pControlName, pControlValue, pReserved);
		}
		// ================== End ClientInformation Validation on Tab
		// =================

		// ================== CR 15 =====================
		//////// //System.out.println("Validation CR 15: ");
		/*****************************
		 * CR 28 by satish
		 *****************************/
		/**
		 * Specified Person is enabled if Primary vertical value is SME or CSG
		 **/
		/******
		 * CR-OMCPI-1314-02 FIG COB CR (Added FIG in Primary_vertical)
		 ******/
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
				|| pEventName.equalsIgnoreCase("DBCLICK"))
				&& (pControlName.equalsIgnoreCase("CPI_PRIMARY_SUB_VERTICAL")
						|| pControlName.equalsIgnoreCase("CPI_SOURCE_NAME")
						|| pControlName.equalsIgnoreCase("CPI_PRIMARY_VERTICAL")
						|| pControlName.equalsIgnoreCase("CPI_BUSINESS_TYPE")
						|| pControlName.equalsIgnoreCase("CPI_IBANK_AGENT"))
				&& (lstrActivityName.equalsIgnoreCase("Endorsement") || (lstrActivityName
						.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing")/* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification")/*
														 * CR-OMCPI-1314-03 CPU
														 * DataWashing
														 */)
						|| lstrActivityName.equalsIgnoreCase("RM_Green_File"))) {
			//////// //System.out.println("1Validation CR 15: ");
			//////// //System.out.println("1.Validation CR 28:
			//////// Validate_Specified_Person");
			Validate_Specified_Person(pEventName, pControlName, pControlValue, pReserved, false);
		}
		/***************************
		 * End CR 28 by satish
		 ****************************/
		//////// //System.out.println("End Validation CR 15: ");
		// ================== End CR 15 =================

		// ===================== CR 2 Quote Sys=================
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
				|| pEventName.equalsIgnoreCase("DBCLICK"))
				&& ((pControlName.equalsIgnoreCase("CORP_PRIMARY_SUB_VERTICAL")
						|| pControlName.equalsIgnoreCase("CORP_SOURCE_NAME")
						|| pControlName.equalsIgnoreCase("CORP_PRIMARY_VERTICAL"))
						&& (lstrActivityName.equalsIgnoreCase("BSG_QC")))
				&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
			//////// //System.out.println("1Validation CR 15: ");
			Validate_Specified_Person(pEventName, pControlName, pControlValue, pReserved, true);
		}
		// ===================== End CR 2 Quote Sys=================

		// ================== RM ID Validation on Tab =====================

		/********************** CR18### *****************************/
		if ((pEventName.equalsIgnoreCase("LOSTFOCUS")
				&& (pControlName.equalsIgnoreCase("CPI_RM_ID") || pControlName.equalsIgnoreCase("TXT_RM_ID")))
				&& (lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
						|| lstrActivityName.equalsIgnoreCase(
								"CPUCustClarification") /*
														 * CR 46 CPU DataWashing
														 */
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification")/*
														 * CR-OMCPI-1314-03 CPU
														 * DataWashing
														 */
						|| lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase(
								"RM_Clarification")/*
													 * )) //satish
													 */
						|| lstrActivityName.equalsIgnoreCase("Co_Insurance"))) // satish
		{
			//////// //System.out.println("inside RM f3");
			Validate_RM_ID(pEventName, pControlName, pControlValue, pReserved);
		}
		// ================== End RM ID Validation on Tab =================
		/********************** End CR18### *****************************/
		/**************** CR 18 ## ********************/
		// satish
		if ((pEventName.equalsIgnoreCase("LOSTFOCUS") && (pControlName.equalsIgnoreCase("CPI_RM_Name")))
				&& (lstrActivityName.equalsIgnoreCase("Co_Insurance"))) {
			//////// //System.out.println("inside RM Name f3");
			Validate_RM_Name(pEventName, pControlName, pControlValue, pReserved);
		}
		// satish

		if (pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("CLICK")
				|| pEventName.equalsIgnoreCase("DBCLICK") || pEventName.equalsIgnoreCase("KeyPress(F3)")) {
			//////// //System.out.println("rohit:::" + pEventName);

			// ************ CR 8 ***************
			if ((lstrActivityName.equalsIgnoreCase("Endorsement")
					/* CR 46 CPU DataWashing */ || lstrActivityName.equalsIgnoreCase("CPU_Assignment")
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")/* end CR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification") || lstrActivityName.equalsIgnoreCase(
							"COPS_Policy_Endr")/*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing //CR-8001-70893
												 * Marine CR
												 */)
					&& pControlName.equalsIgnoreCase("CPI_TYPE_OF_ENDORSEMENT")) {
				//////// //System.out.println("CPI_TYPE_OF_ENDORSEMENT Click
				//////// Called 1: ");
				formObject.setNGEnable("END_PRODUCT_NAME", true);
				Endorsement_Type_Populate(lstrActivityName, pControlName, pControlValue);
				//////// //System.out.println("CPI_TYPE_OF_ENDORSEMENT Click
				//////// Populated: ");
			}
			// ************END CR 8 *************** /
			/*
			 * CR-OMCPI-1314-03 CPU DataWashing Start - commenting following
			 * code
			 */
			/*******************************
			 * CR 46 CPU DataWashing
			 ****************************/
			/*
			 * if(lstrActivityName.equalsIgnoreCase("Endorsement") &&
			 * pControlName.equalsIgnoreCase("CPI_PRODUCT_NAME")) {
			 * if(formObject.getNGValue("CPI_DATAWASHING_STATUS").
			 * equalsIgnoreCase("1") &&
			 * !formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase(""))
			 * { ////////
			 * //System.out.println("Inside if for CR 46 condition 3 : ");
			 * formObject.setNGLocked("CPI_Route_To",true);
			 * formObject.setNGEnable("CPI_Route_To",true); } else { ////////
			 * //System.out.println("Inside else for CR 46 condition 3 : ");
			 * formObject.setNGListIndex("CPI_Route_To",0);
			 * formObject.setNGLocked("CPI_Route_To",false);
			 * formObject.setNGEnable("CPI_Route_To",false); } }
			 */
			/*****************************
			 * End CR 46 CPU DataWashing
			 **************************/
			/* CR-OMCPI-1314-03 CPU DataWashing END */
			/*******************************
			 * CR 44 by satish
			 ****************************/
			if ((lstrActivityName.equalsIgnoreCase("Endorsement") || lstrActivityName.equalsIgnoreCase("CPU_Assignment")
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_Data_Washing") /* CR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_DW_Clarification")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 */)
					&& (pControlName.equalsIgnoreCase("CPI_EXTERNAL_ENDORSEMENT_TYPE")
							|| pControlName.equalsIgnoreCase("CPI_iNTERNAL_ENDORSEMENT_TYPE"))) {
				//////// //System.out.println("Inside CR 44: ");
				if (formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE").equalsIgnoreCase("Nil Endorsement")
						|| formObject.getNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE").equalsIgnoreCase("Nil Endorsement")) {
					formObject.setNGValue("CPI_toTAL_PREMIUM", "");
					formObject.setNGLocked("CPI_toTAL_PREMIUM", false);
					formObject.setNGEnable("CPI_toTAL_PREMIUM", false);
				} else {
					formObject.setNGLocked("CPI_toTAL_PREMIUM", true);
					formObject.setNGEnable("CPI_toTAL_PREMIUM", true);
				}

				if (formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE").equalsIgnoreCase("Reinstatement Premium")) {
					formObject.setNGLocked("CPI_CLAIM_NO", true);
					formObject.setNGEnable("CPI_CLAIM_NO", true);
				} else {
					formObject.setNGValue("CPI_CLAIM_NO", "");
					formObject.setNGLocked("CPI_CLAIM_NO", false);
					formObject.setNGEnable("CPI_CLAIM_NO", false);
				}
			}

			if ((lstrActivityName.equalsIgnoreCase("Endorsement") || lstrActivityName.equalsIgnoreCase("CPU_Assignment")
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_Data_Washing") /* CR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_DW_Clarification")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 */
					|| lstrActivityName.equalsIgnoreCase("RM_Green_File"))
					&& pControlName.equalsIgnoreCase("CPI_coINSURANCE")) {
				//////// //System.out.println("CPI_coINSURANCE Click Called 1:
				//////// ");
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")
						|| formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")) {
					formObject.setNGLocked("CPI_OUR_SHARE_PREMIUM", true);
					formObject.setNGEnable("CPI_OUR_SHARE_PREMIUM", true);
				} else {
					formObject.setNGValue("CPI_OUR_SHARE_PREMIUM", "");
					formObject.setNGLocked("CPI_OUR_SHARE_PREMIUM", false);
					formObject.setNGEnable("CPI_OUR_SHARE_PREMIUM", false);
				}
				/***************
				 * Start CR-OMCPI-1314-04 URN No
				 *****************/
				if ((lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement"))
						&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")
								|| formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
					//////// //System.out.println("satish CPI_coINSURANCE event
					//////// click");
					String urnDateStatus = "";
					if (formObject.getNGValue("CPI_Leader_URN_No") != null
							&& !formObject.getNGValue("CPI_Leader_URN_No").equalsIgnoreCase("")) {
						formObject.setNGValue("CPI_Leader_URN_No", "");
					}
					if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")) {
						// formObject.setNGValue("CPI_Leader_URN_No","");
						enableDesiableURNFields("Leader", true);
					} else if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")) {
						enableDesiableURNFields("Follower", true);
						String fieldName = "";
						if (formObject.getWFActivityName().equalsIgnoreCase("Endorsement")) {
							fieldName = "CPI_eNDORSEMENT_EFFECTIVE_DATE";
						} else if (formObject.getWFActivityName().equalsIgnoreCase("RM_Green_File")) {
							fieldName = "CPI_RISK_INSPECTION_DATE";
						}

						if (fieldName != null && !fieldName.equalsIgnoreCase("")) {
							//////// //System.out.println("Follower
							//////// urnDateStatus1==" + urnDateStatus);
							if (formObject.getNGValue(fieldName) != null
									&& !formObject.getNGValue(fieldName).equals("")) {
								urnDateStatus = getFinancialYear(formObject.getNGValue(fieldName));
								if (urnDateStatus != null && urnDateStatus.equalsIgnoreCase("0")) {
									//////// //System.out.println("Follower
									//////// urnDateStatus2==" + urnDateStatus);
									formObject.setNGValue("CPI_Leader_URN_No", "");
									formObject.setNGLocked("CPI_Leader_URN_No", false);
								}

							}

						}

					} else if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("No Co-Insurance")) {
						enableDesiableURNFields("No Co-Insurance", true);
					} else {
						formObject.setNGEnable("Gen_Urn_No", false);
					}

				}
				/***************
				 * End CR-OMCPI-1314-04 URN No
				 *******************/
			}
			/****************************
			 * end CR 44 by satish
			 ***************************/

			// to check follower or no co-insurance case. if follower , then
			// enabling fields or disable
			/***** Quote BSG_QC URN generate Suraj *********/
			/*
			 * if (lstrActivityName.equalsIgnoreCase("BSG_QC") &&
			 * formObject.getNGValue("CPI_quOTE_SYS_ID") !=null &&
			 * !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
			 * && !(formObject.getNGValue("CPI_co_insurance_status").
			 * equalsIgnoreCase("Co Insurance") ||
			 * formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase(
			 * "Endorsement")) &&
			 * pControlName.equalsIgnoreCase("CPI_coINSURANCE") &&
			 * pEventName.equalsIgnoreCase("CHANGE")) { ////////
			 * //System.out.println("Quote BSG_QC URN generate Suraj");
			 * 
			 * //////// //System.out.
			 * println("satish CPI_coINSURANCE event click in BSG_QC"); String
			 * urnDateStatus = ""; if
			 * (formObject.getNGValue("CPI_Leader_URN_No") != null &&
			 * !formObject.getNGValue("CPI_Leader_URN_No").equalsIgnoreCase(""))
			 * { formObject.setNGValue("CPI_Leader_URN_No", ""); } if
			 * (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase(
			 * "Leader")) { //formObject.setNGValue("CPI_Leader_URN_No","");
			 * enableDesiableURNFields("Leader", true); } else if
			 * (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase(
			 * "Follower")) { enableDesiableURNFields("Follower", true); String
			 * fieldName = ""; if
			 * (formObject.getWFActivityName().equalsIgnoreCase("BSG_QC")) {
			 * fieldName = "CPI_RISK_INSPECTION_DATE"; }
			 * 
			 * if (fieldName != null && !fieldName.equalsIgnoreCase("")) {
			 * //////// //System.out.println("Follower urnDateStatus1==" +
			 * urnDateStatus); if (formObject.getNGValue(fieldName) != null &&
			 * !formObject.getNGValue(fieldName).equals("")) { urnDateStatus =
			 * getFinancialYear(formObject.getNGValue(fieldName)); if
			 * (urnDateStatus != null && urnDateStatus.equalsIgnoreCase("0")) {
			 * //////// //System.out.println("Follower urnDateStatus2==" +
			 * urnDateStatus); formObject.setNGValue("CPI_Leader_URN_No", "");
			 * formObject.setNGLocked("CPI_Leader_URN_No", false); }
			 * 
			 * }
			 * 
			 * }
			 * 
			 * } else if (formObject.getNGValue("CPI_coINSURANCE").
			 * equalsIgnoreCase("No Co-Insurance")) {
			 * enableDesiableURNFields("No Co-Insurance", true); } else {
			 * formObject.setNGEnable("Gen_Urn_No", false); }
			 * 
			 * 
			 * }
			 */
			/***** End Quote BSG_QC URN generate Suraj *********/

			/*************** Start CR-OMCPI-1314-04 URN No *****************/
			if ((lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement"))
					&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")
							|| formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
					&& (pControlName.equalsIgnoreCase("CPI_eNDORSEMENT_EFFECTIVE_DATE")
							|| pControlName.equalsIgnoreCase("CPI_RISK_INSPECTION_DATE"))) {
				String rmAndEndDateStatus = "";
				if ((formObject.getNGValue("CPI_coINSURANCE") != null
						&& formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower"))
						&& (pControlName.equalsIgnoreCase("CPI_eNDORSEMENT_EFFECTIVE_DATE")
								|| pControlName.equalsIgnoreCase("CPI_RISK_INSPECTION_DATE"))) {
					rmAndEndDateStatus = getFinancialYear(formObject.getNGValue(pControlName));
					//////// //System.out.println("Endorsement
					//////// rmAndEndDateStatus1==" + rmAndEndDateStatus);
					if (rmAndEndDateStatus != null && rmAndEndDateStatus.equalsIgnoreCase("0")) {
						//////// //System.out.println("Endorsement
						//////// rmAndEndDateStatus2==" + rmAndEndDateStatus);
						formObject.setNGValue("CPI_Leader_URN_No", "");
						formObject.setNGLocked("CPI_Leader_URN_No", false);
					} else {
						formObject.setNGLocked("CPI_Leader_URN_No", true);
					}
				}

			}
			/*************** End CR-OMCPI-1314-04 URN No *******************/
			// ************ CR 12 ***************
			if ((lstrActivityName.equalsIgnoreCase("RM_Clarification") || lstrActivityName.equalsIgnoreCase(
					"CPUCustClarification")/* CR 46 CPU DataWashing */)
					&& pControlName.equalsIgnoreCase("END_PRODUCT_TYPE")) {
				//////// //System.out.println("END_PRODUCT_TYPE Click Called 1:
				//////// ");
				formObject.setNGEnable("END_PRODUCT_NAME", true);
				//////// //System.out.println("END_PRODUCT_TYPE Click Populated:
				//////// ");
			}
			// ************END CR 12 *************** /

			// ************Added by Rohit on 03-09-2010 ***************
			if ((lstrActivityName.equalsIgnoreCase("Endorsement")
					|| lstrActivityName.equalsIgnoreCase(
							"RM_Green_File") /* CR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")/* endCR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_DW_Clarification")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 */)
					&& pControlName.equalsIgnoreCase("CPI_PRIMARY_VERTICAL")) {
				String sCPI_BRANCH_NAME = formObject.getNGValue("CPI_BRANCH_NAME");
				//////// //System.out.println("sCPI_BRANCH_NAME: " +
				//////// sCPI_BRANCH_NAME);
			}

			if ((lstrActivityName.equalsIgnoreCase("BSG_QC")) && pControlName.equalsIgnoreCase("CPI_PRIMARY_VERTICAL")
					&& (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
				String sCorp_BRANCH_NAME = formObject.getNGValue("CORP_BRANCH_NAME");
				//////// //System.out.println("sCorp_BRANCH_NAME: " +
				//////// sCorp_BRANCH_NAME);
			}

			// ************End **************************************

			if ((lstrActivityName.equalsIgnoreCase("Endorsement")
					/* CR 46 CPU DataWashing */ || lstrActivityName.equalsIgnoreCase("CPU_Assignment")
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_Data_Washing") /* end CR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
					|| lstrActivityName.equalsIgnoreCase(
							"COPS_Policy_Endr") /*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing //CR-8001-70893
												 * Marine CR
												 */
					|| lstrActivityName.equalsIgnoreCase("RM_Green_File"))
					&& (pControlName.equalsIgnoreCase("CPI_PRIMARY_SUB_VERTICAL")
							|| /****************************
								 * CR 28 by satish
								 *****************************/
							pControlName.equalsIgnoreCase("CPI_PRIMARY_VERTICAL"))
					|| pControlName.equalsIgnoreCase("CPI_BUSINESS_TYPE")
					|| pControlName.equalsIgnoreCase("CPI_IBANK_AGENT")
					|| pControlName.equalsIgnoreCase("CPI_SOURCE_NAME")
					|| pControlName.equalsIgnoreCase("CPI_NAME_OF_BROKER_AGENT")) {
				//////// //System.out.println("Validation CR 28: Inside Main
				//////// condition.");
				/******
				 * CR-OMCPI-1314-02 FIG COB CR (Added FIG in Primary_vertical
				 * and COB in Business_type)
				 ******/
				if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
						&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
								|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker")
								|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB"))) {
					//////// //System.out.println("Validation CR 28: Inside
					//////// ibank validation");
					if (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("")) {
						bBGKRGID = 0;
					}
					if (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("SEG")
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("NA")
							|| (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
									|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000"))
							|| (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
											.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
									|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000"))
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("COB")) {// CR-8001-87420
																											// Green
																											// File
																											// Digitization
						bBGKRGID = BBGKRGID(formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL"),
								formObject.getNGValue("CPI_SUB_VERTICAL_CODE")); // CR-8001-87420
																					// Green
																					// File
																					// Digitization
					} else {
						bBGKRGID = 0;
					}

					if (((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
							&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
									|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
							&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes"))
							|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
									&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB"))
									&& formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("COB"))) {
						//////// //System.out.println("Validation CR 28: Inside
						//////// ibank validation : ibank agent");
						formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", true);
						formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", true);
						formObject.setNGEnable("CPI_SOURCE_NAME", true);
						formObject.setNGEnable("CPI_CHANNEL_NAME", true);
						formObject.setNGEnable("CPI_BRANCH_NAME", true);
						formObject.setNGValue("CPI_INFRA_COMMISSION", "");
						formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", "");
						formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGValue("CPI_CIF_ID", "");
						formObject.setNGLocked("CPI_CIF_ID", false);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					} else if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
							&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
									|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
							&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("No")) {
						//////// //System.out.println("Validation CR 28: Inside
						//////// ibank validation : non ibank agent");
						formObject.setNGEnable("CPI_SOURCE_NAME", true);
						if (!formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("")) {
							//////// //System.out.println("Validation CR 28:
							//////// Inside ibank validation : non ibank agent
							//////// and source name is not null");
							formObject.setNGEnable("CPI_CHANNEL_NAME", true);
							formObject.setNGEnable("CPI_BRANCH_NAME", true);
							formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", true);
							formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", true);
							formObject.setNGLocked("CPI_INFRA_COMMISSION", true);
						} else {
							//////// //System.out.println("Validation CR 28:
							//////// Inside ibank validation : non ibank agent
							//////// and source name is null");
							formObject.setNGValue("CPI_CHANNEL_NAME", "");
							formObject.setNGValue("CPI_BRANCH_NAME", "");
							formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", "");
							formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", "");
							formObject.setNGValue("CPI_INFRA_COMMISSION", "");

							formObject.setNGEnable("CPI_CHANNEL_NAME", false);
							formObject.setNGEnable("CPI_BRANCH_NAME", false);
							formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", false);
							formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", false);
							formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
						}
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", "");
						formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGValue("CPI_CIF_ID", "");
						formObject.setNGLocked("CPI_CIF_ID", false);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					} else if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000")) // CPI
																													// –Channel
																													// Employee
																													// id–MHV
																													// 1.0
																													// CR
							// formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA"))
							// Added For CPI –Channel Employee id–MHV 1.0 CR
							&& ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
											.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
									|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
									|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000"))
									|| (pControlName.equalsIgnoreCase("CPI_PRIMARY_SUB_VERTICAL")
											&& (pControlValue.equalsIgnoreCase("KRG")
													|| pControlValue.equalsIgnoreCase("BBG"))))) // CR-8001-87420
																									// Green
																									// File
																									// Digitization
					{
						//////// //System.out.println("Validation CR 28: Inside
						//////// Existing validation");
						setBbgKrg();
						//////// //System.out.println("Validation CR 28: After
						//////// setBbgKrg function call");
					} else {
						//////// //System.out.println("Validation CR 28: Inside
						//////// ibank validation : else part");
						formObject.setNGValue("CPI_SOURCE_NAME", "");
						formObject.setNGValue("CPI_CHANNEL_NAME", "");
						formObject.setNGValue("CPI_BRANCH_NAME", "");
						// //System.out.println("Inside if 1 enable false3:");
						formObject.setNGEnable("CPI_SOURCE_NAME", false);
						formObject.setNGLocked("CPI_SOURCE_NAME", false);
						formObject.setNGEnable("CPI_BRANCH_NAME", false);
						formObject.setNGLocked("CPI_BRANCH_NAME", false);
						formObject.setNGEnable("CPI_CHANNEL_NAME", true);
						formObject.setNGLocked("CPI_CHANNEL_NAME", true);
						formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", "");
						formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", false);
						formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", "");
						formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", false);
						formObject.setNGValue("CPI_INFRA_COMMISSION", "");
						formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", "");
						formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGValue("CPI_CIF_ID", "");
						formObject.setNGLocked("CPI_CIF_ID", false);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}
				} else if (pControlName.equalsIgnoreCase("CPI_PRIMARY_SUB_VERTICAL")
						|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
						|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KEY RELATIONSHIP GROUP")
						|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")) {
					/*****************************
					 * end CR 28 by satish
					 *****************************/
					//////// //System.out.println("Validation CR 28: Inside
					//////// Existing validation");
					setBbgKrg();
					//////// //System.out.println("Validation CR 28: After
					//////// setBbgKrg function call");
				} else {
					//////// //System.out.println("Validation CR 28: Inside
					//////// ibank validation : else part");
					formObject.setNGValue("CPI_SOURCE_NAME", "");
					formObject.setNGValue("CPI_CHANNEL_NAME", "");
					formObject.setNGValue("CPI_BRANCH_NAME", "");
					// //System.out.println("Inside if 1 enable false4:");
					formObject.setNGEnable("CPI_SOURCE_NAME", false);
					formObject.setNGLocked("CPI_SOURCE_NAME", false);
					formObject.setNGEnable("CPI_BRANCH_NAME", false);
					formObject.setNGLocked("CPI_BRANCH_NAME", false);
					formObject.setNGEnable("CPI_CHANNEL_NAME", true);
					formObject.setNGLocked("CPI_CHANNEL_NAME", true);
					formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", "");
					formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", false);
					formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", "");
					formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", false);
					formObject.setNGValue("CPI_INFRA_COMMISSION", "");
					formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
				}
				/****
				 * End CR-OMCPI-1314-02 FIG COB CR (Added FIG in
				 * Primary_vertical and COB in Business_type)
				 ****/
			}

			// ===Yogendra ==================

			if ((lstrActivityName.equalsIgnoreCase("BSG_QC"))
					&& pControlName.equalsIgnoreCase("CORP_PRIMARY_SUB_VERTICAL")
					&& (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
				if (pControlValue.equalsIgnoreCase("KRG") || pControlValue.equalsIgnoreCase("BBG")) {

					bBGKRGID = BBGKRGID(pControlValue, formObject.getNGValue("CPI_SUB_VERTICAL_CODE")); // CR-8001-87420
																										// Green
																										// File
																										// Digitization;
					//////// //System.out.println(bBGKRGID);
					// ********* Verma 22122010 ====================
					//////// //System.out.println("Verma 1 ");
					if (pControlValue.equalsIgnoreCase("KRG")) {
						//////// //System.out.println("Verma 1 KRG ");
						formObject.setNGLocked("CORP_CHANNEL_EMPLOYEE_ID", true);
						formObject.setNGEnable("CORP_SOURCE_NAME", true);
						//////// //System.out.println("SK Quote SYS ID: " +
						//////// formObject.getNGValue("CPI_quote_SYS_ID"));
						formObject.setNGEnable("CORP_CHANNEL_NAME", false);
						formObject.setNGEnable("CORP_BRANCH_NAME", false);

						formObject.setNGLocked("CORP_SOURCE_NAME", false);
						formObject.setNGLocked("CORP_CHANNEL_NAME", false);
						formObject.setNGLocked("CORP_BRANCH_NAME", false);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGLocked("CORP_PRIVILEGE_BANKER_CODE", true);
						formObject.setNGLocked("CORP_CIF_ID", true);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}
					if (pControlValue.equalsIgnoreCase("BBG")) {
						//////// //System.out.println("Verma 1 BBG ");
						formObject.setNGLocked("CORP_CHANNEL_EMPLOYEE_ID", true);
						formObject.setNGEnable("CORP_SOURCE_NAME", true);
						formObject.setNGEnable("CORP_CHANNEL_NAME", true);
						formObject.setNGEnable("CORP_BRANCH_NAME", true);

						formObject.setNGLocked("CORP_SOURCE_NAME", false);
						formObject.setNGLocked("CORP_CHANNEL_NAME", false);
						formObject.setNGLocked("CORP_BRANCH_NAME", false);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGLocked("CORP_PRIVILEGE_BANKER_CODE", true);
						formObject.setNGLocked("CORP_CIF_ID", true);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}
				} else {
					formObject.setNGValue("CORP_CHANNEL_EMPLOYEE_ID", "");
					formObject.setNGEnable("CORP_SOURCE_NAME", false);
					formObject.setNGLocked("CORP_SOURCE_NAME", false);
					formObject.setNGEnable("CORP_BRANCH_NAME", false);
					formObject.setNGLocked("CORP_BRANCH_NAME", false);
					formObject.setNGEnable("CORP_CHANNEL_NAME", false);
					formObject.setNGLocked("CORP_CHANNEL_NAME", false);
					formObject.setNGLocked("CORP_CHANNEL_EMPLOYEE_ID", false);
					/***************************
					 * PID-CPI process changes
					 ***************************/
					formObject.setNGValue("CORP_PRIVILEGE_BANKER_CODE", "");
					formObject.setNGLocked("CORP_PRIVILEGE_BANKER_CODE", false);
					formObject.setNGValue("CORP_CIF_ID", "");
					formObject.setNGLocked("CORP_CIF_ID", false);
					/***********************
					 * End PID-CPI process changes
					 ***************************/

				}
			}
			// ===Yogendra ==================

			//////// //System.out.println("1CheckEnableOnChange ");
			//////// //System.out.println("lstrActivityName::
			//////// "+lstrActivityName);
			//////// //System.out.println("pControlName:: "+pControlName);
			CheckEnableOnChange(lstrActivityName, pControlName);
			//////// //System.out.println("2CheckEnableOnChange ");

			if (pControlName.equalsIgnoreCase("Btn_History")) {
				url = "ShowHistory.jsp?Process=CPI&ActivityName=" + lstrActivityName + "&Pid="
						+ xmlParserGenData.getValueOf("ProcessInstanceId");
				showPage(url);
			}

			/*****************
			 * CR-OMCPI-1314-03 Mail_Management_for_CPU_Datawashing Start
			 **********/
			if (pControlName.equalsIgnoreCase("Btn_MailHistory")) {
				url = "ShowMailHistory.jsp?Process=CPI&ActivityName=" + lstrActivityName + "&Pid="
						+ xmlParserGenData.getValueOf("ProcessInstanceId");
				showMailPage(url, "viewmail");
			}
			if (pControlName.equalsIgnoreCase("Btn_MailCompose")) {
				url = "MailCompose.jsp?Process=CPI&ActivityName=" + lstrActivityName + "&Pid="
						+ xmlParserGenData.getValueOf("ProcessInstanceId");
				showMailPage(url, "replymail");
			}
			/*****************
			 * CR-OMCPI-1314-03 Mail_Management_for_CPU_Datawashing End
			 **********/
			/*************** Start CR-OMCPI-1314-04 URN No *****************/
			if (pControlName.equalsIgnoreCase("Gen_Urn_No")&& (lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement")|| (lstrActivityName.equalsIgnoreCase("BSG_QC")&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")&& formObject.getNGValue("CPI_quOTE_SYS_ID") != null&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) && (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement") && !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
				// int procTypeCode = 0;
				int procTypeCode = -1; // NEW FORMAT URN CR-8001-56225
				String urnNum = "";
				HashMap<String,String> hm= new  HashMap<String, String>();
				System.out.println("satish generateURNNo calling procTypeCode "+procTypeCode);
				String leaderNo = formObject.getNGValue("CPI_Leader_URN_No");
				String coin_dd = formObject.getNGValue("CPI_CoInsurance");
				String extEndrType = "";
				if (lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("BSG_QC")) {
					// procTypeCode = 1; // for all RM_Green_File cases
					procTypeCode = 0; // for all RM_Green_File cases //NEW FORMAT URN CR-8001-56225
					System.out.println("in bsg_qc/rm_green proctype new format "+procTypeCode);
				} else if (lstrActivityName.equalsIgnoreCase("Endorsement")) {
					extEndrType = formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE");
					if (extEndrType != null && extEndrType.equalsIgnoreCase("Extension endorsement")) {
						// procTypeCode = 1; // for all Extension endorsement
						procTypeCode = 0; // for all Extension endorsement //NEW FORMAT URN CR-8001-56225
					} else {
						// procTypeCode = 2;// for all Endorsement cases
						procTypeCode = 1;// for all Endorsement cases //NEW FORMAT URN CR-8001-56225
					}
				}
				if (leaderNo != null && !leaderNo.equals("")) {
				} else if (coin_dd != null && coin_dd.equalsIgnoreCase("Leader")
						&& (leaderNo == null || leaderNo.equals(""))) {
					//urnNum = generateURNNo(lstrActivityName); //commented for URN Phase-II CR
					String sProd_Irdacode=formObject.getNGValue("CPI_PRODUCT_IRDACODE");//urn yogesh
					String sRiskInspection_date=DateToString(formObject.getNGValue("CPI_RISK_INSPECTION_DATE"));
					System.out.println("sRiskInspection_date "+sRiskInspection_date);
					String sCoinsurance=formObject.getNGValue("CPI_COINSURANCE");
					String sPolicy_no=formObject.getNGValue("CPI_POLICY_NO");
					String sLeader_urn_no=formObject.getNGValue("CPI_LEADER_URN_NO");
					String sEndorsementflag=formObject.getNGValue("CPI_PORCESS_TYPE");
					String sTransaction_type=formObject.getNGValue("CPI_TRANSACTION_TYPE");
					Date now = new Date();
					DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");					
					String requestedDateTime = df.format(now);
					System.out.println("requestedDateTime"+requestedDateTime);
					String str=SoapProcessing();
					System.out.println("str "+str);
					
					/*System.out.println("sat Final urnNum=====" +urnNum);
					if (urnNum == "0" || urnNum.equals("0")) {
						System.out.println("Dependancy Field Validation Error RM_Id or RiskInspection date or product name");
					} else if (urnNum == "1" || urnNum.equals("1")) {
						System.out.println("classof busines or serialNo or offCode Field validation error");
					} else if (urnNum != "0" && !urnNum.equals("1")) {
						String urn[] = urnNum.split("~");
						if (urn != null && urn.length > 0) {
							System.out.println("s[0]=====" + urn[0] +"s[1]=====" + urn[1]);
							System.out.println("getUserId==" +formObject.getUserName());
							String userId = formObject.getUserName();
							System.out.println("userId==" + userId);
							String cabName = formObject.getWFEngineName();
							System.out.println("cabName==" +cabName);

							// url="URNGenUpdate.jsp?Process=CPI&ActivityName="+lstrActivityName+"&Pid="+xmlParserGenData.getValueOf("ProcessInstanceId")+"&URNNo="+urn[0]+"&proctype="+procTypeCode+"&serialno="+urn[1]+"&userId="+userId;
							url = "URNGenUpdate.jsp?Process=CPI&ActivityName=" + lstrActivityName + "&Pid="
									+ xmlParserGenData.getValueOf("ProcessInstanceId") + "&URNNo=" + urn[0]
									+ "&proctype=" + procTypeCode + "&serialno=" + urn[1] + "&userId=" + userId
									+ "&cabinetName=" + cabName;
							//////// //System.out.println("sat url=====" + url);
							showMailPage(url, "urnnumberupdate");
							String updateStatus = formObject.getNGValue("CPI_Leader_URN_No");
							//////// //System.out.println("updateStatus=====" +
							//////// updateStatus);
						}

					}*/
				}
			}
			/*************** End CR-OMCPI-1314-04 URN No *******************/

			/***** Quote BSG_QC URN generate Suraj *********/
			/*
			 * if (pControlName.equalsIgnoreCase("Gen_Urn_No") &&
			 * lstrActivityName.equalsIgnoreCase("BSG_QC") &&
			 * formObject.getNGValue("CPI_Process_Type").
			 * equalsIgnoreCase("Corporate Policy Insurance") &&
			 * formObject.getNGValue("CPI_quOTE_SYS_ID") !=null &&
			 * !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
			 * &&
			 * (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase(
			 * "Endorsement") &&
			 * !formObject.getNGValue("CPI_co_insurance_status").
			 * equalsIgnoreCase("Co Insurance"))) { ////////
			 * //System.out.println("Quote BSG_QC URN generate Suraj");
			 * 
			 * int procTypeCode = 1; // for all bsg_qc quote cases String urnNum
			 * = ""; ////////
			 * //System.out.println("satish generateURNNo calling "); String
			 * leaderNo = formObject.getNGValue("CPI_Leader_URN_No"); String
			 * coin_dd = formObject.getNGValue("CPI_CoInsurance"); String
			 * extEndrType = ""; /*if
			 * (lstrActivityName.equalsIgnoreCase("RM_Green_File")) {
			 * procTypeCode = 1; // for all RM_Green_File cases } else if
			 * (lstrActivityName.equalsIgnoreCase("Endorsement")) { extEndrType
			 * = formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE"); if
			 * (extEndrType != null &&
			 * extEndrType.equalsIgnoreCase("Extension endorsement")) {
			 * procTypeCode = 1; // for all Extension endorsement } else {
			 * procTypeCode = 2;// for all Endorsement cases } }
			 */

			/*
			 * if (leaderNo != null && !leaderNo.equals("")) { } else if
			 * (coin_dd != null && coin_dd.equalsIgnoreCase("Leader") &&
			 * (leaderNo == null || leaderNo.equals(""))) { urnNum =
			 * generateURNNo(lstrActivityName); ////////
			 * //System.out.println("sat Final urnNum=====" + urnNum); if
			 * (urnNum == "0" || urnNum.equals("0")) { //////// //System.out.
			 * println("Dependancy Field Validation Error RM_Id or RiskInspection date or product name"
			 * ); } else if (urnNum == "1" || urnNum.equals("1")) { ////////
			 * //System.out.
			 * println("classof busines or serialNo or offCode Field validation error"
			 * ); } else if (urnNum != "0" && !urnNum.equals("1")) { String
			 * urn[] = urnNum.split("~"); if (urn != null && urn.length > 0) {
			 * //////// //System.out.println("s[0]=====" + urn[0] + "s[1]====="
			 * + urn[1]); //////// //System.out.println("getUserId==" +
			 * formObject.getUserName()); String userId =
			 * formObject.getUserName(); ////////
			 * //System.out.println("userId==" + userId); String cabName =
			 * formObject.getWFEngineName(); ////////
			 * //System.out.println("cabName==" + cabName);
			 * 
			 * //url="URNGenUpdate.jsp?Process=CPI&ActivityName="+
			 * lstrActivityName+"&Pid="+xmlParserGenData.getValueOf(
			 * "ProcessInstanceId")+"&URNNo="+urn[0]+"&proctype="+procTypeCode+
			 * "&serialno="+urn[1]+"&userId="+userId; url =
			 * "URNGenUpdate.jsp?Process=CPI&ActivityName=" + lstrActivityName +
			 * "&Pid=" + xmlParserGenData.getValueOf("ProcessInstanceId") +
			 * "&URNNo=" + urn[0] + "&proctype=" + procTypeCode + "&serialno=" +
			 * urn[1] + "&userId=" + userId + "&cabinetName=" + cabName;
			 * //////// //System.out.println("sat url=====" + url);
			 * showMailPage(url, "urnnumberupdate"); String updateStatus =
			 * formObject.getNGValue("CPI_Leader_URN_No"); ////////
			 * //System.out.println("updateStatus=====" + updateStatus); }
			 * 
			 * } } }
			 */
			/***** End Quote BSG_QC URN generate Suraj *********/
			// ============ Verma 22122010
			if ((lstrActivityName.equalsIgnoreCase("Endorsement") || lstrActivityName.equalsIgnoreCase("CPU_Assignment")
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")/* CR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
					|| lstrActivityName.equalsIgnoreCase(
							"COPS_Policy_Endr")/*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing //CR-8001-70893
												 * Marine CR
												 */
					|| lstrActivityName.equalsIgnoreCase("RM_Green_File"))
					&& pControlName.equalsIgnoreCase("CPI_SOURCE_NAME")) {
				//////// //System.out.println("Verma 33 enable CPI_SOURCE_NAME
				//////// Click ");
				formObject.setNGEnable("CPI_CHANNEL_NAME", true);
				formObject.setNGEnable("CPI_BRANCH_NAME", true);
				// BBGKRGPopulate(lstrActivityName,pControlName,pControlValue);
				//////// //System.out.println("Verma calling CPI_SOURCE_NAME
				// Click ");
				if ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
						|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KEY RELATIONSHIP GROUP")
						|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000"))
						&& (formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("--Select--")
								|| formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase(""))) // CR-8001-87420
																									// Green
																									// File
																									// Digitization
				{
					//////// //System.out.println("Setting blank: ");
					formObject.setNGEnable("CPI_CHANNEL_NAME", false);
					formObject.setNGEnable("CPI_BRANCH_NAME", false);
				}
				/*****************************
				 * CR 28 by satish
				 *****************************/
				/******
				 * CR-OMCPI-1314-02 FIG COB CR (Added FIG in Primary_vertical
				 * and COB in Business_type)
				 ******/
				if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
						&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
								|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker")
								|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB"))) {
					//////// //System.out.println("Validation CR 28: 1.Inside
					//////// Source name change event.");
					//////// //System.out.println("Validation CR 28:
					//////// CPI_SOURCE_NAME value: " + pControlValue + ".");
					if (((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
							&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
									|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
							&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes"))
							|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
									&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB"))
									&& formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("COB"))) {
						//////// //System.out.println("Validation CR 28:
						//////// 1.Inside Source name change event:
						//////// IBANK_AGENT");
						formObject.setNGEnable("CPI_CHANNEL_NAME", true);
						formObject.setNGLocked("CPI_CHANNEL_NAME", false);
						formObject.setNGEnable("CPI_BRANCH_NAME", true);
						formObject.setNGLocked("CPI_BRANCH_NAME", false);
						formObject.setNGEnable("CPI_SPECIFIED_PERSON", true);
						formObject.setNGLocked("CPI_SPECIFIED_PERSON", true); // false
																				// -
																				// CR-8001-92286
																				// Omniflow
																				// held
																				// cover
																				// letter
						formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_ID", true);
						formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_NAME", true);
						formObject.setNGValue("CPI_INFRA_COMMISSION", "");
						formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", "");
						formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGValue("CPI_CIF_ID", "");
						formObject.setNGLocked("CPI_CIF_ID", false);
						/***********************
						 * End PID-CPI process changes
						 ***************************/

					} else if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
							&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
									|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
							&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("No")) {
						//////// //System.out.println("Validation CR 28:
						//////// 1.Inside Source name change event: non
						//////// IBANK_AGENT");
						if (!formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("")) {
							formObject.setNGEnable("CPI_CHANNEL_NAME", true);
							formObject.setNGLocked("CPI_CHANNEL_NAME", false);
							formObject.setNGEnable("CPI_BRANCH_NAME", true);
							formObject.setNGLocked("CPI_BRANCH_NAME", false);
							formObject.setNGEnable("CPI_SPECIFIED_PERSON", true);
							formObject.setNGLocked("CPI_SPECIFIED_PERSON", true); // false
																					// -
																					// CR-8001-92286
																					// Omniflow
																					// held
																					// cover
																					// letter
							formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_ID", true);
							formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_NAME", true);
							formObject.setNGEnable("CPI_INFRA_COMMISSION", true);
							//////// //System.out.println("Validation CR 28:1.
							//////// Source name change event executed");
						} else {
							formObject.setNGValue("CPI_CHANNEL_NAME", "");
							formObject.setNGValue("CPI_BRANCH_NAME", "");
							formObject.setNGValue("CPI_SPECIFIED_PERSON", "");
							formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", "");
							formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", "");
							formObject.setNGValue("CPI_INFRA_COMMISSION", "");

							formObject.setNGEnable("CPI_CHANNEL_NAME", true);
							formObject.setNGLocked("CPI_CHANNEL_NAME", true);
							formObject.setNGEnable("CPI_BRANCH_NAME", false);
							formObject.setNGLocked("CPI_BRANCH_NAME", false);
							formObject.setNGEnable("CPI_SPECIFIED_PERSON", false);
							formObject.setNGLocked("CPI_SPECIFIED_PERSON", false);
							formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_ID", false);
							formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_NAME", false);
							formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
							//////// //System.out.println("Validation CR 28:2.
							//////// Source name change event executed");
						}
						/***************************
						 * PID-CPI process changes
						 ***************************/
						formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", "");
						formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGValue("CPI_CIF_ID", "");
						formObject.setNGLocked("CPI_CIF_ID", false);
						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}
				}
				/****
				 * End CR-OMCPI-1314-02 FIG COB CR (Added FIG in
				 * Primary_vertical and COB in Business_type)
				 ****/
				/***************************
				 * End CR 28 by satish
				 ***************************/
			}
			// ============ Verma 22122010 End ===========

			// =========== CR Quote SYS =============
			if ((lstrActivityName.equalsIgnoreCase("BSG_QC") && pControlName.equalsIgnoreCase("CORP_SOURCE_NAME")
					&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
					&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance"))) {
				//////// //System.out.println("Quote SYS CORP_SOURCE_NAME Click
				//////// ");
				formObject.setNGEnable("CORP_CHANNEL_NAME", true);
				formObject.setNGEnable("CORP_BRANCH_NAME", true);
				BBGKRGPopulate_QuoteSYS(lstrActivityName, pControlName, pControlValue);

				if (formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
						&& (formObject.getNGValue("CORP_SOURCE_NAME").equalsIgnoreCase("--Select--")
								|| formObject.getNGValue("CORP_SOURCE_NAME").equalsIgnoreCase(""))) {
					//////// //System.out.println("Setting List Index
					//////// CORP_SOURCE_NAME ");
					formObject.setNGEnable("CORP_CHANNEL_NAME", false);
					formObject.setNGEnable("CORP_BRANCH_NAME", false);
				}
			}
			// ============End CR Quote SYS =========

			// ============ CR 12 01032011 Start ===========
			if ((lstrActivityName.equalsIgnoreCase("Endorsement")
					|| (lstrActivityName.equalsIgnoreCase("CPU_Assignment") || lstrActivityName.equalsIgnoreCase(
							"CPU_Data_Washing")) /* CR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase("CPU_DW_Clarification")
					|| lstrActivityName.equalsIgnoreCase(
							"COPS_Policy_Endr") /*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing //CR-8001-70893
												 * Marine CR
												 */
					|| lstrActivityName.equalsIgnoreCase("RM_Green_File"))
					&& pControlName.equalsIgnoreCase("CPI_PRODUCT_TYPE")) {

				//////// //System.out.println("CR 12 CPI_PRODUCT_TYPE Click 2:
				//////// ");
				formObject.setNGEnable("CPI_PRODUCT_NAME", true);
			}
			if (lstrActivityName.equalsIgnoreCase("RM_Clarification") || lstrActivityName.equalsIgnoreCase(
					"CPUCustClarification")/* CR 46 CPU DataWashing */) {
				//////// //System.out.println("pEventName: " + pEventName);
				//////// //System.out.println("pControlName: " + pControlName);
				String sProcessType = formObject.getNGValue("CPI_Process_Type");
				if (pControlName.equalsIgnoreCase("CPI_PRODUCT_TYPE")
						&& sProcessType.equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("CR 12 CPI_PRODUCT_TYPE Click
					//////// 3: ");
					formObject.setNGListIndex("Corp_PRODUCT_NAME", 0);
					formObject.setNGEnable("Corp_PRODUCT_NAME", true);
				}
				if (pControlName.equalsIgnoreCase("END_PRODUCT_TYPE") && sProcessType.equalsIgnoreCase("Endorsement")) {
					//////// //System.out.println("CR 12 END_PRODUCT_TYPE Click
					//////// 4: ");
					formObject.setNGEnable("END_PRODUCT_NAME", true);
				}
			}
			// ============ CR 12 01032011 End ===========

			// ******************bhagat CR CPU_HEALTH*********************//
			// ..............................................
			if (lstrActivityName.equalsIgnoreCase("Endorsement") || lstrActivityName.equalsIgnoreCase("CPU_Assignment")
					|| lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
					|| lstrActivityName.equalsIgnoreCase(
							"CPUCustClarification")/* CR 46 CPU DataWashing */
					|| lstrActivityName.equalsIgnoreCase(
							"CPU_DW_Clarification")/*
													 * CR-OMCPI-1314-03 CPU
													 * DataWashing
													 */
					|| lstrActivityName.equalsIgnoreCase("RM_Green_File")
					|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
					|| lstrActivityName.equalsIgnoreCase("CO_INSURANCE")
					|| lstrActivityName.equalsIgnoreCase("CO_INSURANCE_RM")
					|| lstrActivityName.equalsIgnoreCase("COPS_Policy_Endr")) { // CR-8001-70893
																				// Marine
																				// CR
				//////// //System.out.println("bhagat fx start-->");
				String prodoctName = "";
				String prodoctType = "";
				//////// //System.out.println("CR CPU_HEALTH : settingg
				//////// CPI_CPU_HEALTH_STATUS ");
				if (pControlName.equalsIgnoreCase("CPI_PRODUCT_NAME")) {
					prodoctName = formObject.getNGValue("CPI_PRODUCT_NAME");
					prodoctType = formObject.getNGValue("CPI_PRODUCT_TYPE");
					//////// //System.out.println("CPI_PRODUCT_NAME: " +
					//////// prodoctName + "----CPI_PRODUCT_TYPE: " +
					//////// prodoctType);
					String sQuery = "select product_routing from ng_product_master where product_name='" + prodoctName
							+ "' and product_type_id=(select record_id from ng_product_type_master where product_type='"
							+ prodoctType + "') and rownum<=1";
					//////// //System.out.println(sQuery);
					ArrayList getUser = formObject.getNGDataFromDataSource(sQuery, 1);
					if (getUser != null) {
						//////// //System.out.println("inside Arrarlist not null
						//////// case ");
						String s_CoUser = (getUser.get(0)).toString();
						s_CoUser = s_CoUser.substring(s_CoUser.indexOf("[") + 1, s_CoUser.indexOf("]"));
						/*
						 * if (s_CoUser.equalsIgnoreCase("1")) // Normal CPU
						 * Health case only { //////// //System.out.
						 * println("Normal CPU Health case s_CoUser-->" +
						 * s_CoUser);
						 * formObject.setNGValue("CPI_CPU_HEALTH_STATUS", "1");
						 * formObject.setNGValue("CPI_DATAWASHING_STATUS", "0");
						 * }else
						 */ // E-Mail Filter CR-8001-54702:= now there are only
							// two product routing (0 and 2) 2::health and dw
							// cases and 0::normal thus commenting above code
						if (s_CoUser.equalsIgnoreCase("2")) // CPUDatawashing
															// case.
						{
							//////// //System.out.println("CPUDatawashing case
							//////// s_CoUser-->" + s_CoUser);
							formObject.setNGValue("CPI_CPU_HEALTH_STATUS", "1");
							if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
								formObject.setNGValue("CPI_DATAWASHING_STATUS", "1");
							} else {
								formObject.setNGValue("CPI_DATAWASHING_STATUS", "0");
							}
						} else {
							//////// //System.out.println("Normal case
							//////// s_CoUser-->" + s_CoUser);
							formObject.setNGValue("CPI_CPU_HEALTH_STATUS", "0");
							formObject.setNGValue("CPI_DATAWASHING_STATUS", "0");
						}
					} else {
						//////// //System.out.println("inside Arraylist null
						//////// case ");
						formObject.setNGValue("CPI_CPU_HEALTH_STATUS", "0");
						formObject.setNGValue("CPI_DATAWASHING_STATUS", "0");
					}
					//////// //System.out.println("CPU_HEALTH_STATUS-->" +
					//////// formObject.getNGValue("CPI_CPU_HEALTH_STATUS"));
				}
				if ((lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("CPU_Assignment")
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_Data_Washing") /* CR 46 CPU DataWashing */
						|| lstrActivityName.equalsIgnoreCase(
								"CPU_DW_Clarification")/*
														 * CR-OMCPI-1314-03 CPU
														 * DataWashing
														 */
						|| lstrActivityName.equalsIgnoreCase(
								"RM_Green_File")/* Yogesh Marine */
						|| lstrActivityName.equalsIgnoreCase(
								"COPS_Policy_Endr")/* Yogesh Marine */)
						&& pControlName.equalsIgnoreCase("CPI_PRODUCT_NAME")) {
					//////// //System.out.println(" otc eventhandler() ");
					if (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("OTC")
							&& formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
						//////// //System.out.println("in side Field Enable
						//////// Disable eventhandler() ");
						formObject.setNGEnable("CPI_VAS", true);
						formObject.setNGLocked("CPI_VAS", true);
					} else {
						formObject.setNGListIndex("CPI_VAS", 0);
						formObject.setNGEnable("CPI_VAS", false);
						formObject.setNGLocked("CPI_VAS", false);
					}
				}
			}
			// ......................................
			// ******************bhagat CR CPU_HEALTH*********************//
		}
		// System.out.println("Before the CR-8001-87420-Green File Digitization
		// NGF_EventHandler() vaibhav..");
		/**********************
		 * Start CR-8001-87420 GREEN FILE Digitization CR Vaibhav
		 ***********************/
		if ((pEventName.equalsIgnoreCase("KeyPress(F3)")) && (pControlName.equalsIgnoreCase("CPI_PRODUCT_NAME"))
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File")
						|| lstrActivityName.equalsIgnoreCase("Endorsement")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
						|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
						|| lstrActivityName.equalsIgnoreCase("BSG_QC"))
				&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
			System.out.println("Inside the CR-8001-87420-Green File Digitization NGF_EventHandler() vaibhav1..");
			String prodIrdaCode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
			System.out
					.println("Inside the CR-8001-87420-Green File Digitization prodIrdaCode vaibhav8.." + prodIrdaCode);
			if (prodIrdaCode.equalsIgnoreCase("4037") || prodIrdaCode.equalsIgnoreCase("4047")) {
				System.out.println(
						"Inside IF CR-8001-87420-Green File Digitization NGF_EventHandler() document upload..vaibhav");
				formObject.setNGEnable("Frame_DocUpload", false);
				formObject.setNGLocked("Frame_DocUpload", false);
			} else {
				System.out.println(
						"Inside Else CR-8001-87420-Green File Digitization NGF_EventHandler() document upload..vaibhav");
				formObject.setNGEnable("Frame_DocUpload", true);
				formObject.setNGLocked("Frame_DocUpload", true);
			}
		}
		/**********************
		 * End CR-8001-87420 GREEN FILE Digitization CR Vaibhav
		 ***********************/

		/**************************************
		 * CR-8127-95325 : GST-Omniflow development Start
		 *****************************************************/
		if ((pEventName.equalsIgnoreCase("CHANGE") || pEventName.equalsIgnoreCase("click"))
				&& pControlName.equalsIgnoreCase("CPI_GST_REGISTERED")
				&& (lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("BSG_QC")
						|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
						|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")
						|| lstrActivityName.equalsIgnoreCase("Endorsement"))
				&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
			System.out.println("Inside NGF_EventHandler Method CR-8127-95325 Change Event: ");
			if (formObject.getNGValue("CPI_GST_REGISTERED").equalsIgnoreCase("Yes")) {
				System.out.println("Inside NGF_EventHandler Method CR-8127-95325 VaibhavYes: "
						+ formObject.getNGValue("CPI_GST_REGISTERED"));
				formObject.setNGEnable("Btn_AddGst", true);
				formObject.setNGEnable("Btn_ViewGst", true);
				/********** Start CR-8001-97828_BRS_GST_OmniflowCPI **********/
				formObject.setNGValue("CPI_GST_REGISTERED", "--Select--");
				formObject.setNGEnable("CPI_GST_INVOICE_OPTION", true);
				formObject.setNGLocked("CPI_GST_INVOICE_OPTION", true);
				/********** End CR-8001-97828_BRS_GST_OmniflowCPI **********/

			} else if (formObject.getNGValue("CPI_GST_REGISTERED").equalsIgnoreCase("No")) {
				System.out.println("Inside NGF_EventHandler Method CR-8127-95325 VaibhavNo: "
						+ formObject.getNGValue("CPI_GST_REGISTERED"));
				/********** Start CR-8001-97828_BRS_GST_OmniflowCPI **********/
				formObject.setNGValue("CPI_GST_REGISTERED", "--Select--");
				formObject.setNGEnable("CPI_GST_INVOICE_OPTION", false);
				formObject.setNGLocked("CPI_GST_INVOICE_OPTION", false);
				/********** End CR-8001-97828_BRS_GST_OmniflowCPI **********/
				formObject.setNGEnable("Btn_AddGst", false);
				formObject.setNGEnable("Btn_ViewGst", true);

			} else {
				System.out.println("Inside NGF_EventHandler Method CR-8127-95325 vaibhavElse : "
						+ formObject.getNGValue("CPI_GST_REGISTERED"));
				/********** Start CR-8001-97828_BRS_GST_OmniflowCPI **********/
				formObject.setNGValue("CPI_GST_REGISTERED", "--Select--");
				formObject.setNGEnable("CPI_GST_INVOICE_OPTION", false);
				formObject.setNGLocked("CPI_GST_INVOICE_OPTION", false);
				/********** End CR-8001-97828_BRS_GST_OmniflowCPI **********/
				formObject.setNGEnable("Btn_AddGst", false);
				formObject.setNGEnable("Btn_ViewGst", true);
			}
			// //System.out.println("Exiting NGF_EventHandler Method
			// CR-8127-95325 : ");

		}
		/**************************************
		 * CR-8127-95325 : GST-Omniflow development End
		 ******************************************************/
		/*****
		 * Start CR-8001-71104_CR-8119-87478_Auto CPI generation iPartner
		 *****/
		if ((lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement")
				|| lstrActivityName.equalsIgnoreCase("BSG_QC") || lstrActivityName.equalsIgnoreCase("RM_Clarification")
				|| lstrActivityName.equalsIgnoreCase("BSG_Clarification"))
				&& (formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))
				&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
				&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))
				&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
			formObject.setNGEnable("CPI_IPARTNER_POLICY_NO", true);
			formObject.setNGLocked("CPI_IPARTNER_POLICY_NO", true);
			// System.out.println("Inside NGF_EventHandler METHOD Auto CPI
			// generation iPartner");
			if (lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement")
					|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
					|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")) {
				// System.out.println("Inside IF NGF_EventHandler METHOD Auto
				// CPI generation iPartner
				// "+formObject.getNGValue("CPI_Process_Type"));
				formObject.setNGEnable("CPI_SECONDARY_VERTICAL", false);
				formObject.setNGLocked("CPI_SECONDARY_VERTICAL", false);
				formObject.setNGEnable("CPI_SECONDARY_SUB_VERTICAL", false);
				formObject.setNGLocked("CPI_SECONDARY_SUB_VERTICAL", false);
				System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + lstrActivityName);
				// formObject.setNGValue("CPI_PID_PAYMENT_TYPE","No");
				formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", false);
				formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
				formObject.setNGEnable("CPI_PRIVILEGE_BANKER_CODE", false);
				formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
				formObject.setNGEnable("CPI_IAS_ID", false);
				formObject.setNGLocked("CPI_IAS_ID", false);
				formObject.setNGEnable("CPI_DATA_VALIDATION_ID", false);
				formObject.setNGLocked("CPI_DATA_VALIDATION_ID", false);
				formObject.setNGEnable("CPI_VAS", false);
				formObject.setNGLocked("CPI_VAS", false);
				formObject.setNGEnable("CPI_REFUND_ID", false);
				formObject.setNGLocked("CPI_REFUND_ID", false);
				formObject.setNGEnable("CPI_OTHER_PIDNO", false);
				formObject.setNGLocked("CPI_OTHER_PIDNO", false);
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Issuance")) {
					// System.out.println("Inside if Corporate Policy Insurance
					// Auto CPI generation
					// iPartner"+formObject.getNGValue("CPI_Process_Type"));
					// Default Value and freez
					// System.out.println("//Default Value and freez");
					formObject.setNGValue("CPI_MH", "No");
					formObject.setNGLocked("CPI_MH", false);
					formObject.setNGEnable("CPI_MH", false);
					// formObject.setNGValue("CPI_EXCEPTION_TO_MH","I partner");
					formObject.setNGLocked("CPI_EXCEPTION_TO_MH", false);
					formObject.setNGEnable("CPI_EXCEPTION_TO_MH", false);
					formObject.setNGValue("CPI_NETWORK_PARTNER", "No");
					formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
					formObject.setNGEnable("CPI_NETWORK_PARTNER", false);
					// formObject.setNGValue("CPI_RI_INWARD","No");
					formObject.setNGLocked("CPI_RI_INWARD", false);
					formObject.setNGEnable("CPI_RI_INWARD", false);
					formObject.setNGValue("CPI_PRODUCT_TYPE", "iPartner");
					formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
					formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
					formObject.setNGValue("CPI_BOOKING_TYPE", "FINAL");
					formObject.setNGLocked("CPI_BOOKING_TYPE", false);
					formObject.setNGEnable("CPI_BOOKING_TYPE", false);
					// Enable

					// Disable
					// System.out.println("//Disable Value and freez");
					formObject.setNGEnable("CPI_SECONDARY_MO_ID", false);
					formObject.setNGLocked("CPI_SECONDARY_MO_ID", false);
					formObject.setNGEnable("CPI_SECONDARY_MO_NAME", false);
					formObject.setNGLocked("CPI_SECONDARY_MO_NAME", false);
					formObject.setNGEnable("CPI_quOTE_SYS_ID", false);
					formObject.setNGLocked("CPI_quOTE_SYS_ID", false);
					formObject.setNGEnable("CPI_NETWORK_PARTNER_NAME", false);
					formObject.setNGLocked("CPI_NETWORK_PARTNER_NAME", false);
					formObject.setNGEnable("CPI_MH_INTERACTION_NO", false);
					formObject.setNGLocked("CPI_MH_INTERACTION_NO", false);
					formObject.setNGEnable("CPI_TRANSACTION_ID", false);
					formObject.setNGLocked("CPI_TRANSACTION_ID", false);
					formObject.setNGEnable("CPI_CDBG_NO", false);
					formObject.setNGLocked("CPI_CDBG_NO", false);
				} else {
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
						// System.out.println("Inside else Endorsement Auto CPI
						// generation iPartner");
						// Default Value and freez
						// System.out.println("//Default Value and freez");
						formObject.setNGValue("CPI_PAS", "Pathfinder");
						formObject.setNGLocked("CPI_PAS", false);
						formObject.setNGEnable("CPI_PAS", false);
						formObject.setNGValue("CPI_TYPE_OF_ENDORSEMENT", "External endorsement");
						formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", false);
						formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", false);
						// Enable

						// Disable
						// System.out.println("//Disable Value and freez");
						formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGEnable("CPI_CLAIM_NO", false);
						formObject.setNGLocked("CPI_CLAIM_NO", false);
						formObject.setNGEnable("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
						formObject.setNGLocked("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
					}
				}
			}
			if (lstrActivityName.equalsIgnoreCase("BSG_QC")) {
				// System.out.println("BSG_QC Auto CPI generation
				// iPartner.....");
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Issuance")) {
					formObject.setNGEnable("Corp_SECONDARY_VERTICAL", false);
					formObject.setNGLocked("Corp_SECONDARY_VERTICAL", false);
					formObject.setNGEnable("Corp_SECONDARY_SUB_VERTICAL", false);
					formObject.setNGLocked("Corp_SECONDARY_SUB_VERTICAL", false);
					formObject.setNGEnable("Corp_PID_PAYMENT_TYPE", false);
					formObject.setNGLocked("Corp_PID_PAYMENT_TYPE", false);
					formObject.setNGEnable("Corp_PRIVILEGE_BANKER_CODE", false);
					formObject.setNGLocked("Corp_PRIVILEGE_BANKER_CODE", false);
					formObject.setNGEnable("Corp_IAS_ID", false);
					formObject.setNGLocked("Corp_IAS_ID", false);
					formObject.setNGEnable("Corp_DATA_VALIDATION_ID", false);
					formObject.setNGLocked("Corp_DATA_VALIDATION_ID", false);
					formObject.setNGEnable("Corp_OTHER_PIDNO", false);
					formObject.setNGLocked("Corp_OTHER_PIDNO", false);
				} else {
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
						formObject.setNGEnable("End_SECONDARY_VERTICAL", false);
						formObject.setNGLocked("End_SECONDARY_VERTICAL", false);
						formObject.setNGEnable("End_SECONDARY_SUB_VERTICAL", false);
						formObject.setNGLocked("End_SECONDARY_SUB_VERTICAL", false);
						formObject.setNGEnable("End_PID_PAYMENT_TYPE", false);
						formObject.setNGLocked("End_PID_PAYMENT_TYPE", false);
						formObject.setNGEnable("End_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGLocked("End_PRIVILEGE_BANKER_CODE", false);
						formObject.setNGEnable("End_IAS_ID", false);
						formObject.setNGLocked("End_IAS_ID", false);
						formObject.setNGEnable("End_DATA_VALIDATION_ID", false);
						formObject.setNGLocked("End_DATA_VALIDATION_ID", false);
						formObject.setNGEnable("End_OTHER_PIDNO", false);
						formObject.setNGLocked("End_OTHER_PIDNO", false);
					}
				}
			}
		} else {
			formObject.setNGEnable("CPI_IPARTNER_POLICY_NO", false);
			formObject.setNGLocked("CPI_IPARTNER_POLICY_NO", false);
		}
		/*****
		 * End CR-8001-71104_CR-8119-87478_Auto CPI generation iPartner
		 *****/
		/****** Start CR GREEN FILE Digitization Phase II (Yogesh) ******/
		if ((lstrActivityName.equalsIgnoreCase("RM_Green_File") || lstrActivityName.equalsIgnoreCase("Endorsement")
				|| lstrActivityName.equalsIgnoreCase("BSG_QC") || lstrActivityName.equalsIgnoreCase("RM_Clarification")
				|| lstrActivityName.equalsIgnoreCase("BSG_Clarification"))
				&& !(formObject.getNGValue("CPI_ITRODUCEDBY").equalsIgnoreCase("IPARTNER"))
				&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
				&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
			// System.out.println("Inside IF NGF_EventHandler METHOD CR GREEN
			// FILE Digitization Phase II (Yogesh)
			// "+formObject.getNGValue("CPI_Process_Type"));
			formObject.setNGEnable("CPI_TRANSACTION_TYPE", true);
			formObject.setNGLocked("CPI_TRANSACTION_TYPE", true);
			if (lstrActivityName.equalsIgnoreCase("RM_Green_File")
					|| lstrActivityName.equalsIgnoreCase("Endorsement")) {
				// System.out.println("enabling NGF_EventHandler RM_Green_File
				// Endorsement");
				formObject.setNGEnable("CPI_RMT_FLAG", true);
				formObject.setNGLocked("CPI_RMT_FLAG", true);
				formObject.setNGEnable("CPI_PERCENTAGE_OF_COMMISION", true);
				formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", true);
				formObject.setNGEnable("CPI_TOTAL_PREMIUM", true);
				formObject.setNGLocked("CPI_TOTAL_PREMIUM", true);
			} else if (lstrActivityName.equalsIgnoreCase("BSG_QC")
					|| lstrActivityName.equalsIgnoreCase("RM_Clarification")
					|| lstrActivityName.equalsIgnoreCase("BSG_Clarification")) {
				// System.out.println("Inside elseIF NGF_EventHandler METHOD for
				// policy CR GREEN FILE Digitization Phase II (Yogesh)
				// "+formObject.getNGValue("CPI_Process_Type"));

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					// System.out.println("enabling NGF_EventHandler Corporate
					// Policy Insurance");
					formObject.setNGEnable("CPI_PRODUCT_TYPE", true);
					formObject.setNGLocked("CPI_PRODUCT_TYPE", true);
					formObject.setNGEnable("CPI_PRODUCT_NAME", true);
					formObject.setNGLocked("CPI_PRODUCT_NAME", true);
					formObject.setNGEnable("CORP_RMT_FLAG", true);
					formObject.setNGLocked("CORP_RMT_FLAG", true);
					formObject.setNGEnable("CORP_PERCENTAGE_OF_COMMISION", true);
					formObject.setNGLocked("CORP_PERCENTAGE_OF_COMMISION", true);
					formObject.setNGEnable("CORP_TOTAL_PREMIUM", true);
					formObject.setNGLocked("CORP_TOTAL_PREMIUM", true);
				} else if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					// System.out.println("enabling NGF_EventHandler
					// Endorsement");
					formObject.setNGEnable("End_RMT_FLAG", true);
					formObject.setNGLocked("End_RMT_FLAG", true);
					formObject.setNGEnable("End_TOTAL_PREMIUM", true);
					formObject.setNGLocked("End_TOTAL_PREMIUM", true);
					formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", true);
					formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", true);
					formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
					formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
					formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", true);
					formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", true);
					formObject.setNGEnable("CPI_ENDORSEMENT_EFFECTIVE_DATE", true);
					formObject.setNGLocked("CPI_ENDORSEMENT_EFFECTIVE_DATE", true);
					formObject.setNGEnable("CPI_ENDORSEMENT_NO", true);
					formObject.setNGLocked("CPI_ENDORSEMENT_NO", true);
					if (formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("No")) {
						formObject.setNGEnable("CPI_TOTAL_PREMIUM", true);
						formObject.setNGLocked("CPI_TOTAL_PREMIUM", true);
					}
					formObject.setNGEnable("End_PERCENTAGE_OF_COMMISION", true);
					formObject.setNGLocked("End_PERCENTAGE_OF_COMMISION", true);
				} else {
					// System.out.println("disabling NGF_EventHandler");
					formObject.setNGEnable("CPI_TYPE_OF_ENDORSEMENT", false);
					formObject.setNGLocked("CPI_TYPE_OF_ENDORSEMENT", false);
					formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
					formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
					formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
					formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
					formObject.setNGEnable("CPI_ENDORSEMENT_EFFECTIVE_DATE", false);
					formObject.setNGLocked("CPI_ENDORSEMENT_EFFECTIVE_DATE", false);
					formObject.setNGEnable("CPI_TOTAL_PREMIUM", false);
					formObject.setNGLocked("CPI_TOTAL_PREMIUM", false);
					formObject.setNGEnable("CPI_ENDORSEMENT_NO", false);
					formObject.setNGLocked("CPI_ENDORSEMENT_NO", false);
					formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
					formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
					formObject.setNGEnable("CPI_PRODUCT_NAME", false);
					formObject.setNGLocked("CPI_PRODUCT_NAME", false);
					formObject.setNGEnable("End_TOTAL_PREMIUM", false);
					formObject.setNGLocked("End_TOTAL_PREMIUM", false);
					formObject.setNGEnable("End_RMT_FLAG", false);
					formObject.setNGLocked("End_RMT_FLAG", false);
					formObject.setNGEnable("End_PERCENTAGE_OF_COMMISION", false);
					formObject.setNGLocked("End_PERCENTAGE_OF_COMMISION", false);
					formObject.setNGEnable("CORP_TOTAL_PREMIUM", false);
					formObject.setNGLocked("CORP_TOTAL_PREMIUM", false);
					formObject.setNGEnable("CORP_RMT_FLAG", false);
					formObject.setNGLocked("CORP_RMT_FLAG", false);
					formObject.setNGEnable("CORP_PERCENTAGE_OF_COMMISION", false);
					formObject.setNGLocked("CORP_PERCENTAGE_OF_COMMISION", false);
				}
			} else {
				// System.out.println("in side NGF_EventHandler Else CR GREEN
				// FILE Digitization Phase II (Yogesh) disable control");
				formObject.setNGEnable("CPI_TRANSACTION_TYPE", false);
				formObject.setNGLocked("CPI_TRANSACTION_TYPE", false);
				formObject.setNGEnable("CPI_RMT_FLAG", false);
				formObject.setNGLocked("CPI_RMT_FLAG", false);
				formObject.setNGEnable("CPI_PERCENTAGE_OF_COMMISION", false);
				formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", false);
			}
		}
		/****** End CR GREEN FILE Digitization Phase II (Yogesh) ******/
		//////// //System.out.println("Exiting NGF_EventHandler at : " +
		//////// dateFormat1.format(new Date()));
	}

	public String NGF_GetMsgString(String s) {
		return null;
	}

	public int NGF_SaveNGFData(String ActivityName, String pEventName) {
		//////// //System.out.println("Entering NGF_SaveNGFData at : " +
		//////// dateFormat1.format(new Date()));

		String lstrProcessId = xmlParserGenData.getValueOf("ProcessInstanceId");
		//////// //System.out.println("ProcessId " + lstrProcessId);
		//////// //System.out.println("123445ravi");
		// bhagat CR CPU_HEALTH
		// bhagat........................
		if (ActivityName.equalsIgnoreCase("Processing Hub") || ActivityName.equalsIgnoreCase("BSG_QC")
				|| ActivityName.equalsIgnoreCase("CPU_HEALTH") || ActivityName.equalsIgnoreCase("CPU_Approver")) // CR-8001-54702
																													// E-Mail
																													// Filter
																													// :
																													// Added
																													// health
																													// and
																													// approver
																													// wrkstps
		{
			//////// //System.out.println("Along with E-Mail filter");
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				formObject.setNGValue("CPI_REFUND_ID", formObject.getNGValue("txtRefundID"));
			}
		}
		// ...............................
		// end bhagat CR CPU_HEALTH
		// ******************************************* VERMA
		// ****************************
		if (ActivityName.equalsIgnoreCase("RM_Green_File")) {
			// *********q_variable for RM_Green_File on 05-10-2010
			// ****************
			//////// //System.out.println("Verma2 Entering RM_Green_File at : "
			// + dateFormat1.format(new Date()));
			formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
			if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("CPI_q_ProductName")) {
				formObject.setNGValue("CPI_PRODUCT_NAME", "");
			}
			formObject.setNGValue("CPI_q_ProductName", formObject.getNGValue("CPI_PRODUCT_NAME"));
			formObject.setNGValue("CPI_q_TotalPremium", formObject.getNGValue("CPI_TOTAL_PREMIUM"));
			// formObject.setNGValue("CPI_q_Transaction_ID",
			// formObject.getNGValue("CPI_TRANSACTION_ID")); //Vendor login &
			// weather Product CR
			formObject.setNGValue("CPI_q_Quote_No", formObject.getNGValue("CPI_QUOTE_NO"));
			formObject.setNGValue("CPI_q_PrimaryVertical", formObject.getNGValue("CPI_PRIMARY_VERTICAL"));
			formObject.setNGValue("CPI_q_CustomerName", formObject.getNGValue("CPI_CUSTOMER_NAME"));

			//////// //System.out.println("Verma3 Entering RM_Green_File at : "
			//////// + dateFormat1.format(new Date()));
			// *********End***************************************************

			/**************** ZoneHub Method call **************/
			if (!formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
				setZoneHub();
			}
		}

		if (ActivityName.equalsIgnoreCase("Endorsement") || ActivityName.equalsIgnoreCase("CPU_Assignment")
				|| ActivityName.equalsIgnoreCase(
						"CPU_Data_Washing")/* CR 46 CPU DataWashing */
				|| ActivityName.equalsIgnoreCase(
						"CPU_DW_Clarification")/*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing
												 */) {

			// *********q_variable for Endorsement on 05-10-2010
			// ***********************
			//////// //System.out.println("Verma5 Entering RM_Green_File at : "
			// + dateFormat1.format(new Date()));
			formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
			if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("CPI_q_ProductName")) {
				formObject.setNGValue("CPI_PRODUCT_NAME", "");
			}

			formObject.setNGValue("CPI_q_ProductName", formObject.getNGValue("CPI_PRODUCT_NAME"));
			formObject.setNGValue("CPI_q_TotalPremium", formObject.getNGValue("CPI_TOTAL_PREMIUM"));
			formObject.setNGValue("CPI_q_EndorsementNo", formObject.getNGValue("CPI_ENDORSEMENT_NO"));
			formObject.setNGValue("CPI_q_PrimaryVertical", formObject.getNGValue("CPI_PRIMARY_VERTICAL"));
			formObject.setNGValue("CPI_q_CustomerName", formObject.getNGValue("CPI_CUSTOMER_NAME"));

			/**************** ZoneHub Method call **************/
			if (!formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
				setZoneHub();
			}
			// *********End*************************** *******************
		}
		// *******************************************VERMA
		// *****************************

		// added by satish for setting zonehub for Quote cases
		if (ActivityName.equalsIgnoreCase("BSG_QC")) {
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
					&& formObject.getNGValue("CPI_quOTE_SYS_ID") != "") {
				if (!formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
					setZoneHub();
				}
			}
		}
		// end of added by satish for setting zonehub for Quote cases
		// added by vishal to set zone hub in co insurance//
		if (ActivityName.equalsIgnoreCase("Co_Insurance")) {
			if (!formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
				setZoneHub();
			}

			formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
			//////// //System.out.println("vishal1" +
			//////// formObject.getNGValue("CPI_IL_LOCATION"));
			formObject.setNGValue("CPI_q_ProductName", formObject.getNGValue("CPI_PRODUCT_NAME"));
		}
		// End by vishal to set zone hub in co insurance//
		/*************************
		 * CPI PID Additional Points
		 *****************************/
		if (ActivityName.equalsIgnoreCase("DEO_Clarification")) {
			String pasValue = "";
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				pasValue = formObject.getNGValue("Corp_pas");
			} else {
				pasValue = formObject.getNGValue("End_pas");
			}
			//////// //System.out.println("pasValue in if=== " + pasValue);
			if (pasValue != null && pasValue.equalsIgnoreCase("Pathfinder")) {
				formObject.setNGValue("CPI_PROPOSAL_NO", formObject.getNGValue("Corp_PROPOSAL_NO"));// CPI
																									// PID
																									// Additional
																									// Points
			}

		}
		/*************************
		 * End CPI PID Additional Points
		 **************************/

		/***********************
		 * CR 18 ###
		 ***************************************/
		if (!(ActivityName.equalsIgnoreCase("Work Introduction1") || ActivityName.equalsIgnoreCase("Endorsement")
				|| ActivityName.equalsIgnoreCase("CPU_Assignment")
				|| ActivityName.equalsIgnoreCase(
						"CPU_Data_Washing")/* CR 46 CPU DataWashing */
				|| ActivityName.equalsIgnoreCase(
						"CPU_DW_Clarification")/*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing
												 */
				|| ActivityName
						.equalsIgnoreCase("RM_Green_File")/* yogesh marine */
				|| ActivityName
						.equalsIgnoreCase("COPS_Policy_Endr")/* yogesh marine */)) {
			//////// //System.out.println("test");
			//////// //System.out.println(" NGF_SaveNGFData::::" +
			//////// formObject.getNGValue("CPI_Process_Type"));
			//////// //System.out.println("bError value: " + bError);
			////////// //System.out.println("Corp_PRODUCT_NAME:
			//////// "+formObject.getNGValue("Corp_PRODUCT_NAME") );

			/*************** cr 18 ***************************/
			// satish
			if (!(ActivityName.equalsIgnoreCase("CO_INSURANCE"))
					&& !(ActivityName.equalsIgnoreCase("CO_INSURANCE_RM"))) {
				//////// //System.out.println("inside ####");
				formObject.setNGValue("CPI_PAS", formObject.getNGValue("CORP_PAS"));
				/*
				 * formObject.setNGValue("CPI_MODE_OF_PAYMENT",
				 * formObject.getNGValue("CORP_MODE_OF_PAYMENT"));
				 * formObject.setNGValue("CPI_PID_PAYMENT_TYPE",
				 * formObject.getNGValue("CORP_PID_PAYMENT_TYPE"));
				 */ // Suraj
					// PID_CPI process changes

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					formObject.setNGValue("CPI_Samadhan_Interaction_ID",
							formObject.getNGValue("Corp_Samadhan_Interaction_ID"));
				}
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					formObject.setNGValue("CPI_Samadhan_Interaction_ID",
							formObject.getNGValue("End_Samadhan_Interaction_ID"));
				}
				//////// //System.out.println(";;;;;;;" +
				//////// formObject.getNGValue("CPI_Samadhan_Interaction_ID"));
				/*
				 * if (formObject.getNGValue("CPI_Process_Type").
				 * equalsIgnoreCase("Corporate Policy Insurance") &&
				 * formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("YES"
				 * )) { formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
				 * formObject.getNGValue("Corp_INST_NO_CD_NO_DEP_SLIP_NO")); }
				 */ // Suraj
				/*
				 * Change by Yogendra Kaushik, As per Change Request no
				 * 2.(7/5/2010)
				 */

				// Validation changed by Dinesh Kumar on 30Jun2010 to allow all
				// special characters
				// satish
				if (!ICICIval.validateText(formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO"), "GeneralTextMask")) {
					JOptionPane.showMessageDialog(null, "Enter valid Inst. No./CD No./Dep. Slip No");
					formObject.NGFocus("CPI_INST_NO_CD_NO_DEP_SLIP_NO");
					return 0;

				}
			}
			// satish
		}

		js = formObject.getJSObject();
		//////// //System.out.println("after js call");
		if (bError) {
			//////// //System.out.println("Error:");
			JOptionPane.showMessageDialog(null, "Can't Submit the Workitem, Error at the Server End.");
			return 0;
		} else if (ActivityName.equalsIgnoreCase("Work Introduction1")) {

			//////// //System.out.println("work intro");

			if (pEventName.equalsIgnoreCase("S") || pEventName.equalsIgnoreCase("D")) {
				//////// //System.out.println("inside save and done");
				formObject.setNGValue("CPI_WI_Name", lstrProcessId);
			}
			if (pEventName.equalsIgnoreCase("D")) {
				////////// //System.out.println("jhbjhh"+formObject.getNGValue("CPI_Process_Type"));
				// PostSaveNGFData("Work Introduction1","D");
				/*********************
				 * CR 18##************************* non co-Insurance Case
				 */
				//////// //System.out.println("inside done");
				if (CoInsIdFlag.equalsIgnoreCase("F") && cpuDataWashingFlag.equalsIgnoreCase("F")) {
					//////// //System.out.println("inside
					//////// CoInsIdFlag.equalsIgnoreCase");
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("--Select--")) {
						JOptionPane.showMessageDialog(null, "Please Select Type Of Process ");
						formObject.NGFocus("CPI_Process_Type");
						return 0;
					}
				}
			}
		}
		/**** Start CR-8001-70893 Marine CR *******************************/
		else if (ActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")) {
			String sAssignedBy = formObject.getUserName();
			// //System.out.println("sAssignedBy: " + sAssignedBy);
			if (pEventName.equalsIgnoreCase("S") || pEventName.equalsIgnoreCase("D")) {
				// //System.out.println("inside save and done in
				// COPS_Cpu_Assignment");
				formObject.setNGValue("CPI_CPU_ASSIGNED_BY", sAssignedBy);
			}
			if (pEventName.equalsIgnoreCase("D")) {
				return COPS_Cpu_Assignment(pEventName, ActivityName);
			}
		} else if (ActivityName.equalsIgnoreCase("COPS_Policy_Endr")) {
			String sAssignedBy = formObject.getUserName();
			// //System.out.println("sAssignedBy: " + sAssignedBy);
			if (pEventName.equalsIgnoreCase("S") || pEventName.equalsIgnoreCase("D")) {
				// //System.out.println("inside save and done");
				// formObject.setNGValue("CPI_CPU_ASSIGNED_BY", sAssignedBy);
			}
			if (pEventName.equalsIgnoreCase("D")) {
				return COPS_Policy_Endr(pEventName, ActivityName);
			}
		}
		/************** Start Yogesh Marine Cr ************/
		else if (ActivityName.equalsIgnoreCase("COPS_Policy_Print")) {
			String sAssignedBy = formObject.getUserName();
			// //System.out.println("sAssignedBy: " + sAssignedBy);
			if (pEventName.equalsIgnoreCase("S") || pEventName.equalsIgnoreCase("D")) {
				// //System.out.println("inside save and done");
				// formObject.setNGValue("CPI_CPU_ASSIGNED_BY", sAssignedBy);
			}
			if (pEventName.equalsIgnoreCase("D")) {
				return COPS_Policy_Print(pEventName, ActivityName);
			}
			// //System.out.println("NGF_SaveNGData:1
			// "+formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE"));
			// //System.out.println("NGF_SaveNGData:2
			// "+formObject.getNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE"));
		}
		/************** End Yogesh Marine Cr ************/
		/**** ENd CR-8001-70893 Marine CR *********************************/
		/* CR-OMCPI-1314-03 CPU DataWashing Start */
		else if (ActivityName.equalsIgnoreCase("CPU_Assignment")) {
			String sAssignedBy = formObject.getUserName();
			//////// //System.out.println("sAssignedBy: " + sAssignedBy);
			if (pEventName.equalsIgnoreCase("S") || pEventName.equalsIgnoreCase("D")) {
				//////// //System.out.println("inside save and done");
				formObject.setNGValue("CPI_CPU_ASSIGNED_BY", sAssignedBy);
			}
			if (pEventName.equalsIgnoreCase("D")) {
				return CPU_Assignment(pEventName, ActivityName);
			}
		} /* CR-OMCPI-1314-03 CPU DataWashing End */ else if (ActivityName.equalsIgnoreCase("Endorsement")
				|| ActivityName.equalsIgnoreCase(
						"CPU_Data_Washing") /* CR 46 CPU DataWashing */
				|| ActivityName.equalsIgnoreCase(
						"CPU_DW_Clarification")/*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing
												 */) {
			// * ***** 02020 ********
			// ********** Sunil Kumar CR2 Phase 2*******************
			//////// //System.out.println("sunil:Endorsement 111");

			if (pEventName.equalsIgnoreCase("D")) {
				return Endorsement(pEventName, ActivityName);
			}
		} else if (ActivityName.equalsIgnoreCase("RM_Green_File")) {
			// * ************** 02020 *********
			// ********** Sunil Kumar CR2 Phase-2 29/11/2010*******************
			//////// //System.out.println("sunil:RM_Green_File");
			if (pEventName.equalsIgnoreCase("D")) {
				return RM_Green_File(pEventName, ActivityName);
			}
		} /**************** CR 18## ***********************************/
		// satish
		else if (ActivityName.equalsIgnoreCase("Co_Insurance")) {
			//////// //System.out.println("sandeep Save :Co_Insurance");
			formObject.setNGValue("CPI_q_CustomerName", formObject.getNGValue("CPI_CUSTOMER_NAME"));
			formObject.setNGValue("CPI_q_TotalPremium", formObject.getNGValue("CPI_toTAL_PREMIUM"));
			if (pEventName.equalsIgnoreCase("D")) {
				return CO_Insurance(pEventName, ActivityName);
			}
		} else if (ActivityName.equalsIgnoreCase("Co_Insurance_RM")) {
			//////// //System.out.println("sandeep Save :Co_Insurance");
			if (pEventName.equalsIgnoreCase("D")) {
				return CO_Insurance_RM(pEventName, ActivityName);
			}
		} // satish
		/**************** End CR 18## ***********************************/
		else if (ActivityName.equalsIgnoreCase("BSG_QC")) {
			return BSG_QC(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("UW_DEO")) {
			return UW_DEO(pEventName, ActivityName);
		}
		/***************************
		 * Vendor login & weather Product
		 ****************************/

		else if (ActivityName.equalsIgnoreCase("Vendor_Assignment")) {
			return Vendor_Assignment(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("Vendor1")) {
			return Vendor1(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("Vendor2")) {
			return Vendor2(pEventName, ActivityName);
		}

		/*************************
		 * End Vendor login & weather Product
		 **************************/
		/**********************
		 * Start Development in Omniflow CPI Alternate Inwarding Process 4.0
		 *************************/
		else if (ActivityName.equalsIgnoreCase("Client_Hold")) {
			return Client_Hold(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("Proposal_Release")) {
			return Proposal_Release(pEventName, ActivityName);
		}
		/**********************
		 * End Development in Omniflow CPI Alternate Inwarding Process 4.0
		 ***************************/

		/*
		 * =============================CR 42 Additional UW
		 * worksteps=============================
		 */ else if (ActivityName.equalsIgnoreCase("UW1")) {
			return UW1(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("UW2")) {
			return UW2(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("UW3")) {
			return UW3(pEventName, ActivityName);
		} /*
			 * ===========================End CR 42 Additional UW
			 * worksteps===========================
			 */ else if (ActivityName.equalsIgnoreCase("BSG Approver")) {
			return BSG_Approver(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("Rejected_To_IT")) {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					JOptionPane.showMessageDialog(null, "Please uncheck 'Rejected To IT' CheckBox");
					formObject.NGFocus("Corp_REJECTED_TO_IT");
					return 0;
				}
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					JOptionPane.showMessageDialog(null, "Please uncheck 'Rejected To IT' CheckBox");
					formObject.NGFocus("End_REJECTED_TO_IT");
					return 0;
				}
				/******
				 * CR 45 Additional changes to Capture Rejected to IT comments
				 ******/
				if (CheckMandatoryTextBox("CPI_IT_COMMENTS", "IT Comments") == 0) {
					formObject.NGFocus("CPI_IT_COMMENTS");
					return 0;
				}
				/****
				 * End CR 45 Additional changes to Capture Rejected to IT
				 * comments
				 ****/
			}
		} else if (ActivityName.equalsIgnoreCase("BSG_Clarification")
				|| /*
					 * =============================CR 42 Additional UW
					 * worksteps=============================
					 */ ActivityName.equalsIgnoreCase("UW1_Clarification")
				|| ActivityName.equalsIgnoreCase("UW2_Clarification")
				|| ActivityName.equalsIgnoreCase("UW3_Clarification")
				|| /*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */ ActivityName.equalsIgnoreCase(
						"CPUCustClarification") /* CR 46 CPU DataWashing */
				|| ActivityName.equalsIgnoreCase("RM_Clarification")
				|| ActivityName.equalsIgnoreCase("DEO_Clarification")
				|| ActivityName.equalsIgnoreCase("Corp_UWClarification")
				|| ActivityName.equalsIgnoreCase("BSG_Ap_Clarification")
				|| ActivityName.equalsIgnoreCase("ProcHubClarification")
				|| ActivityName.equalsIgnoreCase("PHPrintClarification")
				|| ActivityName.equalsIgnoreCase("RI_Clarification")
				// bhagat CR CPU_HEALTH
				|| ActivityName.equalsIgnoreCase("CPU_Clarification")
				|| ActivityName.equalsIgnoreCase("Vendor1Clarification")
				|| ActivityName.equalsIgnoreCase("Vendor2Clarification") // Vendor
																			// login
																			// &
																			// weather
																			// Product
		) {
			// Start of CR2 Phase 1
			String pasValue = "";// CPI PID Additional Points
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					// formObject.setNGValue("CPI_q_Transaction_ID",
					// formObject.getNGValue("CPI_TRANSACTION_ID")); //Vendor
					// login & weather Product CR
					formObject.setNGValue("CPI_q_Quote_No", formObject.getNGValue("CPI_QUOTE_NO"));
				}
			}
			// ******** 31/01/2011 ***********

			if (ActivityName.equalsIgnoreCase("RM_Clarification")
					|| ActivityName.equalsIgnoreCase("CPUCustClarification")
					|| ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				//////// //System.out.println("CR12 111");
				//////// //System.out.println("ravish" +
				//////// formObject.getNGValue("CPI_Process_Type"));

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					formObject.setNGValue("CPI_PAS", formObject.getNGValue("Corp_PAS"));
					formObject.setNGValue("CPI_SUM_INSURED", formObject.getNGValue("Corp_SUM_INSURED"));
					formObject.setNGValue("CPI_PRODUCT_NAME", formObject.getNGValue("Corp_PRODUCT_NAME"));
					formObject.setNGValue("CPI_TOTAL_PREMIUM", formObject.getNGValue("Corp_TOTAL_PREMIUM"));

					// *************Rohit q_variable(for corporate policy
					// insurance on 05-10-2010) *****

					formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
					formObject.setNGValue("CPI_q_ProductName", formObject.getNGValue("CPI_PRODUCT_NAME"));
					formObject.setNGValue("CPI_q_TotalPremium", formObject.getNGValue("CPI_TOTAL_PREMIUM"));
					// formObject.setNGValue("CPI_q_Transaction_ID",
					// formObject.getNGValue("CPI_TRANSACTION_ID"));//Vendor
					// login & weather Product CR
					formObject.setNGValue("CPI_q_Quote_No", formObject.getNGValue("CPI_QUOTE_NO"));

					// *************End ********************************

					formObject.setNGValue("CPI_RM_NAME", formObject.getNGValue("Corp_RM_NAME"));
					formObject.setNGValue("CPI_IL_LOCATION", formObject.getNGValue("Corp_IL_LOCATION"));
					/***************************
					 * PID-CPI process changes
					 ***************************/
					// formObject.setNGValue("CPI_MODE_OF_PAYMENT",
					// formObject.getNGValue("Corp_MODE_OF_PAYMENT"));
					System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + ActivityName);
					formObject.setNGValue("CPI_PID_PAYMENT_TYPE", formObject.getNGValue("CORP_PID_PAYMENT_TYPE"));// PID_CPI
																													// process
																													// changes
					// formObject.setNGValue("CPI_BANK_NAME_CD_NAME",
					// formObject.getNGValue("Corp_BANK_NAME_CD_NAME"));
					/***********************
					 * End PID-CPI process changes
					 ***************************/
				}
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					//////// //System.out.println("ravish12" +
					//////// formObject.getNGValue("CPI_Process_Type"));

					formObject.setNGValue("CPI_PAS", formObject.getNGValue("End_PAS"));
					formObject.setNGValue("CPI_PRODUCT_NAME", formObject.getNGValue("End_PRODUCT_NAME"));
					formObject.setNGValue("CPI_PRODUCT_TYPE", formObject.getNGValue("End_PRODUCT_TYPE")); // CR
																											// 12
					formObject.setNGValue("CPI_TOTAL_PREMIUM", formObject.getNGValue("End_TOTAL_PREMIUM"));
					formObject.setNGValue("CPI_RM_NAME", formObject.getNGValue("End_RM_NAME"));
					formObject.setNGValue("CPI_IL_LOCATION", formObject.getNGValue("End_IL_LOCATION"));
					/*
					 * formObject.setNGValue("CPI_MODE_OF_PAYMENT",
					 * formObject.getNGValue("End_MODE_OF_PAYMENT"));
					 * formObject.setNGValue("CPI_PID_PAYMENT_TYPE",
					 * formObject.getNGValue("End_PID_PAYMENT_TYPE"));//PID_CPI
					 * process changes
					 * formObject.setNGValue("CPI_BANK_NAME_CD_NAME",
					 * formObject.getNGValue("End_BANK_NAME_CD_NAME"));
					 * formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
					 * formObject.getNGValue("End_INST_NO_CD_NO_DEP_SLIP_NO"));
					 */ // Suraj
					System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + ActivityName);
					formObject.setNGValue("CPI_PID_PAYMENT_TYPE", formObject.getNGValue("End_PID_PAYMENT_TYPE"));// PID_CPI
																													// process
																													// changes
					/********************
					 * CR 46 CPU DataWashing
					 ******************/
					if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
						formObject.setNGValue("CPI_dMS_NO", formObject.getNGValue("End_DMS_NO"));
					}
					/******************
					 * End CR 46 CPU DataWashing
					 ****************/
					// *************Rohit q_variable(For Endorsement on
					// 05-10-2010) *******************
					formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
					formObject.setNGValue("CPI_q_ProductName", formObject.getNGValue("CPI_PRODUCT_NAME"));
					formObject.setNGValue("CPI_q_TotalPremium", formObject.getNGValue("CPI_TOTAL_PREMIUM"));
					formObject.setNGValue("CPI_q_EndorsementNo", formObject.getNGValue("CPI_ENDORSEMENT_NO"));
					// ************* End******************
					// ********************************************
				}
				//////// //System.out.println("abcdef");
				return Save_RMClarification(pEventName, ActivityName);

			}

			/*************************
			 * CPI PID Additional Points
			 *****************************/
			if (ActivityName.equalsIgnoreCase("DEO_Clarification")) {

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					pasValue = formObject.getNGValue("Corp_pas");
				} else {
					pasValue = formObject.getNGValue("End_pas");
				}
				//////// //System.out.println("pasValue DEO_Clarification in
				//////// if=== " + pasValue);
				/*
				 * if(pasValue != null &&
				 * pasValue.equalsIgnoreCase("Pathfinder")) {
				 * formObject.setNGValue("CPI_PROPOSAL_NO",
				 * formObject.getNGValue("Corp_PROPOSAL_NO"));//CPI PID
				 * Additional Points }
				 */

			}
			/*************************
			 * End CPI PID Additional Points
			 **************************/

			// End of CR2 Phase 1
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				//////// //System.out.println("formObject.getNGValueCPI_REJECTED_TO_IT"
				//////// + formObject.getNGValue("CPI_REJECTED_TO_IT"));
				if (ActivityName.equalsIgnoreCase("BSG_Clarification") || ActivityName.equalsIgnoreCase(
						"ProcHubClarification")/* bhagat CR CPU_HEALTH */
						|| ActivityName.equalsIgnoreCase(
								"CPU_Clarification")/*
													 * end bhagat CR CPU_HEALTH
													 */) {
					boolean excpflag = obj.toString().equalsIgnoreCase("R");
					return BSGPH_Clarification(excpflag);
				} else {
					if (!obj.toString().equalsIgnoreCase("R")) {
						formObject.setNGValue("CPI_Route_To", "");
						formObject.setNGEnable("CPI_Route_To", false);
						if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
							if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
								return 0;
							}
						}
					} else {
						//////// //System.out.println("abcdrf");
						if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
								|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
							//////// //System.out.println("10002");
							formObject.setNGEnable("CPI_Route_To", true);
							if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
								return 0;
							}
						} else {
							if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
								return 0;
							}
						}
					}

					// *************** 31/01/2011 ******************
					if (ActivityName.equalsIgnoreCase("DEO_Clarification")) {
						//////// //System.out.println("Mandatory Check
						//////// DEO_Clarification: " +
						//////// formObject.getNGValue("Corp_PAS"));
						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
							// **************** 31/01/2011 CR
							// **********************
							if (formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Premia")) {
								if (CheckMandatoryTextBox("CPI_QUOTE_NO", "Quote No") == 0) {
									return 0;
								}
								/*************************
								 * CPI PID Additional Points
								 *****************************/
								if (!formObject.getNGValue("CPI_QUOTE_NO").equalsIgnoreCase("")
										&& duplicateCheck("CPI_QUOTE_NO", formObject.getNGValue("CPI_QUOTE_NO")) == 0) {
									JOptionPane.showMessageDialog(null, "Quote No. already exists");
									formObject.NGFocus("CPI_QUOTE_NO");
									return 0;
								}

								/*************************
								 * End CPI PID Additional Points
								 **************************/
							}
							if (formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Pathfinder")) {
								if (CheckMandatoryTextBox("CPI_TRANSACTION_ID", "Transaction ID/ Quick ID") == 0) {
									return 0;
								}
								if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
										&& formObject.getNGValue("CPI_TRANSACTION_ID") != null
										&& !formObject.getNGValue("CPI_TRANSACTION_ID").equalsIgnoreCase("")) {
									String trn_id = formObject.getNGValue("CPI_TRANSACTION_ID");
									//////// //System.out.println("trn_id value
									//////// bsg_qc
									//////// in=="+formObject.getNGValue("CPI_TRANSACTION_ID"));
									if (trn_id.length() > 0 && trn_id.length() < 10) {
										//////// //System.out.println("CPI_TRANSACTION_ID
										//////// value deo clarification
										//////// in=="+formObject.getNGValue("CPI_TRANSACTION_ID"));
										JOptionPane.showMessageDialog(null, "Length of TRANSACTION ID ID is 10 digits");
										formObject.setNGLocked("CPI_TRANSACTION_ID", true);
										return 0;
									}
								}
							}

							// **************** End 31/01/2011 CR
							// **********************
						}
						/*************************
						 * CPI PID Additional Points
						 *****************************/

						//////// //System.out.println("pas value
						//////// DEO_Clarification=== " +
						//////// formObject.getNGValue("CPI_pas"));
						//////// //System.out.println("pasValue=== " +
						//////// pasValue);
						if (pasValue != null && pasValue.equalsIgnoreCase("Pathfinder")) {
							// formObject.setNGValue("CPI_PROPOSAL_NO",
							// formObject.getNGValue("Corp_PROPOSAL_NO"));//CPI
							// PID Additional Points

							//////// //System.out.println("CPI_PROPOSAL_NO value
							//////// deo clarification
							//////// in=="+formObject.getNGValue("CPI_PROPOSAL_NO"));
							//////// //System.out.println("Corp_PROPOSAL_NO
							//////// =="+formObject.getNGValue("Corp_PROPOSAL_NO"));
							if (CheckMandatoryTextBox("Corp_PROPOSAL_NO", "PROPOSAL_NO") == 0) {
								return 0;
							}
							String proposal_no = formObject.getNGValue("Corp_PROPOSAL_NO");
							if (proposal_no != null && !proposal_no.equals("") && proposal_no.length() > 0) {
								//////// //System.out.println("proposal_no value
								//////// deo_clarirication in=="+proposal_no);

								if (formObject.getNGValue("Corp_PROPOSAL_NO") != null
										&& !formObject.getNGValue("Corp_PROPOSAL_NO").equalsIgnoreCase("")
										&& validateType("Corp_PROPOSAL_NO", formObject.getNGValue("Corp_PROPOSAL_NO"),
												"OnlyNumeric", "PROPOSAL_NO") == 0) {
									//////// //System.out.println("CPI_PROPOSAL_NO
									//////// value
									//////// in=="+formObject.getNGValue("CPI_PROPOSAL_NO"));
									return 0;
								}
								if (proposal_no.length() > 0 && proposal_no.length() < 10) {
									JOptionPane.showMessageDialog(null, "Length of PROPOSAL No. is 10");
									return 0;
								}
								if (!formObject.getNGValue("Corp_PROPOSAL_NO").equalsIgnoreCase("")
										&& duplicateCheck("CPI_PROPOSAL_NO",
												formObject.getNGValue("Corp_PROPOSAL_NO")) == 0) {
									JOptionPane.showMessageDialog(null, "PROPOSAL No. already exists");
									formObject.NGFocus("Corp_PROPOSAL_NO");
									return 0;
								}
							}
						}

						/*************************
						 * End CPI PID Additional Points
						 **************************/
					}
					// *************** 31/01/2011 ******************
				}
			}
		} // bhagat CR CPU_HEALTH
		else if (ActivityName.equalsIgnoreCase("CPU_HEALTH") || ActivityName.equalsIgnoreCase("CPU_Approver")) { // CR-OMCPI-1314-05
																													// DataWashing
																													// -
																													// Mail_Management_Extension
			return CPU_HEALTH(pEventName, ActivityName);
		} // END bhagat CR CPU_HEALTH
		else if (ActivityName.equalsIgnoreCase("Corporate_UW") || ActivityName.equalsIgnoreCase("Re-Insurance")) {
			return Corporate_UW(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("PH_Print")) {
			return PH_Print(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("Processing Hub") || ActivityName.equalsIgnoreCase("PH_Complete")) { // CPI
																														// PID
																														// Additional
																														// Points
			return Processing_Hub(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("Coins_Lead_Policy")) {
			// if(formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate
			// Policy Insurance"))
			// {
			return Coins_Lead_Policy(pEventName, ActivityName);
			// }
		} else if (ActivityName.equalsIgnoreCase("BSG Dispatch")) {
			return BSG_Dispatch(pEventName, ActivityName);
		} /*********************
			 * CR 45 Network Partner
			 *****************************/
		else if (ActivityName.equalsIgnoreCase("Ins_Org_PF")) {
			return Ins_Org_PF(pEventName, ActivityName);
		}
		/*********************
		 * End CR 45 Network Partner
		 *************************/
		/***************************
		 * PID-CPI process changes
		 ***************************/
		else if (ActivityName.equalsIgnoreCase("COPS_Cust_Id")) {
			return COPS_Cust_Id(pEventName, ActivityName);
		}
		/***********************
		 * End PID-CPI process changes
		 ***************************/
		/*************************
		 * CPI PID Additional Points
		 *****************************/
		else if (ActivityName.equalsIgnoreCase("COPS_QC")) {
			return COPS_QC(pEventName, ActivityName);
		} else if (ActivityName.equalsIgnoreCase("COMPLETE_SYNC")) {
			return COMPLETE_SYNC(pEventName, ActivityName);
		}
		/*************************
		 * End CPI PID Additional Points
		 **************************/

		//////// //System.out.println("Exiting NGF_SaveNGFData at : " +
		//////// dateFormat1.format(new Date()));

		return 1;
	}

	public int PostSaveNGFData(String ActivityName, String pEventName) {
		//////// //System.out.println("Entering PostSaveNGFData at : " +
		//////// dateFormat1.format(new Date()));

		js = formObject.getJSObject();
		if (bError) {
			JOptionPane.showMessageDialog(null, "Can't Submit the Workitem, Error at the Server End.");
			return 0;
		}
		if (pEventName.equalsIgnoreCase("S")) {

			return 1;
		}
		if (pEventName.equalsIgnoreCase("D")) {
			/************
			 * CR-OMCPI-1314-01 Enhanced_CR Changed lastprocessedby to
			 * last_processed_by
			 ***************/
			//////// //System.out.println("userindex value:" +
			//////// Integer.toString(formObject.getUserId()));
			//////// //System.out.println("before setting value:" +
			//////// formObject.getNGValue("CPI_LAST_PROCESSED_BY"));
			formObject.setNGValue("CPI_LAST_PROCESSED_BY", Integer.toString(formObject.getUserId()));
			//////// //System.out.println("value$$$" +
			//////// formObject.getNGValue("CPI_LAST_PROCESSED_BY"));
			// formObject.setNGValue("CPI_PID_CCR_NUMBER",
			//////// Integer.toString(formObject.getUserId()));
			////////// //System.out.println("PID CCR Name$$$" +
			//////// formObject.getNGValue("CPI_PID_CCR_NUMBER"));
			//////// //System.out.println("test for changing reflect");
			/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
			return 1;
		}
		try {
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting PostSaveNGFData at : " +
		//////// dateFormat1.format(new Date()));

		return 1;
	}

	private void ngfUser_Validation(NGTextComponent ngtextcomponent) throws Exception {
	}

	private void ngfUser_Validation(Vector vector) {
	}

	public static String[] split(String s, char c) {
		Vector vector = new Vector();
		String s1 = new String();
		for (int i = 0; i < s.length(); i++) {
			if (s.charAt(i) == c) {
				vector.add(s1);
				s1 = new String();
			} else {
				s1 = s1 + s.charAt(i);
			}
		}
		vector.add(s1);
		String as[] = new String[vector.size()];
		for (int j = 0; j < as.length; j++) {
			as[j] = new String((String) vector.elementAt(j));
		}
		return as;
	}

	public boolean check_Numeric(String str, int iprefix, int ipostfix) {
		if (!ICICIval.validateText(str, "Amount")) {
			return false;
		}
		if (str.trim().equals(".") || ((str.indexOf(".") > 0) && str.indexOf(".") == (str.length() - 1))
				|| (str.indexOf(".") != str.lastIndexOf("."))) {
			//////// //System.out.println(2);
			return false;
		} else if (str.indexOf(".") != -1) {
			if ((str.substring(0, str.indexOf("."))).length() > iprefix) {
				//////// //System.out.println(3);
				return false;
			} else if ((str.substring(str.indexOf(".") + 1, str.length())).length() > ipostfix) {
				//////// //System.out.println(4);
				return false;
			}
		} else if (str.length() > iprefix) {
			return false;
		}
		return true;
	}

	/*****************************
	 * CR 28 by satish
	 *****************************/
	public boolean numericValidation(String str, int iprefix, int ipostfix, double value) {
		//////// //System.out.println("Inside infra commission validation :");
		//////// //System.out.println("value for comparision :" + value);
		if (!ICICIval.validateText(str, "Amount")) {
			return false;
		}
		if (str.trim().equals(".") || ((str.indexOf(".") > 0) && str.indexOf(".") == (str.length() - 1))
				|| (str.indexOf(".") != str.lastIndexOf(".")) || str.indexOf(".") == 0) {
			//////// //System.out.println(2);
			return false;
		} else if (str.indexOf(".") != -1) {
			if ((str.substring(0, str.indexOf("."))).length() > iprefix) {
				//////// //System.out.println(3);
				return false;
			} else if ((str.substring(str.indexOf(".") + 1, str.length())).length() > ipostfix) {
				//////// //System.out.println(4);
				return false;
			}
			double d = Double.valueOf(str).doubleValue();
			//////// //System.out.println("value to compare :" + value);
			//////// //System.out.println("value entered :" + d);
			if (d > value || d < 0) {
				return false;
			}
		} else if (str.indexOf(".") == -1) {
			//////// //System.out.println("value to compare b4 type conversion
			//////// value :" + value);
			int i_value = (int) value;
			//////// //System.out.println("value after type conversion i_value
			//////// :" + i_value);
			//////// //System.out.println("value to compare after type
			//////// conversion value :" + value);
			if (Integer.valueOf(str).intValue() > i_value) {
				//////// //System.out.println(4);
				return false;
			}
		} else if (str.length() > iprefix) {
			return false;
		}
		return true;
	}

	/***************************
	 * End CR 28 by satish
	 ***************************/
	private void CheckEnableOnChange(String strActivityName, String strControlName) {
		//////// //System.out.println("Entering CheckEnableOnChange at : " +
		//////// dateFormat1.format(new Date()));

		if (strActivityName.equalsIgnoreCase("Endorsement") || strActivityName.equalsIgnoreCase("CPU_Assignment")
				|| /* Marine Yogesh */ strActivityName.equalsIgnoreCase(
						"COPS_Policy_Endr") /* Marine Yogesh */
				|| strActivityName.equalsIgnoreCase(
						"CPU_Data_Washing")/* CR 46 CPU DataWashing */) {
			{
				if (strControlName.equalsIgnoreCase("CPI_Type_of_Endorsement")) {
					if (formObject.getNGValue(strControlName).equalsIgnoreCase("External endorsement")) {
						formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
						formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
						formObject.setNGListIndex("CPI_INTERNAL_ENDORSEMENT_TYPE", 0);
					} else if (formObject.getNGValue(strControlName).equalsIgnoreCase("Internal Endorsement")) {
						formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", true);
						formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", true);
						formObject.setNGListIndex("CPI_EXTERNAL_ENDORSEMENT_TYPE", 0);
					} else {
						formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGLocked("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
						formObject.setNGListIndex("CPI_INTERNAL_ENDORSEMENT_TYPE", 0);
						formObject.setNGListIndex("CPI_EXTERNAL_ENDORSEMENT_TYPE", 0);
					}

				}
			}
			/*****************************
			 * CR 38 by satish
			 *****************************/
			if (strControlName.equalsIgnoreCase("CPI_BUSINESS_TYPE")) {
				if (formObject.getNGValue(strControlName).equalsIgnoreCase("--Select--")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("Direct")) {
					//////// //System.out.println("validation : disabling
					//////// CPI_NAME_OF_BROKER_AGENT");
					formObject.setNGEnable("CPI_NAME_OF_BROKER_AGENT", true);
					formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", true);
					formObject.setNGValue("CPI_NAME_OF_BROKER_AGENT", "");
					// formObject.setNGValue("CPI_PERCENTAGE_OF_COMMISION","");
					formObject.setNGEnable("CPI_NAME_OF_BROKER_AGENT", false);
					formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", false);
					// formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION",false);
				} /******
					 * CR-OMCPI-1314-02 FIG COB CR (Added COB in Business_type)
					 ******/
				else if (formObject.getNGValue(strControlName).equalsIgnoreCase("Agent")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("broker")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("COB")) {
					//////// //System.out.println("validation :Enabling
					//////// CPI_NAME_OF_BROKER_AGENT");
					formObject.setNGEnable("CPI_NAME_OF_BROKER_AGENT", true);
					formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", false);
					// formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT",true);
					// formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION",true);
				}
				/******
				 * End CR-OMCPI-1314-02 FIG COB CR (Added COB in Business_type)
				 ******/
			}
			if (strControlName.equalsIgnoreCase("CPI_NAME_OF_BROKER_AGENT")) {
				//////// //System.out.println("Inside CPI_NAME_OF_BROKER_AGENT
				//////// validation: ");
				if (formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT").equalsIgnoreCase("")) {
					//////// //System.out.println("setting CPI_IBANK_AGENT to
					//////// null: ");
					formObject.setNGValue("CPI_IBANK_AGENT", "");
				} else {
					//////// //System.out.println("setting CPI_IBANK_AGENT : ");
					String agent_name = formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT");
					String iBank_agent = getAgentStatus(agent_name);
					//////// //System.out.println("iBank_agent: " +
					//////// iBank_agent);
					if (iBank_agent.equalsIgnoreCase("Y")) {
						formObject.setNGValue("CPI_IBANK_AGENT", "Yes");
					} else {
						formObject.setNGValue("CPI_IBANK_AGENT", "No");
					}
				}
				//////// //System.out.println("CPI_IBANK_AGENT: " +
				//////// formObject.getNGValue("CPI_IBANK_AGENT"));
			}
			/***************************
			 * End CR 38 by satish
			 ***************************/
			// sadik
			/*
			 * // //System.out.println("Sadik CR9 CPU_Data_Washing change IAS");
			 * if(strActivityName.equalsIgnoreCase("CPU_Data_Washing")){ //
			 * //System.out.
			 * println("Sadik CR9 CPI_CHANGED_MAIL_STATUS change IAS"); if
			 * (strControlName.equalsIgnoreCase("CPI_CHANGED_MAIL_STATUS") &&
			 * formObject.getNGValue(strControlName).
			 * equalsIgnoreCase("Pending for Approval")) { //
			 * //System.out.println("Sadik CR9 CPI_IAS_ID change IAS");
			 * formObject.setNGEnable("CPI_IAS_ID", true);
			 * formObject.setNGLocked("CPI_IAS_ID", true); } else{ //
			 * //System.out.println("Sadik CR9 CPI_IAS_ID else change IAS");
			 * formObject.setNGValue("CPI_IAS_ID", "");
			 * formObject.setNGEnable("CPI_IAS_ID", false);
			 * formObject.setNGLocked("CPI_IAS_ID", true); } }
			 */
			// end
		}
		if (strActivityName.equalsIgnoreCase("RM_Green_File")) {
			if (strControlName.equalsIgnoreCase("CPI_PAS")) {
				if (formObject.getNGValue(strControlName).equalsIgnoreCase("--Select--")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("")) {
					formObject.setNGValue("CPI_QUOTE_NO", "");
					formObject.setNGLocked("CPI_QUOTE_NO", false);
					formObject.setNGValue("CPI_TRANSACTION_ID", "");
					formObject.setNGLocked("CPI_TRANSACTION_ID", false);

				} else if (formObject.getNGValue(strControlName).equalsIgnoreCase("Premia")) {
					formObject.setNGLocked("CPI_QUOTE_NO", true);
					formObject.setNGValue("CPI_TRANSACTION_ID", "");
					formObject.setNGLocked("CPI_TRANSACTION_ID", false);
				} else {
					formObject.setNGValue("CPI_QUOTE_NO", "");
					formObject.setNGLocked("CPI_QUOTE_NO", false);
					formObject.setNGLocked("CPI_TRANSACTION_ID", true);
					formObject.setNGTabEnable("CPI_QUOTE_NO", 1, false);
				}

			}

			if (strControlName.equalsIgnoreCase("CPI_BUSINESS_TYPE")) {
				if (formObject.getNGValue(strControlName).equalsIgnoreCase("--Select--")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("Direct")) {
					//////// //System.out.println("validation : disabling
					//////// CPI_NAME_OF_BROKER_AGENT");
					formObject.setNGEnable("CPI_NAME_OF_BROKER_AGENT", true);
					formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", true);
					formObject.setNGValue("CPI_NAME_OF_BROKER_AGENT", "");
					formObject.setNGValue("CPI_PERCENTAGE_OF_COMMISION", "");
					/*****************************
					 * CR 28 by satish
					 *****************************/
					formObject.setNGEnable("CPI_NAME_OF_BROKER_AGENT", false);
					formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", false);
					/*****************************
					 * CR 28 by satish
					 *****************************/
					formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", false);
				} /******
					 * CR-OMCPI-1314-02 FIG COB CR (Added COB in Business_type)
					 ******/
				else if (formObject.getNGValue(strControlName).equalsIgnoreCase("Agent")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("broker")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("COB")) {
					/*****************************
					 * CR 28 by satish
					 *****************************/
					//////// //System.out.println("validation :Enabling
					//////// CPI_NAME_OF_BROKER_AGENT");
					formObject.setNGEnable("CPI_NAME_OF_BROKER_AGENT", true);
					formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", false);
					// formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT",true);
					/*****************************
					 * End CR 28 by satish
					 *****************************/
					formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", true);
				}
				/****
				 * End CR-OMCPI-1314-02 FIG COB CR (Added COB in Business_type)
				 ****/
			}
			/*****************************
			 * CR 28 by satish
			 *****************************/
			if (strControlName.equalsIgnoreCase("CPI_NAME_OF_BROKER_AGENT")) {
				//////// //System.out.println("Inside CPI_NAME_OF_BROKER_AGENT
				//////// validation: ");
				if (formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT").equalsIgnoreCase("")) {
					//////// //System.out.println("setting CPI_IBANK_AGENT to
					//////// null: ");
					formObject.setNGValue("CPI_IBANK_AGENT", "");
				} else {
					//////// //System.out.println("setting CPI_IBANK_AGENT : ");
					String agent_name = formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT");
					String iBank_agent = getAgentStatus(agent_name);
					//////// //System.out.println("iBank_agent: " +
					//////// iBank_agent);
					if (iBank_agent.equalsIgnoreCase("Y")) {
						formObject.setNGValue("CPI_IBANK_AGENT", "Yes");
					} else {
						formObject.setNGValue("CPI_IBANK_AGENT", "No");
					}
				}
				//////// //System.out.println("CPI_IBANK_AGENT: " +
				//////// formObject.getNGValue("CPI_IBANK_AGENT"));
			}
			/***************************
			 * End CR 28 by satish
			 ***************************/
			if (strControlName.equalsIgnoreCase("CPI_COINSURANCE")) {
				if (formObject.getNGValue(strControlName).equalsIgnoreCase("--Select--")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("No Co-Insurance")) {
					formObject.setNGValue("CPI_NAME_OF_LEADER", "");
					formObject.setNGValue("CPI_LEADERS_POLICY_NO", "");
					formObject.setNGValue("CPI_DIVISIONAL_OFFICE_CODE", "");
					formObject.setNGValue("CPI_PERCENTAGE_SHARE", "");
					formObject.setNGLocked("CPI_NAME_OF_LEADER", false);
					formObject.setNGLocked("CPI_LEADERS_POLICY_NO", false);
					formObject.setNGLocked("CPI_DIVISIONAL_OFFICE_CODE", false);
					formObject.setNGLocked("CPI_PERCENTAGE_SHARE", false);
				} else if (formObject.getNGValue(strControlName).equalsIgnoreCase("Leader")) {
					formObject.setNGValue("CPI_NAME_OF_LEADER", "ICICI Lombard");
					formObject.setNGLocked("CPI_PERCENTAGE_SHARE", true);

				} else if (formObject.getNGValue(strControlName).equalsIgnoreCase("Follower")
						&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
					formObject.setNGLocked("CPI_LEADERS_POLICY_NO", true);
					formObject.setNGLocked("CPI_PERCENTAGE_SHARE", true);
					//////// //System.out.println("CPI_COINSURANCE Follower
					//////// case: ");

				}

			}

			if (strControlName.equalsIgnoreCase("CPI_MODE_OF_PAYMENT")) {
				if (formObject.getNGValue(strControlName).equalsIgnoreCase("CD")) {
					formObject.setNGLocked("CPI_CURRENT_BALANCE", true);
				} else {
					formObject.setNGValue("CPI_CURRENT_BALANCE", "");
					formObject.setNGLocked("CPI_CURRENT_BALANCE", false);
				}
			}
		}

		if ((strActivityName.equalsIgnoreCase("BSG_QC")) && strControlName.equalsIgnoreCase("CORP_PAS")
				&& (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
			//////// //System.out.println("12121212");
			// ====== Yogendra =============
			//////// //System.out.println("33333322" +
			//////// formObject.getNGValue("CORP_PAS"));
			//////// //System.out.println("33333323" +
			//////// formObject.getNGValue("CPI_PAS"));

			if (formObject.getNGValue("CORP_PAS").equalsIgnoreCase("--Select--")
					|| formObject.getNGValue("CORP_PAS").equalsIgnoreCase("")) {
				//////// //System.out.println("3333332111111");
				formObject.setNGValue("CPI_QUOTE_NO", "");
				formObject.setNGLocked("CPI_QUOTE_NO", false);
				formObject.setNGValue("CPI_TRANSACTION_ID", "");
				formObject.setNGLocked("CPI_TRANSACTION_ID", false);

			} else if (formObject.getNGValue("CORP_PAS").equalsIgnoreCase("Premia")) {
				//////// //System.out.println("3333332444");
				formObject.setNGValue("CPI_TRANSACTION_ID", "");
				formObject.setNGLocked("CPI_TRANSACTION_ID", false);
				formObject.setNGLocked("CPI_QUOTE_NO", true);
			} else if (formObject.getNGValue("CORP_PAS").equalsIgnoreCase("Pathfinder")) {
				//////// //System.out.println("3333332551111");
				formObject.setNGValue("CPI_QUOTE_NO", "");
				formObject.setNGLocked("CPI_QUOTE_NO", false);
				formObject.setNGLocked("CPI_TRANSACTION_ID", true);
				formObject.setNGTabEnable("CPI_QUOTE_NO", 1, false);
			}
			// ============ Yogendra ==========

		}

		if (strActivityName.equalsIgnoreCase("RM_Clarification")) {
			if (strControlName.equalsIgnoreCase("Corp_PAS")) {
				if (formObject.getNGValue(strControlName).equalsIgnoreCase("--Select--")
						|| formObject.getNGValue(strControlName).equalsIgnoreCase("")) {
					formObject.setNGValue("CPI_QUOTE_NO", "");
					formObject.setNGLocked("CPI_QUOTE_NO", false);
					formObject.setNGValue("CPI_TRANSACTION_ID", "");
					formObject.setNGLocked("CPI_TRANSACTION_ID", false);

				} else if (formObject.getNGValue(strControlName).equalsIgnoreCase("Premia")) {
					formObject.setNGLocked("CPI_QUOTE_NO", true);
					formObject.setNGValue("CPI_TRANSACTION_ID", "");
					formObject.setNGLocked("CPI_TRANSACTION_ID", false);
				} else {
					formObject.setNGValue("CPI_QUOTE_NO", "");
					formObject.setNGLocked("CPI_QUOTE_NO", false);
					formObject.setNGLocked("CPI_TRANSACTION_ID", true);
					formObject.setNGTabEnable("CPI_QUOTE_NO", 1, false);
				}
			}
		}

		if (strActivityName.equalsIgnoreCase("UW_DEO")) {
			//////// //System.out.println("1" +
			//////// formObject.getNGValue("CPI_Process_Type"));
			//////// //System.out.println("2" + strControlName);
			//////// //System.out.println("3" +
			//////// formObject.getNGValue("Corp_REJECTED_TO_IT"));
			//////// //System.out.println("4" +
			//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_DEO_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					formObject.setNGEnable("CPI_UW_DEO_SEND_TO", true);
					//////// //System.out.println("10003");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
				}
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if (strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_DEO_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					formObject.setNGEnable("CPI_UW_DEO_SEND_TO", true);
					//////// //System.out.println("10004");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
				}
			}
			// *************************** OTC **************************
			/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
			// Commenting OTC condition
			/*
			 * if
			 * (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("OTC"
			 * )){ formObject.setNGEnable("CPI_UW_DEO_SEND_TO",false); }
			 */
			/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
			// ***************************End OTC **************************
		}
		/*
		 * =============================CR 42 Additional UW
		 * worksteps=============================
		 */
		if (strActivityName.equalsIgnoreCase("UW1")) {
			//////// //System.out.println("1" +
			//////// formObject.getNGValue("CPI_Process_Type"));
			//////// //System.out.println("2" + strControlName);
			//////// //System.out.println("3" +
			//////// formObject.getNGValue("Corp_REJECTED_TO_IT"));
			//////// //System.out.println("4" +
			//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);// "CPI_PH_PRINT_OPTION"
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					formObject.setNGEnable("CPI_UW_SEND_TO", true);
					//////// //System.out.println("10005");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if (strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("raviformObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGEnable("CPI_UW_SEND_TO", true);
					//////// //System.out.println("10006");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
		}
		if (strActivityName.equalsIgnoreCase("UW2")) {
			//////// //System.out.println("1" +
			//////// formObject.getNGValue("CPI_Process_Type"));
			//////// //System.out.println("2" + strControlName);
			//////// //System.out.println("3" +
			//////// formObject.getNGValue("Corp_REJECTED_TO_IT"));
			//////// //System.out.println("4" +
			//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);// "CPI_PH_PRINT_OPTION"
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					formObject.setNGEnable("CPI_UW_SEND_TO", true);
					//////// //System.out.println("10005");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if (strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("raviformObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGEnable("CPI_UW_SEND_TO", true);
					//////// //System.out.println("10006");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
		}
		if (strActivityName.equalsIgnoreCase("UW3")) {
			//////// //System.out.println("1" +
			//////// formObject.getNGValue("CPI_Process_Type"));
			//////// //System.out.println("2" + strControlName);
			//////// //System.out.println("3" +
			//////// formObject.getNGValue("Corp_REJECTED_TO_IT"));
			//////// //System.out.println("4" +
			//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);// "CPI_PH_PRINT_OPTION"
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					formObject.setNGEnable("CPI_UW_SEND_TO", true);
					//////// //System.out.println("10005");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if (strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("raviformObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGEnable("CPI_UW_SEND_TO", true);
					//////// //System.out.println("10006");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
		}
		/*
		 * ===========================End CR 42 Additional UW
		 * worksteps===========================
		 */
		// bhagat CPU_HEALTH
		if (strActivityName.equalsIgnoreCase("CPU_HEALTH")) {
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);// "CPI_PH_PRINT_OPTION"
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if (strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("raviformObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
		}
		// end bhagat CPU_HEALTH

		// ******************* OTC ******************************
		if (strActivityName.equalsIgnoreCase("BSG Approver")) {
			//////// //System.out.println("1" +
			//////// formObject.getNGValue("CPI_Process_Type"));
			//////// //System.out.println("2" + strControlName);
			//////// //System.out.println("3" +
			//////// formObject.getNGValue("Corp_REJECTED_TO_IT"));
			//////// //System.out.println("4" +
			//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);// "CPI_PH_PRINT_OPTION"
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					formObject.setNGEnable("CPI_UW_SEND_TO", true);
					//////// //System.out.println("10005");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if (strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGListIndex("CPI_PH_PRINT_OPTION", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("raviformObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGEnable("CPI_UW_SEND_TO", true);
					//////// //System.out.println("10006");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
					formObject.setNGEnable("CPI_PH_PRINT_OPTION", true);
				}
			}
			// *************************** OTC **************************
			/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
			/*
			 * if
			 * (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("OTC"
			 * )) {
			 */ // Commenting OTC condition
			formObject.setNGValue("Label6", "BSG Approver Field");
			formObject.setNGValue("Label10", "BSG Approver Send To");
			/****************** CR 24 *************************/
			// formObject.setNGListIndex("CPI_UW_SEND_TO",1);
			formObject.setNGEnable("CPI_UW_SEND_TO", true);
			/****************** End CR 24 *************************/
			formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
			// } //Commenting OTC condition
			/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
			// ***************************End OTC **************************
		}

		// ******************* End OTC ******************************

		if (strActivityName.equalsIgnoreCase("Corporate_UW") || strActivityName.equalsIgnoreCase("PH_Print")
				|| strActivityName.equalsIgnoreCase("BSG_Dispatch") || strActivityName.equalsIgnoreCase("Re-Insurance")
				|| strActivityName.equalsIgnoreCase("RI_Clarification")) {
			// **********CR 24********************************//
			// Sadik
			String prevWrkStep = formObject.getNGValue("CPI_PREV_WRK_STEP");
			// end
			if (strActivityName.equalsIgnoreCase("Corporate_UW")) {
				// Sadik
				// //System.out.println("Sadik CR9 on change for
				// CPI_CORP_UW_SEND_TO");
				if (prevWrkStep.equalsIgnoreCase("CPU_Data_Washing")) {
					formObject.setNGListIndex("CPI_CORP_UW_SEND_TO", 1);
					formObject.setNGEnable("CPI_CORP_UW_SEND_TO", false);
					formObject.setNGLocked("CPI_CORP_UW_SEND_TO", false);
				}
				// end
				else {
					if (formObject.getNGValue("CPI_REINSURANCE_CASE").equalsIgnoreCase("Yes")) {
						formObject.setNGListIndex("CPI_CORP_UW_SEND_TO", 0);
						formObject.setNGEnable("CPI_CORP_UW_SEND_TO", false);
						formObject.setNGLocked("CPI_CORP_UW_SEND_TO", false);
					} else {
						formObject.setNGEnable("CPI_CORP_UW_SEND_TO", true);
						formObject.setNGLocked("CPI_CORP_UW_SEND_TO", true);
					}
				}
			}
			// *******END CR 24********************************//
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					if (!strActivityName.equalsIgnoreCase("Re-Insurance")
							&& !strActivityName.equalsIgnoreCase("RI_Clarification")) {
						// ****** Sunil Kumar *** For desableing
						//////// //System.out.println("10001");
						formObject.setNGEnable("CPI_ROUTE_TO", true);
					}
				}

			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if (strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("10008");
					if (!strActivityName.equalsIgnoreCase("Re-Insurance")
							&& !strActivityName.equalsIgnoreCase("RI_Clarification")) {
						formObject.setNGEnable("CPI_ROUTE_TO", true);
					}
				}
			}
		}
		if (strActivityName.equalsIgnoreCase("Processing Hub")) {
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))
						|| (strControlName.equalsIgnoreCase("CPI_Withdrawn_Status")
								&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("10009");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
				}
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if ((strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true"))
						|| (strControlName.equalsIgnoreCase("CPI_Withdrawn_Status")
								&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("10010");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
				}
			}
		}
		if (strActivityName.equalsIgnoreCase("BSG_Clarification")
				|| strActivityName.equalsIgnoreCase("BSG_Ap_Clarification")
				|| /*
					 * =============================CR 42 Additional UW
					 * worksteps=============================
					 */ strActivityName.equalsIgnoreCase("UW1_Clarification")
				|| strActivityName.equalsIgnoreCase("UW2_Clarification")
				|| strActivityName.equalsIgnoreCase("UW3_Clarification")
				|| /*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */ strActivityName.equalsIgnoreCase("RM_Clarification")
				|| strActivityName.equalsIgnoreCase("DEO_Clarification")
				|| strActivityName.equalsIgnoreCase("Corp_UWClarification")
				|| strActivityName.equalsIgnoreCase("ProcHubClarification")
				// bhagat CR CPU_HEALTH
				|| strActivityName.equalsIgnoreCase("CPU_Clarification") // end
																			// bhagat
																			// CR
																			// CPU_HEALTH
		) {
			//////// //System.out.println("1" +
			//////// formObject.getNGValue("CPI_Process_Type"));
			//////// //System.out.println("2" + strControlName);
			//////// //System.out.println("3" +
			//////// formObject.getNGValue("Corp_REJECTED_TO_IT"));
			//////// //System.out.println("4" +
			//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				if ((strControlName.equalsIgnoreCase("Corp_REJECTED_TO_IT")
						&& formObject.getNGValue("Corp_REJECTED_TO_IT").equalsIgnoreCase("true"))) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("10011");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
				}
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				if (strControlName.equalsIgnoreCase("End_REJECTED_TO_IT")
						&& formObject.getNGValue("End_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					//////// //System.out.println("formObject.getNGValue" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					formObject.setNGListIndex("CPI_ROUTE_TO", 0);
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else if (strControlName.equalsIgnoreCase("CPI_REJECTED_TO_IT")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					formObject.setNGEnable("CPI_ROUTE_TO", false);
				} else {
					//////// //System.out.println("10012");
					formObject.setNGEnable("CPI_ROUTE_TO", true);
				}
			}
		}
		//////// //System.out.println("Exiting CheckEnableOnChange at : " +
		//////// dateFormat1.format(new Date()));
	}

	/* CR-OMCPI-1314-03 CPU DataWashing Start */
	private int CPU_Assignment(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering CPU_Assignment at : " +
		//////// dateFormat1.format(new Date()));
		// String strTotalPremium="";
		try {
			if (pEventName.equalsIgnoreCase("S")) {
			} else if (pEventName.equalsIgnoreCase("D")) {
				if (formObject.getNGValue("CPI_CPU_ASSIGN_TO").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill Assign To.");
					formObject.NGFocus("CPI_CPU_ASSIGN_TO");
					return 0;
				}
				if (formObject.getNGValue("CPI_RM_ID").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill RM ID");
					formObject.NGFocus("CPI_RM_ID");
					return 0;
				}
				// ============= RM ID Validation at Assignment
				// ====================
				//////// //System.out.println("RM ID Validation:Assignment");
				String sResult = "";
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil00:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);

				// ============= Check RM User in the OmniFlow
				// ====================
				String sQuery = "SELECT count(1) FROM PDBUSER where useralive = 'Y' and USERNAME='" + sCPI_RM_ID + "'";
				//////// //System.out.println("sunil3:Assignment:" + sQuery);
				ArrayList getUser = formObject.getNGDataFromDataSource(sQuery, 1);
				String s_RMUser = (getUser.get(0)).toString();
				s_RMUser = s_RMUser.substring(s_RMUser.indexOf("[") + 1, s_RMUser.indexOf("]"));
				//////// //System.out.println("s_RMUser: " + s_RMUser);
				int iRMValue = Integer.parseInt(s_RMUser);
				//////// //System.out.println("iRMValue: " + iRMValue);

				// *********** Checking RM USer Exist status ****************
				if (iRMValue > 0) {
					// ************* RM ID Locked Status ***************
					/*
					 * sQuery="SELECT count(1) FROM ng_rm_master where EMP_CODE='"
					 * +sCPI_RM_ID+"'"; ////////
					 * //System.out.println("sunil3:Assignment:"+sQuery);
					 * ArrayList
					 * getReason=formObject.getNGDataFromDataSource(sQuery,1);
					 * String s_Field_Value=(getReason.get(0)).toString();
					 * s_Field_Value=s_Field_Value.substring(s_Field_Value.
					 * indexOf("[")+1,s_Field_Value.indexOf("]")); ////////
					 * //System.out.println("s_Field_Value: "+s_Field_Value);
					 * int iValue = Integer.parseInt(s_Field_Value); ////////
					 * //System.out.println("iValue: "+iValue); // ***********
					 * Checking RM USer Exist status **************** if
					 * (iValue>0) { ////////
					 * //System.out.println("RM ID Found:");
					 * sQuery="SELECT USERLOCKED FROM USERSECURITY WHERE USERINDEX = (SELECT USERINDEX FROM PDBUSER WHERE USERNAME ='"
					 * +sCPI_RM_ID+"')"; // *********** Checking RM Locked
					 * status **************** ////////
					 * //System.out.println("sQuery: "+sQuery); ArrayList
					 * getRMLockedStatus=formObject.getNGDataFromDataSource(
					 * sQuery,1); ////////
					 * //System.out.println("getRMLockedStatussize(): "
					 * +getRMLockedStatus.size()); String
					 * s_Value=(getRMLockedStatus.get(0)).toString();
					 * s_Value=s_Value.substring(s_Value.indexOf("[")+1,s_Value.
					 * indexOf("]")); ////////
					 * //System.out.println("s_Value: "+s_Value);
					 * if(s_Value.equalsIgnoreCase("Y")) { ////////
					 * //System.out.println("RM ID Found but is Locked:");
					 * JOptionPane.showMessageDialog(
					 * null,"Specified RM ID is Locked.");
					 * formObject.NGFocus("CPI_RM_ID"); return 0; } //
					 * *********** End of Checking RM Locked status
					 * **************** } else { ////////
					 * //System.out.println("RM ID Not Found:");
					 * JOptionPane.showMessageDialog(
					 * null,"RM ID does not exist in Master.");
					 * formObject.NGFocus("CPI_RM_ID"); return 0; }
					 */
				} else {
					//////// //System.out.println("RM ID Not Found:");
					JOptionPane.showMessageDialog(null, "RM ID does not exist in OmniFlow System or Inactive.");
					formObject.NGFocus("CPI_RM_ID");
					return 0;
				}
				// ============= End Check RM User in the OmniFlow
				// ====================
				if (formObject.getNGValue("CPI_RM_NAME").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill RM Name");
					formObject.NGFocus("CPI_RM_NAME");
					return 0;
				}

				if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")) {
					if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
						return 0;
					}
				}

				// FR;
				// **************************Mail Management Extension
				// (S)[FR-5.0 & 6.0]**************************
				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				String sflag = "Yes";
				url = "AddFolder.jsp?Process=CPI" + "&Pid=" + sWIName + "&isexistingpath=" + sflag + "&userId="
						+ sUserName + "&cabinetName=ilombardcabinet";
				showMailPage(url, "docupload");
				// **************************Mail Management Extension (E)
				// [FR-5.0 & 6.0]**************************
				// FR;
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting CPU_Assignment at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	/* CR-OMCPI-1314-03 CPU DataWashing End */
	private int Endorsement(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Endorsement at : " +
		//////// dateFormat1.format(new Date()));
		String strTotalPremium = "";
		try {
			if (pEventName.equalsIgnoreCase("S")) {
				// Sadik FR7 Enabling Btn_GeneratePdf
				// //System.out.println("Sadik FR7 Enabling
				// Btn_GeneratePdf:"+pEventName);
				formObject.setNGEnable("Btn_GeneratePdf", true);
				// end
				/*****************************
				 * CR 38 by satish
				 *****************************/
				// Function to validate that commission is not more than 5.00
				if (!formObject.getNGValue("CPI_INFRA_COMMISSION").equalsIgnoreCase("")) {
					if (!numericValidation(formObject.getNGValue("CPI_INFRA_COMMISSION"), 1, 2, 5.00)) {
						JOptionPane.showMessageDialog(null, "Enter valid Infra commision");
						formObject.NGFocus("CPI_INFRA_COMMISSION");
						return 0;
					}
				}
				/***************************
				 * End CR 38 by satish
				 ***************************/
				// added by ravi on 25/03/2010
				/*******************************
				 * CR 32 by satish
				 ********************************/
				if (!formObject.getNGValue("CPI_ENDORSEMENT_NO").equals("")) {
					if (duplicateEndNo(formObject.getNGValue("CPI_ENDORSEMENT_NO"))) {
						JOptionPane.showMessageDialog(null, "Endorsement Number Already Exists");
						formObject.NGFocus("CPI_ENDORSEMENT_NO");
						return 0;
					}
					/*
					 * else { String
					 * m_endno=formObject.getNGValue("CPI_ENDORSEMENT_NO"); int
					 * maxVal=maxEndNo(m_endno); ////////
					 * //System.out.println("maxVal : "+maxVal); String
					 * l_endno=m_endno.substring(m_endno.lastIndexOf("/")+1);
					 * //////// //System.out.println("l_endno : "+l_endno); int
					 * l_endnoVal = Integer.parseInt(l_endno); ////////
					 * //System.out.println("l_endnoVal: "+l_endnoVal);
					 * if(l_endnoVal<=maxVal) { JOptionPane.showMessageDialog(
					 * null,"Invalid Endorsement Number");
					 * formObject.NGFocus("CPI_ENDORSEMENT_NO"); return 0; } }
					 */
				}
				/*******************************
				 * End of CR 32
				 ***********************************/
				if (!formObject.getNGValue("CPI_TOTAL_PREMIUM").equals("")) {
					if ((formObject.getNGValue("CPI_TOTAL_PREMIUM").startsWith("+")
							|| formObject.getNGValue("CPI_TOTAL_PREMIUM").startsWith("-"))
							&& formObject.getNGValue("CPI_TOTAL_PREMIUM").length() > 1) {
						strTotalPremium = formObject.getNGValue("CPI_TOTAL_PREMIUM").substring(1,
								(formObject.getNGValue("CPI_TOTAL_PREMIUM").length()));
					}
					if (ICICIval.validateText("" + formObject.getNGValue("CPI_TOTAL_PREMIUM").charAt(0), "Number")) {
						strTotalPremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
					}
					if (!check_Numeric(strTotalPremium, 13, 2)) {
						JOptionPane.showMessageDialog(null, "Enter valid total premium");
						formObject.setNGValue("CPI_TOTAL_PREMIUM", "");
						formObject.NGFocus("CPI_TOTAL_PREMIUM");
						return 0;
					}
				}
				//
				/*******************************
				 * CR 44 by satish
				 ****************************/
				if (!check_Numeric(formObject.getNGValue("CPI_OUR_SHARE_PREMIUM"), 13, 2)) {
					JOptionPane.showMessageDialog(null, "Enter valid Our share premium");
					formObject.setNGValue("CPI_OUR_SHARE_PREMIUM", "");
					formObject.NGFocus("CPI_OUR_SHARE_PREMIUM");
					return 0;
				}
				/****************************
				 * end CR 44 by satish
				 ***************************/
				if (!check_Numeric(formObject.getNGValue("CPI_SUM_INSURED"), 20, 5)) {
					JOptionPane.showMessageDialog(null, "Enter valid SUM INSURED");
					formObject.NGFocus("CPI_SUM_INSURED");
					return 0;
				}
				if (!ICICIval.validateText(formObject.getNGValue("CPI_INSTRUMENT_AMOUNT"), "Number")) {
					JOptionPane.showMessageDialog(null, "Enter valid Instrument Amount");
					formObject.NGFocus("CPI_INSTRUMENT_AMOUNT");
					return 0;
				}

				// Validation changed by Dinesh Kumar on 30Jun2010 to allow all
				// special characters
				if (!ICICIval.validateText(formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO"), "GeneralTextMask")) {
					JOptionPane.showMessageDialog(null, "Enter valid Inst. No./CD No./Dep. Slip No");
					formObject.NGFocus("CPI_INST_NO_CD_NO_DEP_SLIP_NO");
					return 0;
				}

				/***************
				 * Start CR-OMCPI-1314-04 URN No
				 *****************/
				if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")) {
					String urnDateStatus = "";
					if (formObject.getNGValue("CPI_eNDORSEMENT_EFFECTIVE_DATE") != null
							&& !formObject.getNGValue("CPI_eNDORSEMENT_EFFECTIVE_DATE").equalsIgnoreCase("")) {
						urnDateStatus = getFinancialYear(formObject.getNGValue("CPI_eNDORSEMENT_EFFECTIVE_DATE"));
					}

					if (formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("Follower")
							&& (urnDateStatus != null && !urnDateStatus.equalsIgnoreCase("0"))) {
						//////// //System.out.println("urnDateStatus RM
						//////// endorsement Follower case: " + urnDateStatus);
						if (validateType("CPI_Leader_URN_No", formObject.getNGValue("CPI_Leader_URN_No"), "lengthCheck",
								"leader URN") == 0) {
							formObject.NGFocus("CPI_Leader_URN_No");
							return 0;
						}
					}
				}
				/***************
				 * End CR-OMCPI-1314-04 URN No
				 *******************/
				// *********q_variable for Endorsement on 05-10-2010
				// ***********************
				//////// //System.out.println("Verma5 Entering Endorsement at :
				// " + dateFormat1.format(new Date()));
				formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
				if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("CPI_q_ProductName")) {
					formObject.setNGValue("CPI_PRODUCT_NAME", "");
				}
				formObject.setNGValue("CPI_q_ProductName", formObject.getNGValue("CPI_PRODUCT_NAME"));
				formObject.setNGValue("CPI_q_TotalPremium", formObject.getNGValue("CPI_TOTAL_PREMIUM"));
				formObject.setNGValue("CPI_q_EndorsementNo", formObject.getNGValue("CPI_ENDORSEMENT_NO"));
				formObject.setNGValue("CPI_q_PrimaryVertical", formObject.getNGValue("CPI_PRIMARY_VERTICAL"));
				formObject.setNGValue("CPI_q_CustomerName", formObject.getNGValue("CPI_CUSTOMER_NAME"));
				// *********End*************************** *******************
			} else if (pEventName.equalsIgnoreCase("D")) {
				if (Endorsement("S", "") == 0) {
					return 0;
				}
				str[0] = "ChkExpClear";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				//////// //System.out.println("CPI_CO_INS_ROUTE_TO_BACK :" +
				//////// formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK"));
				// sadik
				// //System.out.println("Sadik CR9 Inside validation Endorsement
				//////// CPU_Data_Washing CPI_IAS_ID:"+ActivityName);
				if (ActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
					// //System.out.println("Sadik CR9 Inside validation
					// Endorsement CPI_CHANGED_MAIL_STATUS
					// CPI_IAS_ID:"+formObject.getNGValue("CPI_CHANGED_MAIL_STATUS"));
					if (formObject.getNGValue("CPI_CHANGED_MAIL_STATUS").equalsIgnoreCase("Pending for Approval")) {
						if (CheckMandatoryTextBox("CPI_IAS_ID", "IAS ID") == 0) {
							// //System.out.println("Sadik CR9 Inside validation
							// CPI_IAS_ID");
							return 0;
						}
					}
				}
				// end
				/*
				 * =============================CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */
				if (CheckMandatoryCombo("CPI_SERVICE_RENDERED_JK", "SERVICE RENDERED UNDER J&K") == 0) {
					// //System.out.println("Inside validation mapping bucket
					// under Endorsement Bucket Done");
					return 0;
				}
				/*
				 * =============================END CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */
				/***** Start CR-8001-87420-Green File Digitization *****/
				if ((formObject.getNGValue("CPI_ADDTNL_CIT_RM_ID") == null
						|| formObject.getNGValue("CPI_ADDTNL_CIT_RM_ID").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG1")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG2")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
						&& (ActivityName.equalsIgnoreCase("Endorsement"))
						&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct ID in ADDTNL_CIT_RM_ID");
					formObject.NGFocus("CPI_ADDTNL_CIT_RM_ID");
					return 0;
				}
				if ((formObject.getNGValue("CPI_UW_EMP_ID") == null
						|| formObject.getNGValue("CPI_UW_EMP_ID").equalsIgnoreCase(""))
						&& (ActivityName.equalsIgnoreCase("Endorsement"))
						&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct ID in UW_EMP_ID");
					formObject.NGFocus("CPI_UW_EMP_ID");
					return 0;
				}
				if ((formObject.getNGValue("CPI_POLICY_NUMBER_BASE") == null
						|| formObject.getNGValue("CPI_POLICY_NUMBER_BASE").equalsIgnoreCase(""))
						&& (ActivityName.equalsIgnoreCase("Endorsement"))
						&& !(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct BASE POLICY NUMBER");
					formObject.NGFocus("CPI_POLICY_NUMBER_BASE");
					return 0;
				}
				/***** End CR-8001-87420-Green File Digitization *****/
				if (formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK").equalsIgnoreCase("")) {
					if (obj.toString().equalsIgnoreCase("R")) {
						/* CR-OMCPI-1314-03 CPU DataWashing Start */
						if (formObject.getNGValue("CPI_DATAWASHING_TYPE") != null
								&& formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
								&& (ActivityName.equalsIgnoreCase("CPU_Data_Washing")
										|| ActivityName.equalsIgnoreCase("CPU_DW_Clarification"))) {
							formObject.setNGListIndex("CPI_CO_INS_ROUTE_TO_BACK", 0);
							formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", false);
							formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", false);
							// formObject.setNGListIndex("CPI_CHANGED_MAIL_STATUS",0);
							// formObject.setNGEnable("CPI_CHANGED_MAIL_STATUS",false);
							// formObject.setNGLocked("CPI_CHANGED_MAIL_STATUS",false);
							formObject.setNGEnable("CPI_Route_To", true);
							formObject.setNGLocked("CPI_Route_To", true);
							/*
							 * formObject.NGClear("CPI_Route_to");
							 * formObject.NGAddItem(
							 * "CPI_Route_to","RM Clarification");
							 * if(formObject.getNGValue("CPI_INTERACTIONID").
							 * equalsIgnoreCase("")) formObject.NGAddItem(
							 * "CPI_Route_to","CPU Customer Clarification");
							 * formObject.setNGListIndex("CPI_Route_to",0);
							 */
							if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
								formObject.NGFocus("CPI_Route_To");
								return 0;
							}
							if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
									&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
								JOptionPane.showMessageDialog(null,
										"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
								return 0;
							}
							if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
								if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID",
										"Samadhan Intraction ID") == 0) {
									return 0;
								}
							}
							if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")) {
								if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
									return 0;
								}
							}
						} else if (ActivityName.equalsIgnoreCase("Endorsement")) {
							formObject.setNGListIndex("CPI_Route_To", 0);
							formObject.setNGEnable("CPI_Route_To", false);
							formObject.setNGLocked("CPI_Route_To", false);
							JOptionPane.showMessageDialog(null, "Please clear all exceptions");
							return 0;
						}
					} else {
						if (ActivityName.equalsIgnoreCase("CPU_Data_Washing")
								|| ActivityName.equalsIgnoreCase("CPU_DW_Clarification")) {
							if (ActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
								formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", true);
								formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", true);
							}
							formObject.setNGListIndex("CPI_Route_To", 0);
							// formObject.setNGEnable("CPI_Route_To",false);
							formObject.setNGLocked("CPI_Route_To", false);
							if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
									&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
								JOptionPane.showMessageDialog(null,
										"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
								return 0;
							}
							if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
								if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID",
										"Samadhan Intraction ID") == 0) {
									return 0;
								}
							}
							if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")) {
								if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
									return 0;
								}
							}
						} else if (ActivityName.equalsIgnoreCase("Endorsement")) {
							formObject.setNGEnable("CPI_Route_To", true);
							formObject.setNGLocked("CPI_Route_To", true);
						}
					}
					/* CR-OMCPI-1314-03 CPU DataWashing End */

					if (CheckMandatoryTextBox("CPI_PAS", "PAS") == 0) {
						return 0;
					}
					if (CheckMandatoryCombo("CPI_TYPE_OF_ENDORSEMENT", "Type of Endorsement") == 0) {
						return 0;
					}
					/*******************************
					 * CR 44 by satish
					 ****************************/
					if (formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE")
							.equalsIgnoreCase("Reinstatement Premium")) {
						if (CheckMandatoryTextBox("CPI_CLAIM_NO", "Claim No") == 0) {
							return 0;
						}
						/*
						 * JOptionPane.showMessageDialog(
						 * null,"Please fill  Claim No.");
						 * formObject.setNGValue("CPI_CLAIM_NO","");
						 * formObject.NGFocus("CPI_CLAIM_NO"); return 0;
						 */
					}
					/****************************
					 * end CR 44 by satish
					 ***************************/
					if (CheckMandatoryDate("CPI_ENDORSEMENT_EFFECTIVE_DATE", "Endorsement Effective Date") == 0) {
						return 0;
					}
					/***************************
					 * PID-CPI process changes
					 ***************************/
					//////// //System.out.println("before if pid payment type
					//////// value in
					//////// endoresement=="+formObject.getNGValue("CPI_PID_PAYMENT_TYPE"));
					//////// //System.out.println(" before if CPI_PAS value in
					//////// endoresement=="+formObject.getNGValue("CPI_PAS"));
					//////// //System.out.println(" before if CPI_Process_Type
					//////// value in
					//////// endoresement=="+formObject.getNGValue("CPI_Process_Type"));
					// if(formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")
					//////// &&
					//////// (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")
					//////// ||
					//////// (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
					//////// &&
					//////// formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement"))
					//////// ||
					//////// (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
					//////// &&
					//////// formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate
					//////// Policy Insurance") &&
					//////// formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal"))
					//////// ))
					if ((formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")
							|| formObject.getNGValue("CPI_PAS").equalsIgnoreCase("OM")
									&& (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")))
							|| (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
									&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement"))
							|| ActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
						//////// //System.out.println("pid payment type value in
						//////// endoresement=="+formObject.getNGValue("CPI_PID_PAYMENT_TYPE"));
						//////// //System.out.println("CPI_PAS value in
						//////// endoresement=="+formObject.getNGValue("CPI_PAS"));
						//////// //System.out.println("CPI_Process_Type value in
						//////// endoresement=="+formObject.getNGValue("CPI_Process_Type"));
						//////// //System.out.println("CPI_CUSTOMER_ID value in
						//////// endoresement=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
						if (CheckMandatoryTextBox("CPI_CUSTOMER_ID", "Customer ID") == 0) {
							//////// //System.out.println("CPI_CUSTOMER_ID IF
							//////// endoresement=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
							return 0;
						}
						/*
						 * if(validateType("CPI_CUSTOMER_ID",formObject.
						 * getNGValue("CPI_CUSTOMER_ID"),"OnlyNumeric",
						 * "CUSTOMER_ID")==0) { ////////
						 * //System.out.println("CPI_CUSTOMER_ID value in=="
						 * +formObject.getNGValue("CPI_CUSTOMER_ID")); return 0;
						 * } String custid =
						 * formObject.getNGValue("CPI_CUSTOMER_ID"); ////////
						 * //System.out.println("custid=="+custid.length());
						 * if(custid != null && custid.length() > 0 &&
						 * custid.length() <12) {
						 * JOptionPane.showMessageDialog(null,
						 * "Min length of Customer ID is 12"); return 0; }
						 */

					}
					String custid = formObject.getNGValue("CPI_CUSTOMER_ID");
					//////// //System.out.println("custid in
					//////// endorsement=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
					if (custid != null && !custid.equals("") && custid.length() > 0) {
						if (validateType("CPI_CUSTOMER_ID", formObject.getNGValue("CPI_CUSTOMER_ID"), "OnlyNumeric",
								"CUSTOMER_ID") == 0) {
							//////// //System.out.println("CPI_CUSTOMER_ID value
							//////// in=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
							return 0;
						}

						if (custid != null && custid.length() > 0 && custid.length() < 12) {
							JOptionPane.showMessageDialog(null, "Min length of Customer ID is 12");
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("CDBG")) {
						if (CheckMandatoryTextBox("CPI_CDBG_NO", "CDBGNO") == 0) {
							return 0;
						}

					}
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					/*************************
					 * CPI PID Additional Points
					 *****************************/
					if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")
							|| formObject.getNGValue("CPI_PAS").equalsIgnoreCase("OM")) {
						if (formObject.getNGValue("CPI_QUOTE_NO") != null
								&& !formObject.getNGValue("CPI_QUOTE_NO").equalsIgnoreCase("")
								&& duplicateCheck("CPI_QUOTE_NO", formObject.getNGValue("CPI_QUOTE_NO")) == 0) {
							JOptionPane.showMessageDialog(null, "Quote No. already exists");
							return 0;
						}
					}
					/*************************
					 * End CPI PID Additional Points
					 **************************/
					if (CheckMandatoryTextBox("CPI_CUSTOMER_NAME", "Customer Name") == 0) {
						return 0;
					}
					if (CheckMandatoryTextBox("CPI_ENDORSEMENT_NO", "Endorsement No") == 0) {
						return 0;
					}
					if (CheckMandatoryCombo("CPI_PRODUCT_TYPE", "Product Type") == 0) {
						return 0;
					}
					if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  Product Name .");
						formObject.NGFocus("CPI_PRODUCT_NAME");
						return 0;
					}
					if (ActivityName.equalsIgnoreCase("Endorsement") || ActivityName.equalsIgnoreCase(
							"CPU_Data_Washing") /* CR 46 CPU DataWashing */
							|| ActivityName.equalsIgnoreCase(
									"CPU_DW_Clarification")/*
															 * CR-OMCPI-1314-03
															 * CPU DataWashing
															 */) {
						if (CheckMandatoryTextBox("CPI_TOTAL_PREMIUM", "Total Premium") == 0) {
							formObject.setNGValue("CPI_PAN",
									""); /**********************
											 * Start CPI Omniflow CPI-
											 * CR-8001-59268(FlapPrint) CR
											 ***********************/
							return 0;
						}
					}

					/*************************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 *****************************/

					String endNo = formObject.getNGValue("CPI_ENDORSEMENT_NO");
					//////// //System.out.println("Inside Endorsement Method
					//////// Checking endNo validation 8001-61339: "+endNo);
					if (endNo != null && endNo.length() > 30) {
						JOptionPane.showMessageDialog(null, "Max length of CPI_ENDORSEMENT_NO is 30");
						formObject.NGFocus("CPI_ENDORSEMENT_NO");
						return 0;
					}

					/*************************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 **************************/

					/**********************
					 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
					 ***********************/

					String totalpremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
					//////// //System.out.println("Inside Endorsement Method
					//////// Checking totalpremium validation CR-8001-59268 :
					//////// "+totalpremium);
					boolean flag1 = false;
					int totalpremiumparsed = 0;
					if (totalpremium != null && !totalpremium.equalsIgnoreCase("")
							&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
						try {
							totalpremiumparsed = Integer.parseInt(totalpremium);
							//////// //System.out.println("After parsing
							//////// totalpremiumparsed: "+totalpremiumparsed);
						} catch (Exception e) {
							flag1 = true;
						}
						if (!flag1 && totalpremiumparsed >= 100000) {
							//////// //System.out.println("Inside IF Endorsement
							//////// Method Checking totalpremiumparsed
							//////// validation CR-8001-59268 :
							//////// "+totalpremiumparsed);
							// formObject.setNGEnable("CPI_PAN", true);
							formObject.setNGLocked("CPI_PAN", true);
							if (CheckMandatoryTextBox("CPI_PAN", "PAN") == 0) {
								formObject.NGFocus("CPI_PAN");
								return 0;
							}

							if (formObject.getNGValue("CPI_PAN") != null
									&& !formObject.getNGValue("CPI_PAN").equalsIgnoreCase("") && validateType("CPI_PAN",
											formObject.getNGValue("CPI_PAN"), "OnlyPanNo", "PAN") == 0) {
								//////// //System.out.println("In Endorsement
								//////// For checking CPI_PAN value
								//////// in//=="+formObject.getNGValue("CPI_PAN"));
								String PANNO = formObject.getNGValue("CPI_PAN");
								//////// //System.out.println("In Endorsement
								//////// For checking CPI_PAN value
								//////// in=="+PANNO);
								return 0;
							}

						}

					}

					/**********************
					 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
					 ************************/

					/***********************
					 * Start CR-8001-54702 E-Mail Filter
					 ***************************/
					//////// //System.out.println("Checking in Endorsement
					//////// Method for checking Ias and data val id");
					if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")
							&& ActivityName.equalsIgnoreCase("Endorsement")) {

						if (CheckMandatoryTextBox("CPI_DATA_VALIDATION_ID", "DATA VALIDATION ID") == 0) {
							//////// //System.out.println("CR-8001-54702 E-Mail
							//////// Filter CPI DATA VAL ID validation in
							//////// endorsement");
							return 0;
						}

						if (CheckMandatoryTextBox("CPI_IAS_ID", "IAS ID") == 0) {
							//////// //System.out.println("CR-8001-54702 E-Mail
							//////// Filter CPI IAS ID validation in
							//////// endorsement");
							return 0;
						}

					}
					/***********************
					 * End CR-8001-54702 E-Mail Filter
					 ***************************/

					/*******************
					 * CR 46 CPU DataWashing
					 ********************/
					if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
							&& (ActivityName.equalsIgnoreCase("CPU_Data_Washing")
									|| ActivityName.equalsIgnoreCase("CPU_DW_Clarification"))) {
						if (!(formObject.getNGValue("CPI_CLIENT_MAIL_RECEIVED_DATE").equalsIgnoreCase(""))) {
							if (datesCompare(dateformat.format(new Date()),
									formObject.getNGValue("CPI_CLIENT_MAIL_RECEIVED_DATE")) == 2) {
								JOptionPane.showMessageDialog(null,
										"Client Mail Recieved Date can not accept future date");
								formObject.NGFocus("CPI_CLIENT_MAIL_RECEIVED_DATE");
								return 0;
							}
						}
						if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
							formObject.setNGEnable("CPI_Samadhan_Interaction_ID", true);
							formObject.setNGLocked("CPI_Samadhan_Interaction_ID", true);
							if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
								formObject.NGFocus("CPI_Samadhan_Interaction_ID");
								return 0;
							}
						}
						// if(ActivityName.equalsIgnoreCase("CPU_Data_Washing"))
						// {
						if (CheckMandatoryTextBox("CPI_DMS_NO", "DMS NO") == 0) {
							formObject.NGFocus("CPI_DMS_NO");
							return 0;
						}
						// }
					}
					/*****************
					 * end CR 46 CPU DataWashing
					 *******************/
					if (CheckMandatoryTextBox("CPI_RM_ID", "RM ID") == 0) {
						return 0;
					}

					// ============= RM ID Validation at Endorsement
					// ====================
					//////// //System.out.println("RM ID
					// Validation:Endorsement");
					String sResult = "";
					String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
					//////// //System.out.println("sunil00:sCPI_RM_ID: " +
					//////// sCPI_RM_ID);

					// ============= Check RM User in the OmniFlow
					// ====================
					String sQuery = "SELECT count(1) FROM PDBUSER where useralive = 'Y' and USERNAME='" + sCPI_RM_ID
							+ "'";
					//////// //System.out.println("sunil3:Endorsement:" +
					//////// sQuery);
					ArrayList getUser = formObject.getNGDataFromDataSource(sQuery, 1);
					String s_RMUser = (getUser.get(0)).toString();
					s_RMUser = s_RMUser.substring(s_RMUser.indexOf("[") + 1, s_RMUser.indexOf("]"));
					//////// //System.out.println("s_RMUser: " + s_RMUser);
					int iRMValue = Integer.parseInt(s_RMUser);
					//////// //System.out.println("iRMValue: " + iRMValue);

					// *********** Checking RM USer Exist status
					// ****************
					if (iRMValue > 0) {
						// ************* RM ID Locked Status ***************
						/*
						 * sQuery="SELECT count(1) FROM ng_rm_master where EMP_CODE='"
						 * +sCPI_RM_ID+"'"; ////////
						 * //System.out.println("sunil3:Endorsement:"+sQuery);
						 * ArrayList
						 * getReason=formObject.getNGDataFromDataSource(sQuery,1
						 * ); String
						 * s_Field_Value=(getReason.get(0)).toString();
						 * s_Field_Value=s_Field_Value.substring(s_Field_Value.
						 * indexOf("[")+1,s_Field_Value.indexOf("]")); ////////
						 * //System.out.println("s_Field_Value: "+s_Field_Value)
						 * ; int iValue = Integer.parseInt(s_Field_Value);
						 * //////// //System.out.println("iValue: "+iValue); //
						 * *********** Checking RM USer Exist status
						 * **************** if (iValue>0) { ////////
						 * //System.out.println("RM ID Found:");
						 * sQuery="SELECT USERLOCKED FROM USERSECURITY WHERE USERINDEX = (SELECT USERINDEX FROM PDBUSER WHERE USERNAME ='"
						 * +sCPI_RM_ID+"')"; // *********** Checking RM Locked
						 * status **************** ////////
						 * //System.out.println("sQuery: "+sQuery); ArrayList
						 * getRMLockedStatus=formObject.getNGDataFromDataSource(
						 * sQuery,1); ////////
						 * //System.out.println("getRMLockedStatussize(): "
						 * +getRMLockedStatus.size()); String
						 * s_Value=(getRMLockedStatus.get(0)).toString();
						 * s_Value=s_Value.substring(s_Value.indexOf("[")+1,
						 * s_Value.indexOf("]")); ////////
						 * //System.out.println("s_Value: "+s_Value);
						 * if(s_Value.equalsIgnoreCase("Y")) { ////////
						 * //System.out.println("RM ID Found but is Locked:");
						 * JOptionPane.showMessageDialog(
						 * null,"Specified RM ID is Locked.");
						 * formObject.NGFocus("CPI_RM_ID"); return 0; } //
						 * *********** End of Checking RM Locked status
						 * **************** } else { ////////
						 * //System.out.println("RM ID Not Found:");
						 * JOptionPane.showMessageDialog(
						 * null,"RM ID does not exist in Master.");
						 * formObject.NGFocus("CPI_RM_ID"); return 0; }
						 */
					} else {
						//////// //System.out.println("RM ID Not Found:");
						JOptionPane.showMessageDialog(null, "RM ID does not exist in OmniFlow System or Inactive.");
						formObject.NGFocus("CPI_RM_ID");
						return 0;
					}
					// ============= End Check RM User in the OmniFlow
					// ====================

					if (CheckMandatoryTextBox("CPI_RM_NAME", "RM Name") == 0) {
						return 0;
					}
					if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  PRIMARY VERTICAL .");
						formObject.NGFocus("CPI_PRIMARY_VERTICAL");
						return 0;
					}

					// Added check mandatory for Sub verical based on primary
					// vertical on 03/09/2010.
					if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase(
									"RETAIL") /*
												 * || formObject.getNGValue(
												 * "CPI_PRIMARY_VERTICAL").
												 * equalsIgnoreCase("SME")
												 */) {
						if (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill Primary Sub Vertical .");
							formObject.NGFocus("CPI_PRIMARY_SUB_VERTICAL");
							return 0;
						}
					}
					//////// //System.out.println("PRM SUB MAN CHECK2 ");
					// End check mandatory for Sub verical based on primary
					//////// vertical on 03/09/2010.

					if (formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  IL Location .");
						formObject.NGFocus("CPI_IL_LOCATION");
						return 0;
					}

					/*****************************
					 * CR 38 by satish
					 *****************************/
					if (CheckMandatoryTextBox("CPI_BUSINESS_TYPE", "Business Type") == 0) {
						return 0;
					}
					/******
					 * CR-OMCPI-1314-02 FIG COB CR (Added COB in Business_type)
					 ******/
					if (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
							|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker")
							|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB")) {
						if (formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Name of Broker/Agent/Intermediary .");
							formObject.NGFocus("CPI_NAME_OF_BROKER_AGENT");
							return 0;
						}
					}
					/****
					 * End CR-OMCPI-1314-02 FIG COB CR (Added COB in
					 * Business_type)
					 ****/
					/***************************
					 * End CR 38 by satish
					 ***************************/
					// Added for Primary sub Vertical BBG and KRG
					if ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
							|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000")
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
									.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
							|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase(
									"102008000")) /*
													 * &&
													 * /************************
													 * ***** CR 38 by satish
													 *****************************/ /******
																					 * CR-OMCPI-1314-02
																					 * FIG
																					 * COB
																					 * CR
																					 * (Added
																					 * FIG
																					 * in
																					 * Primary_vertical)
																					 ******/
					/*
					 * !(formObject.getNGValue("CPI_PRIMARY_VERTICAL").
					 * equalsIgnoreCase("SME") ||
					 * formObject.getNGValue("CPI_PRIMARY_VERTICAL").
					 * equalsIgnoreCase("CSG") ||
					 * formObject.getNGValue("CPI_PRIMARY_VERTICAL").
					 * equalsIgnoreCase("FIG")) /**** End CR-OMCPI-1314-02 FIG
					 * COB CR (Added FIG in Primary_vertical)
					 ****/ /***************************
							 * End CR 38 by satish
							 ***************************/
					)// CR-8001-87420 Green File Digitization
					{
						//////// //System.out.println("inside BBG/KRG sandeep
						//////// ");
						if (CheckMandatoryTextBox("CPI_CHANNEL_EMPLOYEE_ID", "Channel Employee ID") == 0) {
							return 0;
						}
						if (formObject.getNGValue("CPI_Source_Name").equalsIgnoreCase("")) {
							// //System.out.println("Inside CPI_SOURCE_NAME
							// mandatory 1 :");
							JOptionPane.showMessageDialog(null, "Please fill  Source Name .");
							formObject.NGFocus("CPI_Source_Name");
							return 0;
						}
						if (formObject.getNGValue("CPI_CHANNEL_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  CHANNEL NAME .");
							formObject.NGFocus("CPI_CHANNEL_NAME");
							return 0;
						}
						if (formObject.getNGValue("CPI_BRANCH_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Branch Name .");
							formObject.NGFocus("CPI_BRANCH_NAME");
							return 0;
						}
						/***************************
						 * PID-CPI process changes
						 ***************************/
						if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000"))
								&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
										|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE")
												.equalsIgnoreCase("102006000")))// CR-8001-87420
																				// Green
																				// File
																				// Digitization
						{
							if (CheckMandatoryTextBox("CPI_PRIVILEGE_BANKER_CODE", "Privilege Banker Code") == 0) {
								return 0;
							}
						}
						if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000"))
								&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
										|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
												.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
										|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
										|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000")
										|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE")
												.equalsIgnoreCase("102008000")))// CR-8001-87420
																				// Green
																				// File
																				// Digitization
						{
							if (CheckMandatoryTextBox("CPI_CIF_ID", "CF ID") == 0) {
								return 0;
							}
						}

						/***********************
						 * End PID-CPI process changes
						 ***************************/
					}
					// END

					/*****************************
					 * CR 38 by satish
					 *****************************/
					/******
					 * CR-OMCPI-1314-02 FIG COB CR (Added FIG in
					 * Primary_vertical and COB in Business_type)
					 ******/
					if (((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
							&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
									|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
							&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes"))
							|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
									&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB"))
									&& formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("COB"))
							|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
									|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
									&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
											|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
									&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("No")
									&& !formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase(""))) {
						//////// //System.out.println("Validation CR 28: Inside
						//////// common Mandatory validation");
						if ((formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes")
								&& !formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT").equalsIgnoreCase(""))
								|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("COB"))// CR-OMCPI-1314-02
																												// FIG
																												// COB
																												// CR
						{
							//////// //System.out.println("Validation CR 28:
							//////// Inside Mandatory validation for ibank
							//////// agent.");
							if (formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("")) {
								// //System.out.println("Inside CPI_SOURCE_NAME
								// mandatory 2 :");
								JOptionPane.showMessageDialog(null, "Please fill  SOURCE NAME .");
								formObject.NGFocus("CPI_SOURCE_NAME");
								return 0;
							}
						}
						if (CheckMandatoryTextBox("CPI_CHANNEL_EMPLOYEE_ID", "Channel Employee ID") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_CHANNEL_EMPLOYEE_NAME", "Channel Employee Name") == 0) {
							return 0;
						}
						if (formObject.getNGValue("CPI_CHANNEL_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  CHANNEL NAME .");
							formObject.NGFocus("CPI_CHANNEL_NAME");
							return 0;
						}
						if (formObject.getNGValue("CPI_BRANCH_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Branch Name .");
							formObject.NGFocus("CPI_BRANCH_NAME");
							return 0;
						}
					}
					/****
					 * End CR-OMCPI-1314-02 FIG COB CR (Added FIG in
					 * Primary_vertical and COB in Business_type)
					 ****/
					/***************************
					 * End CR 38 by satish
					 ***************************/
					// ================ CR 15 ==================
					if (((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
							|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000"))
							&& formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("RLG"))
							|| ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
											.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
									|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000"))
									&& formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("ING Vysya"))
							|| (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("Home")
									&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
											|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE")
													.equalsIgnoreCase("102000000")))
							|| /*****************************
								 * CR 38 by satish
								 *****************************/
							((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
									|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
									&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
											|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
									&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes"))
							|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
									|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
									&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
											|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
									&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("No")
									&& !formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase(
											"")) /***************************
													 * End CR 38 by satish
													 ***************************/
					) // CR-8001-87420 Green File Digitization
					{
						/**************************************
						 * CR-8001-92286 Omniflow held cover letter CR Start
						 *****************************************************/
						if (formObject.getNGValue("CPI_SPECIFIED_PERSON").equalsIgnoreCase("")) {
							/*
							 * JOptionPane.showMessageDialog(null,
							 * "Please fill  Specified Person .");
							 * formObject.NGFocus("CPI_SPECIFIED_PERSON");
							 * return 0;
							 */
							/**************************************
							 * CR-8001-92286 Omniflow held cover letter CR End
							 ******************************************************/
						}
					}
					// ================End CR 15 ===============
					/***************
					 * Start CR-OMCPI-1314-04 URN No
					 *****************/
					if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
							&& !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")) {
						if (CheckMandatoryTextBox("CPI_COINSURANCE", "Co-Insurance") == 0) {
							return 0;
						}
					}
					/***************
					 * End CR-OMCPI-1314-04 URN No
					 *******************/
					/*******************************
					 * CR 44 by satish
					 ****************************/
					if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")
							|| formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")) {
						if (CheckMandatoryTextBox("CPI_OUR_SHARE_PREMIUM", "Our share premium") == 0) {
							return 0;
						}
					}
					/****************************
					 * end CR 44 by satish
					 ***************************/
					/***************************
					 * PID-CPI process changes
					 ***************************/
					if (CheckMandatoryCombo("CPI_PID_PAYMENT_TYPE", "PID Tagging") == 0) {
						return 0;
					}
					/*
					 * if (CheckMandatoryCombo("CPI_MODE_OF_PAYMENT",
					 * "Mode Of Payment") == 0) { return 0; }
					 */
					if (!formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")) {
						/*
						 * if (CheckMandatoryTextBox("CPI_MODE_OF_PAYMENT",
						 * "Mode Of Payment") == 0) { return 0; }
						 */
						if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill Mode Of Payment");
							formObject.NGFocus("CPI_MODE_OF_PAYMENT");
							return 0;
						}

						/***********************
						 * Start CR-8001-54702 E-Mail Filter
						 ***************************/
						if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT") != null
								&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT").equalsIgnoreCase("")
								&& validateType("CPI_INSTRUMENT_AMOUNT", formObject.getNGValue("CPI_INSTRUMENT_AMOUNT"),
										"OnlyIntegers", "INSTRUMENT_AMOUNT") == 0) {
							//////// //System.out.println("In endorsement For
							//////// checking(filter) CPI_INSTRUMENT_AMOUNT
							//////// value
							//////// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT"));
							return 0;
						}

						if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2") != null
								&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2").equalsIgnoreCase("")
								&& validateType("CPI_INSTRUMENT_AMOUNT2",
										formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2"), "OnlyIntegers",
										"INSTRUMENT_AMOUNT2") == 0) {
							//////// //System.out.println("In endorsement For
							//////// checking(filter) CPI_INSTRUMENT_AMOUNT2
							//////// value
							//////// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2"));
							return 0;
						}

						if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3") != null
								&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3").equalsIgnoreCase("")
								&& validateType("CPI_INSTRUMENT_AMOUNT3",
										formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3"), "OnlyIntegers",
										"INSTRUMENT_AMOUNT3") == 0) {
							//////// //System.out.println("In endorsement For
							//////// checking(filter) CPI_INSTRUMENT_AMOUNT3
							//////// value
							//////// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3"));
							return 0;
						}
						/***********************
						 * End CR-8001-54702 E-Mail Filter
						 ***************************/

					}
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("DD")
							|| formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("Cheque")) {
						if (CheckMandatoryTextBox("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
								"Inst. No./CD No./Dep. Slip No.") == 0) {
							return 0;
						}
						if (CheckMandatoryDate("CPI_INSTRUMENT_DATE", "Instrument Date") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_BANK_NAME_CD_NAME", "BANK NAME CD NAME") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_INSTRUMENT_AMOUNT", "Instrument Amount") == 0) {
							return 0;
						}

						// Added by Ravi on 15/07/2010

						if (!(formObject.getNGValue("CPI_INSTRUMENT_DATE").equalsIgnoreCase(""))) {
							if (datesCompare(formObject.getNGValue("CPI_ENDORSEMENT_EFFECTIVE_DATE"),
									formObject.getNGValue("CPI_INSTRUMENT_DATE")) == 2) {
								JOptionPane.showMessageDialog(null, "64 VB Case");
								formObject.NGFocus("CPI_INSTRUMENT_DATE");
								// return 0;
							}
						}
					}

					/* CR-OMCPI-1314-03 CPU DataWashing Start */
					if (ActivityName.equalsIgnoreCase("CPU_Data_Washing")
							&& !formObject.getNGValue("CPI_Route_to").equalsIgnoreCase("RM Clarification")) {
						//////// //System.out.println("inside
						//////// CPI_CHANGED_MAIL_STATUS validation : ");
						formObject.setNGEnable("CPI_CHANGED_MAIL_STATUS", true);
						formObject.setNGLocked("CPI_CHANGED_MAIL_STATUS", true);
						if (CheckMandatoryCombo("CPI_CHANGED_MAIL_STATUS", "Email Status") == 0) {
							formObject.NGFocus("CPI_CHANGED_MAIL_STATUS");
							return 0;
						}
					}
					/* CR-OMCPI-1314-03 CPU DataWashing End */

					/***************
					 * Start CR-OMCPI-1314-04 URN No
					 *****************/
					if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
							&& !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")) {
						String urnDateStatus = "";
						if (formObject.getNGValue("CPI_eNDORSEMENT_EFFECTIVE_DATE") != null
								&& !formObject.getNGValue("CPI_eNDORSEMENT_EFFECTIVE_DATE").equalsIgnoreCase("")) {
							urnDateStatus = getFinancialYear(formObject.getNGValue("CPI_eNDORSEMENT_EFFECTIVE_DATE"));
						}
						if (formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("Leader")
								&& (urnDateStatus != null && !urnDateStatus.equalsIgnoreCase("0"))) {
							//////// //System.out.println("urnDateStatus RM
							//////// endorsement Leader case: " +
							//////// urnDateStatus);
							//////// //System.out.println("CPI_CoInsurance while
							//////// click on done button : ");
							if (!formObject.isNGLocked("CPI_Leader_URN_No")) {
								formObject.setNGLocked("CPI_Leader_URN_No", true);
							}
							if (CheckMandatoryCombo("CPI_Leader_URN_No", "Leader URN No") == 0) {
								//////// //System.out.println("saa ");
								formObject.NGFocus("CPI_Leader_URN_No");
								formObject.setNGLocked("CPI_Leader_URN_No", false);
								return 0;
							}
						}
					}
					/***************
					 * End CR-OMCPI-1314-04 URN No
					 *******************/
					if (CheckMandatoryTextBox("CPI_REMARK", "Remark") == 0) {
						return 0;
					}

					// sandeep
					if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("CPI_q_ProductName")) {
						JOptionPane.showMessageDialog(null, "Please fill  Product Name .");
						formObject.setNGValue("CPI_PRODUCT_NAME", "");
						formObject.NGFocus("CPI_PRODUCT_NAME");
						return 0;
					}

					/*
					 * CR-OMCPI-1314-03 CPU DataWashing Start - commenting
					 * following code
					 */
					/*******************
					 * CR 46 CPU DataWashing
					 ********************/
					/*
					 * if(formObject.getNGValue("CPI_DATAWASHING_STATUS").
					 * equalsIgnoreCase("1") &&
					 * !formObject.getNGValue("CPI_PRODUCT_NAME").
					 * equalsIgnoreCase("") &&
					 * ActivityName.equalsIgnoreCase("Endorsement") &&
					 * !formObject.getNGValue("CPI_co_Insurance_status").
					 * equalsIgnoreCase("CO Insurance")) {
					 * formObject.setNGEnable("CPI_Route_To",true);
					 * if(CheckMandatoryCombo(
					 * "CPI_Route_To","Datawashing Send To")==0){
					 * formObject.NGFocus("CPI_Route_To"); return 0; } }
					 */
					/*****************
					 * end CR 46 CPU DataWashing
					 *******************/
					/* CR-OMCPI-1314-03 CPU DataWashing End */
				} /* CR-OMCPI-1314-03 CPU DataWashing End */

				/**************************************
				 * CR-8001-92286 Omniflow held cover letter CR Start
				 *****************************************************/
				if (!ActivityName.equalsIgnoreCase("CPU_Data_Washing")) {
					if (formObject.getNGValue("CPI_SUM_INSURED_NO_OF_LIVES").equalsIgnoreCase("")) {
						// //System.out.println("In Endorsement Bucket Done
						// Click checking for
						// CPI_SUM_INSURED_NO_OF_LIVES..vaibhav==");
						JOptionPane.showMessageDialog(null, "Please fill SUM_INSURED No Of Lives.");
						formObject.NGFocus("CPI_SUM_INSURED_NO_OF_LIVES");
						return 0;
					}
				}
				if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000")) {
					// //System.out.println("In GreenFile Bucket Done Click
					// checking for CPI_RM_LOCATION..vaibhav==");
					if (formObject.getNGValue("CPI_RM_LOCATION").equalsIgnoreCase("")) {
						// //System.out.println("In GreenFile Bucket Done Click
						// checking for CPI_RM_LOCATION..vaibhav==");
						JOptionPane.showMessageDialog(null, "Please fill RM_LOCATION Value As Primary Vertical is BA.");
						formObject.NGFocus("CPI_RM_LOCATION");
						return 0;
					}
					if (formObject.getNGValue("CPI_BSG_LOCATION").equalsIgnoreCase("")) {
						// //System.out.println("In GreenFile Bucket Done Click
						// checking for CPI_BSG_LOCATION..vaibhav==");
						JOptionPane.showMessageDialog(null,
								"Please fill BSG_LOCATION Value As Primary Vertical is BA.");
						formObject.NGFocus("CPI_BSG_LOCATION");
						return 0;
					}
				}
				/**************************************
				 * CR-8001-92286 Omniflow held cover letter CR End
				 ******************************************************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/

				if ((ActivityName.equalsIgnoreCase("Endorsement"))
						&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					if (CheckMandatoryCombo("CPI_GST_REGISTERED", "GST Registered Value") == 0) {
						System.out.println("Inside Endorsement Bucket Done : CR-8127-95325 : GST-Omniflow development");
						formObject.NGFocus("CPI_GST_REGISTERED");
						return 0;
					}
					/**********
					 * Start CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					if (formObject.getNGValue("CPI_GST_REGISTERED").equalsIgnoreCase("Yes")) {
						if (CheckMandatoryCombo("CPI_GST_INVOICE_OPTION", "GST Invoice Option") == 0) {
							System.out.println("Inside Endorsement Bucket Done : ");
							formObject.NGFocus("CPI_GST_INVOICE_OPTION");
							return 0;
						}
					}
					/**********
					 * End CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
				}
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/
				/***************************
				 * Vendor login & weather Product
				 ****************************/

				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				String prodIrdaCode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
				String parentIndex = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
				String vendor1Ind = formObject.getNGValue("CPI_CHILD1_FOLDERINDEX");
				String vendor2Ind = formObject.getNGValue("CPI_CHILD2_FOLDERINDEX");
				//////// //System.out.println("parentIndex After==" +
				//////// parentIndex);
				//////// //System.out.println("vendor1Ind After==" +
				//////// vendor1Ind);
				//////// //System.out.println("vendor2Ind After==" +
				//////// vendor2Ind);
				//////// //System.out.println("prodIrdaCode before==" +
				//////// prodIrdaCode);
				if (prodIrdaCode.equalsIgnoreCase("4037") || prodIrdaCode.equalsIgnoreCase("4047"))// weatherproduct
				{
					//////// //System.out.println("prodIrdaCode in
					//////// Endorsement==" + prodIrdaCode);
					if (parentIndex == null || parentIndex.equalsIgnoreCase("") || vendor1Ind == null
							|| vendor1Ind.equalsIgnoreCase("") || vendor2Ind == null
							|| vendor2Ind.equalsIgnoreCase("")) {

						url = "FolderGeneration.jsp?Process=CPI" + "&Pid=" + sWIName + "&userId=" + sUserName
								+ "&cabinetName=ilombardcabinet" + "&Flag=Endorsement";

						showMailPage(url, "docupload");

					}
				}
				String parentIndex1 = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
				String vendor1Ind1 = formObject.getNGValue("CPI_CHILD1_FOLDERINDEX");
				String vendor2Ind1 = formObject.getNGValue("CPI_CHILD2_FOLDERINDEX");
				//////// //System.out.println("parentIndex1 After1==" +
				//////// parentIndex1);
				//////// //System.out.println("vendor1Ind1 After1==" +
				//////// vendor1Ind1);
				//////// //System.out.println("vendor2Ind1 After1==" +
				//////// vendor2Ind1);
				formObject.setNGValue("CPI_WINAME_FOLDERINDEX", parentIndex1);
				formObject.setNGValue("CPI_CHILD1_FOLDERINDEX", vendor1Ind1);
				formObject.setNGValue("CPI_CHILD2_FOLDERINDEX", vendor2Ind1);
				//////// //System.out.println("CPI_WINAME_FOLDERINDEX After1=="
				//////// + formObject.getNGValue("CPI_WINAME_FOLDERINDEX"));

				/*************************
				 * End Vendor login & weather Product
				 **************************/

				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Vaibhav
				 ***********************/
				String prodIrdaCode1 = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
				// //System.out.println("prodIrdaCode1 in Endorsement Bucket
				// Done Click Before Loop..==" + prodIrdaCode1);
				if (!(prodIrdaCode1.equalsIgnoreCase("4037") || prodIrdaCode1.equalsIgnoreCase(
						"4047")) /*
									 * &&
									 * !formObject.getNGValue("CPI_ITRODUCEDBY")
									 * .equalsIgnoreCase("IPARTNER")CR-8001-
									 * 71104_CR-8119-87478_Auto CPI generation
									 * iPartner
									 */) {
					String sWIName1 = xmlParserGenData.getValueOf("ProcessInstanceId");
					String sUserName1 = formObject.getUserName();
					String sProcessType = formObject.getNGValue("CPI_pROCESS_TYPE");

					String parentIndex2 = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
					String sflag = "No";
					// //System.out.println("prodIrdaCode in Endorsement Bucket
					// Done Click..==" + prodIrdaCode1);
					// //System.out.println("Green File Digitization Done
					// Click..==" + prodIrdaCode1);
					if (parentIndex2 == null || parentIndex2.equalsIgnoreCase("")) {
						url = "AddFolder.jsp?Process=CPI" + "&process_type=" + sProcessType + "&Pid=" + sWIName1
								+ "&isexistingpath=" + sflag + "&userId=" + sUserName1 + "&cabinetName=Ilombardcabinet";
						showMailPage(url, "docupload");
					}
				}

				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Vaibhav
				 ***********************/
			} // done close.
		}

		catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting Endorsement at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	private int RM_Green_File(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering RM_Green_File at : " +
		//////// dateFormat1.format(new Date()));
		String strTotalPremium = "";
		try {
			if (pEventName.equalsIgnoreCase("S")) {
				// Sadik
				// //System.out.println("Sadik FR7 Enabling
				// Btn_GeneratePdf:"+pEventName);
				formObject.setNGEnable("Btn_GeneratePdf", true);
				// End
				if (!check_Numeric(formObject.getNGValue("CPI_PERCENTAGE_OF_COMMISION"), 3, 5)) {
					JOptionPane.showMessageDialog(null, "Enter valid percentage of commision");
					formObject.NGFocus("CPI_PERCENTAGE_OF_COMMISION");
					return 0;
				}
				/*****************************
				 * CR 28 by satish
				 *****************************/
				// Function to validate that commission is not more than 5.00
				if (!formObject.getNGValue("CPI_INFRA_COMMISSION").equalsIgnoreCase("")) {
					if (!numericValidation(formObject.getNGValue("CPI_INFRA_COMMISSION"), 1, 2, 5.00)) {
						JOptionPane.showMessageDialog(null, "Enter valid Infra commision");
						formObject.NGFocus("CPI_INFRA_COMMISSION");
						return 0;
					}
				}
				/***************************
				 * End CR 28 by satish
				 ***************************/
				/**************
				 * changes made by satish for CPI_PERCENTAGE_SHARE
				 ****************/
				/*
				 * if(!check_Numeric(formObject.getNGValue(
				 * "CPI_PERCENTAGE_SHARE"),4,4)) {
				 * JOptionPane.showMessageDialog(
				 * null,"Enter valid percentage share");
				 * formObject.NGFocus("CPI_PERCENTAGE_SHARE"); return 0; }
				 */
				// increased field validation from 4 to 5
				if (!check_Numeric(formObject.getNGValue("CPI_PERCENTAGE_SHARE"), 5, 5)) {
					JOptionPane.showMessageDialog(null, "Enter valid percentage share");
					formObject.NGFocus("CPI_PERCENTAGE_SHARE");
					return 0;
				}
				/**************
				 * end of changes made by satish for CPI_PERCENTAGE_SHARE
				 ****************/
				// Added by ravi on 25/03/2010
				//////// //System.out.println("Length" +
				// formObject.getNGValue("CPI_TOTAL_PREMIUM").length());
				if (!formObject.getNGValue("CPI_TOTAL_PREMIUM").equals("")) {
					if ((formObject.getNGValue("CPI_TOTAL_PREMIUM").startsWith("+")
							|| formObject.getNGValue("CPI_TOTAL_PREMIUM").startsWith("-"))
							&& formObject.getNGValue("CPI_TOTAL_PREMIUM").length() > 1) {
						strTotalPremium = formObject.getNGValue("CPI_TOTAL_PREMIUM").substring(1,
								(formObject.getNGValue("CPI_TOTAL_PREMIUM").length()));
					}
					if (ICICIval.validateText("" + formObject.getNGValue("CPI_TOTAL_PREMIUM").charAt(0), "Number")) {
						strTotalPremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
					}
					//////// //System.out.println("strTotalPremium" +
					//////// strTotalPremium);
					if (!check_Numeric(strTotalPremium, 13, 2)) {
						JOptionPane.showMessageDialog(null, "Enter valid total premium");
						formObject.setNGValue("CPI_TOTAL_PREMIUM", "");
						formObject.NGFocus("CPI_TOTAL_PREMIUM");
						return 0;
					}
				}
				// End of ravi add 25/03/2010
				/*******************************
				 * CR 44 by satish
				 ****************************/
				if (!check_Numeric(formObject.getNGValue("CPI_OUR_SHARE_PREMIUM"), 13, 2)) {
					JOptionPane.showMessageDialog(null, "Enter valid Our share premium");
					formObject.setNGValue("CPI_OUR_SHARE_PREMIUM", "");
					formObject.NGFocus("CPI_OUR_SHARE_PREMIUM");
					return 0;
				}
				/****************************
				 * end CR 44 by satish
				 ***************************/
				if (!check_Numeric(formObject.getNGValue("CPI_SUM_INSURED"), 20, 5)) {
					JOptionPane.showMessageDialog(null, "Enter valid total sum insured");
					formObject.NGFocus("CPI_SUM_INSURED");
					return 0;
				}
				// Validation changed by Dinesh Kumar on 30Jun2010 to allow all
				// special characters
				if (!ICICIval.validateText(formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO"), "GeneralTextMask")) {
					JOptionPane.showMessageDialog(null, "Enter valid Inst. No./CD No./Dep. Slip No");
					formObject.NGFocus("CPI_INST_NO_CD_NO_DEP_SLIP_NO");
					return 0;
				}

				// *********q_variable for RM_Green_File on 05-10-2010
				// ****************
				//////// //System.out.println("Verma2 Entering RM_Green_File at
				// : " + dateFormat1.format(new Date()));
				formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
				if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("CPI_q_ProductName")) {
					formObject.setNGValue("CPI_PRODUCT_NAME", "");
				}
				formObject.setNGValue("CPI_q_ProductName", formObject.getNGValue("CPI_PRODUCT_NAME"));
				formObject.setNGValue("CPI_q_TotalPremium", formObject.getNGValue("CPI_TOTAL_PREMIUM"));
				// formObject.setNGValue("CPI_q_Transaction_ID",
				// formObject.getNGValue("CPI_TRANSACTION_ID")); //Vendor login
				// & weather Product CR
				formObject.setNGValue("CPI_q_Quote_No", formObject.getNGValue("CPI_QUOTE_NO"));
				formObject.setNGValue("CPI_q_PrimaryVertical", formObject.getNGValue("CPI_PRIMARY_VERTICAL"));
				formObject.setNGValue("CPI_q_CustomerName", formObject.getNGValue("CPI_CUSTOMER_NAME"));
				/***************
				 * Start CR-OMCPI-1314-04 URN No
				 *****************/
				if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")) {
					String urnDateStatus = "";
					if (formObject.getNGValue("CPI_RISK_INSPECTION_DATE") != null
							&& !formObject.getNGValue("CPI_RISK_INSPECTION_DATE").equalsIgnoreCase("")) {
						urnDateStatus = getFinancialYear(formObject.getNGValue("CPI_RISK_INSPECTION_DATE"));
					}
					if (formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("Follower")
							&& (urnDateStatus != null && !urnDateStatus.equalsIgnoreCase("0"))) {
						//////// //System.out.println("urnDateStatus RM
						//////// GreenFile Follower case: " + urnDateStatus);
						if (validateType("CPI_Leader_URN_No", formObject.getNGValue("CPI_Leader_URN_No"), "lengthCheck",
								"leader URN") == 0) {
							formObject.NGFocus("CPI_Leader_URN_No");
							return 0;
						}
					}
				}
				/***************
				 * End CR-OMCPI-1314-04 URN No
				 *******************/
				//////// //System.out.println("Verma3 Entering RM_Green_File at
				//////// : " + dateFormat1.format(new Date()));
				// *********End***************************************************
			} else if (pEventName.equalsIgnoreCase("D")) {
				if (RM_Green_File("S", "") == 0) {
					return 0;
				}
				str[0] = "ChkExpClear";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (obj.toString().equalsIgnoreCase("R")) {
					JOptionPane.showMessageDialog(null, "Please clear all exceptions");
					return 0;
				}

				/*
				 * =============================CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */
				if (CheckMandatoryCombo("CPI_SERVICE_RENDERED_JK", "SERVICE RENDERED UNDER J&K") == 0) {
					// //System.out.println("Inside validation mapping bucket
					// under Endorsement Bucket Done");
					return 0;
				}
				/*
				 * =============================END CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */

				/***** Start CR-8001-87420-Green File Digitization *****/

				/*
				 * if(formObject.getNGValue("CPI_SECONDARY_MO_ID") == null ||
				 * formObject.getNGValue("CPI_SECONDARY_MO_ID").equalsIgnoreCase
				 * ("")) { JOptionPane.showMessageDialog(null,
				 * "Please Enter Correct ID in SECONDARY_MO_ID.");
				 * formObject.NGFocus("CPI_SECONDARY_MO_ID"); return 0; }
				 */
				if ((formObject.getNGValue("CPI_GRNFL_PROPOSAL_NO") == null
						|| formObject.getNGValue("CPI_GRNFL_PROPOSAL_NO").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal"))
						&& !(formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct PROPOSAL_NO.");
					formObject.NGFocus("CPI_GRNFL_PROPOSAL_NO");
					return 0;
				}
				if ((formObject.getNGValue("CPI_ADDTNL_CIT_RM_ID") == null
						|| formObject.getNGValue("CPI_ADDTNL_CIT_RM_ID").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG1")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG2")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
						&& (ActivityName.equalsIgnoreCase("RM_Green_File"))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct ID in ADDTNL_CIT_RM_ID.");
					formObject.NGFocus("CPI_ADDTNL_CIT_RM_ID");
					return 0;
				}
				if (formObject.getNGValue("CPI_UW_EMP_ID") == null
						|| formObject.getNGValue("CPI_UW_EMP_ID").equalsIgnoreCase("")
								&& (ActivityName.equalsIgnoreCase("RM_Green_File"))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct ID in UW_EMP_ID.");
					formObject.NGFocus("CPI_UW_EMP_ID");
					return 0;
				}
				if ((formObject.getNGValue("CPI_PREV_POLICY_NO") == null
						|| formObject.getNGValue("CPI_PREV_POLICY_NO").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal"))
						&& (ActivityName.equalsIgnoreCase("RM_Green_File"))
						&& (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct ID in PREV_POLICY_NO.");
					formObject.NGFocus("CPI_PREV_POLICY_NO");
					return 0;
				}
				if ((formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")
						|| formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower"))
						&& (ActivityName.equalsIgnoreCase("RM_Green_File"))) {
					if (CheckMandatoryCombo("CPI_IL_CO_INS_LEADER", "IL_CO_INS_LEADER") == 0) {
						// //System.out.println("CR-8001-87420-Green File
						// Digitization");
						return 0;
					}
				}
				if ((formObject.getNGValue("CPI_IL_SHARE") == null
						|| formObject.getNGValue("CPI_IL_SHARE").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_IL_CO_INS_LEADER").equalsIgnoreCase("IL Share Payout"))
						&& (ActivityName.equalsIgnoreCase("RM_Green_File"))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct ID in IL_SHARE.");
					formObject.NGFocus("CPI_IL_SHARE");
					return 0;
				}
				if ((formObject.getNGValue("CPI_CO_INSURER_NAME1") == null
						|| formObject.getNGValue("CPI_CO_INSURER_NAME1").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_CO_INSURER_SHARE1") == null
								|| formObject.getNGValue("CPI_CO_INSURER_NAME1").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")
								|| formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower"))
						&& (ActivityName.equalsIgnoreCase("RM_Green_File"))) {
					JOptionPane.showMessageDialog(null, "Please Enter Co-Insurer Name and Share To Proceed.");
					formObject.NGFocus("CPI_CO_INSURER_NAME1");
					return 0;
				}
				if (formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("Yes")
						&& (ActivityName.equalsIgnoreCase("RM_Green_File"))) {
					if (CheckMandatoryCombo("CPI_RI_INWARD_TYPE", "RI_INWARD_TYPE") == 0) {
						// //System.out.println("CR-8001-87420-Green File
						// Digitization");
						return 0;
					}
				}
				if ((formObject.getNGValue("CPI_RM_EMP_ID_SPG_IBG") == null
						|| formObject.getNGValue("CPI_RM_EMP_ID_SPG_IBG").equalsIgnoreCase(""))
						&& (formObject.getNGValue("CPI_prIMARY_SUB_VERTICAL").equalsIgnoreCase("IBGNP"))
						&& (ActivityName.equalsIgnoreCase("RM_Green_File"))) {
					JOptionPane.showMessageDialog(null, "Please Enter Correct ID in RM_EMP_ID_SPG_IBG.");
					formObject.NGFocus("CPI_RM_EMP_ID_SPG_IBG");
					return 0;
				}
				// write validation code for neft details.
				if (formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal")
						&& formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("GROUPHEALTHFLOATERPOLICY")
						&& (ActivityName.equalsIgnoreCase("RM_Green_File"))) {
					if (CheckMandatoryCombo("CPI_NEFT_DETAILS", "NEFT_DETAILS") == 0) {
						// //System.out.println("CR-8001-87420-Green File
						// Digitization");
						return 0;
					}
				}
				/***** End CR-8001-87420-Green File Digitization *****/

				/******
				 * Start CR GREEN FILE Digitization Phase II (Yogesh)
				 ******/
				if (!(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
						|| !(formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) && !(formObject
								.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
					if ((formObject.getNGValue("CPI_RMT_FLAG") == null
							|| formObject.getNGValue("CPI_RMT_FLAG").equalsIgnoreCase(""))
							&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
									|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG1")
									|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG2")
									|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
							&& ActivityName.equalsIgnoreCase("RM_Green_File")) {
						JOptionPane.showMessageDialog(null, "Kindly Select the Document Received Type");
						formObject.NGFocus("CPI_RMT_FLAG");
						return 0;
					}
				}
				/****** End CR GREEN FILE Digitization Phase II (Yogesh) ******/
				if (CheckMandatoryTextBox("CPI_PAS", "PAS") == 0) {
					return 0;
				}

				/***********************
				 * Start CR-8001-54702 E-Mail Filter
				 ***************************/
				if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")) {
					if (CheckMandatoryTextBox("CPI_QUOTE_NO", "Quote No") == 0) {
						//////// //System.out.println("CR-8001-54702 E-Mail
						//////// Filter CPI QUOTE NO validation");
						return 0;
					}
				}
				/***********************
				 * End CR-8001-54702 E-Mail Filter
				 ***************************/

				/***************************
				 * PID-CPI process changes
				 ***************************/
				// if(formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")
				// &&
				// (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")
				// ||
				// (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
				// &&
				// formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement"))
				// ||
				// (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
				// &&
				// formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate
				// Policy Insurance") &&
				// formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal"))
				// ))
				if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")
						|| formObject.getNGValue("CPI_PAS").equalsIgnoreCase("OM")
						|| (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
								&& formObject.getNGValue("CPI_Process_Type")
										.equalsIgnoreCase("Corporate Policy Insurance")
								&& formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal"))) {
					if (CheckMandatoryTextBox("CPI_CUSTOMER_ID", "Customer ID") == 0) {
						return 0;
					}

				}
				String custid = formObject.getNGValue("CPI_CUSTOMER_ID");
				//////// //System.out.println("custid
				//////// in=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
				if (custid != null && !custid.equals("") && custid.length() > 0) {
					if (validateType("CPI_CUSTOMER_ID", formObject.getNGValue("CPI_CUSTOMER_ID"), "OnlyNumeric",
							"CUSTOMER_ID") == 0) {
						//////// //System.out.println("CPI_CUSTOMER_ID value
						//////// in=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
						return 0;
					}

					if (custid != null && custid.length() > 0 && custid.length() < 12) {
						JOptionPane.showMessageDialog(null, "Min length of Customer ID is 12");
						return 0;
					}
				}
				/***********************
				 * Start CR-8001-61337 URN Medium Priority
				 ***************************/
				if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000"))
						&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
								|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
								|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
										.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
								|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000")
								|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000"))) {
					String cifid1 = formObject.getNGValue("CPI_CIF_ID");
					//////// //System.out.println("checking CIF ID max length
					//////// validation cifid1 in RM_Green_File for
					//////// BABBGKRG"+cifid1);
					if (cifid1 != null && cifid1.length() > 20) {
						JOptionPane.showMessageDialog(null, "Max length of CIF ID is 20");
						formObject.NGFocus("CORP_CIF_ID");
						return 0;
					}
				}
				// to check product type in rm_green done
				////////// //System.out.println("Value of End product_type in
				// rm_green done: " +
				// formObject.getNGValue("End_PRODUCT_TYPE"));

				//////// //System.out.println("Value of CPI product_type in
				//////// rm_green done : " +
				//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));
				/***********************
				 * End CR-8001-61337 URN Medium Priority
				 ***************************/

				String modeofpayment = formObject.getNGValue("CPI_MODE_OF_PAYMENT");
				//////// //System.out.println("modeofpayment==="+modeofpayment);
				if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("CDBG")) {
					//////// //System.out.println("modeofpayment1==="+modeofpayment);
					if (CheckMandatoryTextBox("CPI_CDBG_NO", "CDBGNO") == 0) {
						return 0;
					}

				}
				String Others = formObject.getNGValue("CPI_MODE_OF_PAYMENT");
				//////// //System.out.println("Others==="+Others);
				if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("Others")) {
					//////// //System.out.println("Others1==="+Others);
					if (CheckMandatoryTextBox("CPI_OTHER_PIDNO", "OTHER_PIDNO") == 0) {
						return 0;
					}

				}
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")
						|| formObject.getNGValue("CPI_PAS").equalsIgnoreCase("OM")) {
					if (!formObject.getNGValue("CPI_QUOTE_NO").equalsIgnoreCase("")
							&& duplicateCheck("CPI_QUOTE_NO", formObject.getNGValue("CPI_QUOTE_NO")) == 0) {
						JOptionPane.showMessageDialog(null, "Quote No. already exists");
						return 0;
					}
				}
				if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")) {
					String transactionId = formObject.getNGValue("CPI_TRANSACTION_ID");
					//////// //System.out.println("transactionId==="+transactionId);
					if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("") && transactionId != null
							&& !transactionId.equals("") && transactionId.length() > 0) {
						if (transactionId.length() > 0 && transactionId.length() < 10) {
							JOptionPane.showMessageDialog(null, "Length of TRANSACTION ID ID is 10 digits");
							return 0;
						}
					}
				}
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				if (CheckMandatoryTextBox("CPI_CUSTOMER_NAME", "Customer Name") == 0) {
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_CLIENT_INFORMATION", "Client Information") == 0) {
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_RM_ID", "RM ID") == 0) {
					return 0;
				}

				// ============= RM ID Validation at RM Green File
				// ====================
				//////// //System.out.println("RM ID Validation:RM Green File");
				String sResult = "";
				String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
				//////// //System.out.println("sunil00:sCPI_RM_ID: " +
				//////// sCPI_RM_ID);

				// ============= Check RM User in the OmniFlow
				// ====================
				String sQuery = "SELECT count(1) FROM PDBUSER where useralive = 'Y' and USERNAME='" + sCPI_RM_ID + "'";
				//////// //System.out.println("sunil3:Endorsement:" + sQuery);
				ArrayList getUser = formObject.getNGDataFromDataSource(sQuery, 1);
				String s_RMUser = (getUser.get(0)).toString();
				s_RMUser = s_RMUser.substring(s_RMUser.indexOf("[") + 1, s_RMUser.indexOf("]"));
				//////// //System.out.println("s_RMUser: " + s_RMUser);
				int iRMValue = Integer.parseInt(s_RMUser);
				//////// //System.out.println("iRMValue: " + iRMValue);

				// *********** Checking RM USer Exist status ****************
				if (iRMValue > 0) {
					// ************* RM ID Locked Status ***************
					/*
					 * sQuery="SELECT count(1) FROM ng_rm_master where EMP_CODE='"
					 * +sCPI_RM_ID+"'"; ////////
					 * //System.out.println("sunil3:Endorsement:"+sQuery);
					 * ArrayList
					 * getReason=formObject.getNGDataFromDataSource(sQuery,1);
					 * String s_Field_Value=(getReason.get(0)).toString();
					 * s_Field_Value=s_Field_Value.substring(s_Field_Value.
					 * indexOf("[")+1,s_Field_Value.indexOf("]")); ////////
					 * //System.out.println("s_Field_Value: "+s_Field_Value);
					 * int iValue = Integer.parseInt(s_Field_Value); ////////
					 * //System.out.println("iValue: "+iValue); // ***********
					 * Checking RM USer Exist status **************** if
					 * (iValue>0) { ////////
					 * //System.out.println("RM ID Found:");
					 * sQuery="SELECT USERLOCKED FROM USERSECURITY WHERE USERINDEX = (SELECT USERINDEX FROM PDBUSER WHERE USERNAME ='"
					 * +sCPI_RM_ID+"')"; // *********** Checking RM Locked
					 * status **************** ////////
					 * //System.out.println("sQuery: "+sQuery); ArrayList
					 * getRMLockedStatus=formObject.getNGDataFromDataSource(
					 * sQuery,1); //ArrayList
					 * getRMLockedStatus=ifformObject.getNGDataFromDataSource(
					 * sQuery,1); ////////
					 * //System.out.println("getRMLockedStatussize(): "
					 * +getRMLockedStatus.size()); String
					 * s_Value=(getRMLockedStatus.get(0)).toString();
					 * s_Value=s_Value.substring(s_Value.indexOf("[")+1,s_Value.
					 * indexOf("]")); ////////
					 * //System.out.println("s_Value: "+s_Value);
					 * if(s_Value.equalsIgnoreCase("Y")) { ////////
					 * //System.out.println("RM ID Found but is Locked:");
					 * JOptionPane.showMessageDialog(
					 * null,"Specified RM ID is Locked.");
					 * formObject.NGFocus("CPI_RM_ID"); return 0; } //
					 * *********** End of Checking RM Locked status
					 * **************** } else { ////////
					 * //System.out.println("RM ID Not Found:");
					 * JOptionPane.showMessageDialog(
					 * null,"RM ID does not exist in Master.");
					 * formObject.NGFocus("CPI_RM_ID"); return 0; }
					 */
				} else {
					//////// //System.out.println("RM ID Not Found:");
					JOptionPane.showMessageDialog(null, "RM ID does not exist in OmniFlow System or Inactive.");
					formObject.NGFocus("CPI_RM_ID");
					return 0;
				}
				// ============= End Check RM User in the OmniFlow
				// ====================

				if (CheckMandatoryTextBox("CPI_RM_NAME", "RM Name") == 0) {
					return 0;
				}
				if (formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill  IL Location .");
					formObject.NGFocus("CPI_IL_LOCATION");
					return 0;
				}
				if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill  PRIMARY VERTICAL .");
					formObject.NGFocus("CPI_PRIMARY_VERTICAL");
					return 0;
				}
				// Added check mandatory for Sub verical based on primary
				// vertical on 03/09/2010.
				//////// //System.out.println("5555555");
				if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase(
								"RETAIL") /*
											 * || formObject.getNGValue(
											 * "CPI_PRIMARY_VERTICAL").
											 * equalsIgnoreCase("SME")
											 */) {
					if (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill Primary Sub Vertical .");
						formObject.NGFocus("CPI_PRIMARY_SUB_VERTICAL");
						return 0;
					}
				}
				// End check mandatory for Sub verical based on primary vertical
				// on 03/09/2010.
				// added for primary sub vertical BBG and KRG
				if ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
						|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase(
								"KRG")) /*
										 * && /***************************** CR
										 * 28 by satish
										 *****************************/ /******
																		 * CR-OMCPI-1314-02
																		 * FIG
																		 * COB
																		 * CR
																		 * (Added
																		 * FIG
																		 * in
																		 * Primary_vertical)
																		 ******/
				/*
				 * !(formObject.getNGValue("CPI_PRIMARY_VERTICAL").
				 * equalsIgnoreCase("SME") ||
				 * formObject.getNGValue("CPI_PRIMARY_VERTICAL").
				 * equalsIgnoreCase("CSG") ||
				 * formObject.getNGValue("CPI_PRIMARY_VERTICAL").
				 * equalsIgnoreCase("FIG")) /**** End CR-OMCPI-1314-02 FIG COB
				 * CR (Added FIG in Primary_vertical)
				 ****/ /***************************
						 * End CR 28 by satish
						 ***************************/
				) {
					/*
					 * if (CheckMandatoryTextBox("CPI_CHANNEL_EMPLOYEE_ID",
					 * "Channel Employee ID") == 0) { return 0; }
					 */ // Commented as it is used in Below Code
						// /********************** Start Omni flow CPI
						// –Channel Employee id – MH V 1.0
						// **********************/
					if (formObject.getNGValue("CPI_Source_Name").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  Source Name .");
						formObject.NGFocus("CPI_Source_Name");
						return 0;
					}
					if (formObject.getNGValue("CPI_CHANNEL_NAME").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  CHANNEL NAME .");
						formObject.NGFocus("CPI_CHANNEL_NAME");
						return 0;
					}
					if (formObject.getNGValue("CPI_BRANCH_NAME").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  Branch Name .");
						formObject.NGFocus("CPI_BRANCH_NAME");
						return 0;
					}
					/***************************
					 * PID-CPI process changes
					 ***************************/
					if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000"))
							&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
									|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000"))) {
						if (CheckMandatoryTextBox("CPI_PRIVILEGE_BANKER_CODE", "Privilege Banker Code") == 0) {
							return 0;
						}
					}
					if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000"))
							&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
											.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
									|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000"))) {

						/**********************
						 * Start Omni flow CPI –Channel Employee id – MH V
						 * 1.0
						 **********************/

						//////// //System.out.println("Entering In Enabling
						//////// Fields For BA And BBG/KRG Omni flow CPI
						//////// –Channel Employee id – MH V 1.0");
						if (CheckMandatoryTextBox("CPI_CHANNEL_EMPLOYEE_ID", "Channel Employee ID") == 0) {
							//////// //System.out.println("CPI_CHANNEL_EMPLOYEE_ID:
							//////// ");
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_CHANNEL_EMPLOYEE_NAME", "Channel Employee NAME") == 0) {
							//////// //System.out.println("CPI_CHANNEL_EMPLOYEE_NAME:
							//////// ");
							return 0;
						}

						/**********************
						 * End Omni flow CPI –Channel Employee id – MH V 1.0
						 **********************/

						if (CheckMandatoryTextBox("CPI_CIF_ID", "CF ID") == 0) {

							return 0;
						}
						//////// //System.out.println("Exiting From Enabling
						//////// Fields For BA And BBG/KRG Omni flow CPI
						//////// –Channel Employee id – MH V 1.0");
					}
					/***********************
					 * End PID-CPI process changes
					 ***************************/
				}
				/*****************************
				 * CR 28 by satish
				 *****************************/
				/******
				 * CR-OMCPI-1314-02 FIG COB CR (Added FIG in Primary_vertical
				 * and COB in Business_type)
				 ******/
				if (((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
						&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
								|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
						&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes"))
						|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
								&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB"))
								&& formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("COB"))
						|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
								&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
										|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
								&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("No")
								&& !formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase(""))) {
					//////// //System.out.println("Validation CR 28: Inside
					//////// common Mandatory validation");
					if ((formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes")
							&& !formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT").equalsIgnoreCase(""))
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("COB")) {
						//////// //System.out.println("Validation CR 28: Inside
						//////// Mandatory validation for ibank agent.");
						if (formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  SOURCE NAME .");
							formObject.NGFocus("CPI_SOURCE_NAME");
							return 0;
						}
					}
					if (CheckMandatoryTextBox("CPI_CHANNEL_EMPLOYEE_ID", "Channel Employee ID") == 0) {
						return 0;
					}
					if (CheckMandatoryTextBox("CPI_CHANNEL_EMPLOYEE_NAME", "Channel Employee Name") == 0) {
						return 0;
					}
					if (formObject.getNGValue("CPI_CHANNEL_NAME").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  CHANNEL NAME .");
						formObject.NGFocus("CPI_CHANNEL_NAME");
						return 0;
					}
					if (formObject.getNGValue("CPI_BRANCH_NAME").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  Branch Name .");
						formObject.NGFocus("CPI_BRANCH_NAME");
						return 0;
					}
				}
				/****
				 * End CR-OMCPI-1314-02 FIG COB CR (Added FIG in
				 * Primary_vertical and COB in Business_type)
				 ****/
				/***************************
				 * End CR 28 by satish
				 ***************************/
				// ================ CR 15 ==================
				if ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
						&& formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("RLG"))
						|| ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG") || formObject
								.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KEY RELATIONSHIP GROUP"))
								&& formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("ING Vysya"))
						|| (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("Home")
								&& formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA"))
						|| /*****************************
							 * CR 28 by satish
							 *****************************/
						((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
								&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
										|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
								&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes"))
						|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
								|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
								&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
										|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
								&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("No")
								&& !formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase(
										"")) /***************************
												 * End CR 28 by satish
												 ***************************/
				) {
					//////// //System.out.println("Validation CR 28: Inside
					//////// common Mandatory validation");
					/**************************************
					 * CR-8001-92286 Omniflow held cover letter CR Start
					 *****************************************************/
					if (formObject.getNGValue("CPI_SPECIFIED_PERSON").equalsIgnoreCase("")) {
						/*
						 * JOptionPane.showMessageDialog(null,
						 * "Please fill  Specified Person .");
						 * formObject.NGFocus("CPI_SPECIFIED_PERSON"); return 0;
						 */
					}
					/**************************************
					 * CR-8001-92286 Omniflow held cover letter CR End
					 *****************************************************/
				}
				// ================End CR 15 ===============

				if (CheckMandatoryTextBox("CPI_BUSINESS_TYPE", "Business Type") == 0) {
					return 0;
				}
				/*****************************
				 * CR 28 by satish
				 *****************************/
				/*
				 * if(CheckMandatoryCombo(
				 * "CPI_NAME_OF_BROKER_AGENT","Name of Broker/Agent/Intermediary"
				 * )== 0) return 0;
				 */
				/******
				 * CR-OMCPI-1314-02 FIG COB CR (Added COB in Business_type)
				 ******/
				if (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
						|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker")
						|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB")) {
					if (formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  Name of Broker/Agent/Intermediary .");
						formObject.NGFocus("CPI_NAME_OF_BROKER_AGENT");
						return 0;
					}
				}
				/****
				 * End CR-OMCPI-1314-02 FIG COB CR (Added COB in Business_type)
				 ****/
				/***************************
				 * End CR 28 by satish
				 ***************************/
				if (CheckMandatoryTextBox("CPI_PERCENTAGE_OF_COMMISION", "Percentage of Commision") == 0) {
					return 0;
				}
				if (CheckMandatoryCombo("CPI_BOOKING_TYPE", "Booking type") == 0) {
					return 0;
				}
				if (CheckMandatoryCombo("CPI_TRANSACTION_TYPE", "Transaction type") == 0) {
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_COINSURANCE", "Co-Insurance") == 0) {
					return 0;
				}
				/*******************************
				 * CR 44 by satish
				 ****************************/
				if (formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Leader")
						|| formObject.getNGValue("CPI_coINSURANCE").equalsIgnoreCase("Follower")) {
					if (CheckMandatoryTextBox("CPI_OUR_SHARE_PREMIUM", "Our share premium") == 0) {
						return 0;
					}
				}
				/****************************
				 * end CR 44 by satish
				 ***************************/
				if (CheckMandatoryCombo("CPI_PRODUCT_TYPE", "Product Type") == 0) {
					return 0;
				}
				if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill  Product Name .");
					formObject.NGFocus("CPI_PRODUCT_NAME");
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_TOTAL_PREMIUM", "Total Premium") == 0) {
					formObject.setNGValue("CPI_PAN",
							""); /**********************
									 * Start CPI Omniflow CPI-
									 * CR-8001-59268(FlapPrint) CR
									 ***********************/
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_NAME_OF_LEADER", "Name of Leader") == 0) {
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_DIVISIONAL_OFFICE_CODE", "Divisional Office Code") == 0) {
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_PERCENTAGE_SHARE", "Percentage Share") == 0) {
					return 0;
				}

				/*************************
				 * CPI URN CR 8001-61339 Multiple Changes CR
				 ******************/

				if (CheckMandatoryCombo("CPI_MH", "MH ") == 0) {

					formObject.NGFocus("CPI_MH");
					return 0;
				}

				if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("Yes")) {
					formObject.setNGValue("CPI_Exception_To_MH", "");
					if (CheckMandatoryTextBox("CPI_MH_Interaction_No", "MH Interaction No") == 0) {
						//////// //System.out.println("Please fill
						//////// CPI_MH_Interaction_No ::::::::::");
						formObject.NGFocus("CPI_MH_Interaction_No");
						return 0;
					}
				}

				String mhNo = formObject.getNGValue("CPI_MH_Interaction_No");
				//////// //System.out.println("mhNo in RM_Green_File :
				//////// "+formObject.getNGValue("CPI_MH_Interaction_No"));
				if (mhNo != null && mhNo.length() > 0 && mhNo.length() > 15) {
					JOptionPane.showMessageDialog(null, "Max length of MH Interaction No is 15");
					return 0;
				}

				if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("No")) {

					//////// //System.out.println("Please fill
					//////// CPI_Exception_To_MH inside NO :");
					formObject.setNGValue("CPI_MH_Interaction_No", "");
					/*
					 * if (CheckMandatoryTextBox("CPI_Exception_To_MH",
					 * "MH Exception") == 0) {
					 * 
					 * formObject.NGFocus("CPI_Exception_To_MH"); return 0;
					 * 
					 * }
					 */
					/*************************
					 * CPI URN CR 8001-61339 Multiple Changes CR Added on 01
					 * june 2015
					 ******************/
					String exToMh = formObject.getNGValue("CPI_Exception_To_MH");
					//////// //System.out.println("exToMh in RM_Green_File :
					//////// "+formObject.getNGValue("CPI_Exception_To_MH"));
					if (exToMh == null || exToMh.equals("null") || exToMh.equals("")) {
						//////// //System.out.println("Please fill
						//////// CPI_Exception_To_MH outside
						//////// CheckMandatoryTextBox :::::::");
						JOptionPane.showMessageDialog(null, "Please Fill Exception to MH .");
						formObject.NGFocus("CPI_Exception_To_MH");
						//////// //System.out.println("Please fill
						//////// CPI_Exception_To_MH after return
						//////// CheckMandatoryTextBox :::::::");
						return 0;

					}
					/*************************
					 * CPI URN CR 8001-61339 Multiple Changes CR Added on 01
					 * june 2015
					 ******************/
				}
				/********************
				 * End CPI URN CR 8001-61339 Multiple Changes CR
				 ******************/

				/**********************
				 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
				 ***********************/

				String totalpremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
				//////// //System.out.println("Inside GreenFile Method Checking
				//////// totalpremium validation CR-8001-59268 :
				//////// "+totalpremium);
				boolean flag1 = false;
				int totalpremiumparsed = 0;
				if (totalpremium != null && !totalpremium.equalsIgnoreCase("")) {
					try {
						totalpremiumparsed = Integer.parseInt(totalpremium);
						//////// //System.out.println("After parsing
						//////// totalpremiumparsed: "+totalpremiumparsed);
					} catch (Exception e) {
						flag1 = true;
					}
					if (!flag1 && totalpremiumparsed >= 100000) {
						//////// //System.out.println("Inside IF GreenFile
						//////// Method Checking totalpremiumparsed validation
						//////// CR-8001-59268 : "+totalpremiumparsed);
						// formObject.setNGEnable("CPI_PAN", true);
						formObject.setNGLocked("CPI_PAN", true);
						if (CheckMandatoryTextBox("CPI_PAN", "PAN") == 0) {
							formObject.NGFocus("CPI_PAN");
							return 0;
						}

						if (formObject.getNGValue("CPI_PAN") != null
								&& !formObject.getNGValue("CPI_PAN").equalsIgnoreCase("")
								&& validateType("CPI_PAN", formObject.getNGValue("CPI_PAN"), "OnlyPanNo", "PAN") == 0) {
							//////// //System.out.println("In GreenFile For
							//////// checking CPI_PAN value
							//////// in=="+formObject.getNGValue("CPI_PAN"));
							String PANNO = formObject.getNGValue("CPI_PAN");
							//////// //System.out.println("In GreenFile For
							//////// checking CPI_PAN value in=="+PANNO);
							return 0;
						}

					}

				}

				/**********************
				 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
				 ************************/

				/***************************
				 * PID-CPI process changes
				 ***************************/
				if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					if (CheckMandatoryCombo("CPI_PID_PAYMENT_TYPE", "PID Tagging") == 0) {
						return 0;
					}
				}
				/*
				 * if (CheckMandatoryCombo("CPI_MODE_OF_PAYMENT",
				 * "Mode Of Payment") == 0) { return 0; }
				 */
				if (!formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")) {
					/*
					 * if (CheckMandatoryTextBox("CPI_MODE_OF_PAYMENT",
					 * "Mode Of Payment") == 0) { return 0; }
					 */
					if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill Mode Of Payment");
						formObject.NGFocus("CPI_MODE_OF_PAYMENT");
						return 0;
					}
					if (!formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("Yes")) {
						if (CheckMandatoryTextBox("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
								"Inst. No./CD No./Dep. Slip No.") == 0) {
							return 0;
						}
					}
					if (!formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("Adjustment")) {
						if (CheckMandatoryTextBox("CPI_BANK_NAME_CD_NAME", "BANK NAME CD NAME") == 0) {
							return 0;
						}
						if (CheckMandatoryDate("CPI_INSTRUMENT_DATE", "Instrument Date") == 0) {
							return 0;
						}
					}

					/***********************
					 * Start CR-8001-54702 E-Mail Filter
					 ***************************/
					if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT") != null
							&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT").equalsIgnoreCase("")
							&& validateType("CPI_INSTRUMENT_AMOUNT", formObject.getNGValue("CPI_INSTRUMENT_AMOUNT"),
									"OnlyIntegers", "INSTRUMENT_AMOUNT") == 0) {
						//////// //System.out.println("For checking(filter)
						//////// CPI_INSTRUMENT_AMOUNT value
						//////// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT"));
						return 0;
					}

					if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2") != null
							&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2").equalsIgnoreCase("")
							&& validateType("CPI_INSTRUMENT_AMOUNT2", formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2"),
									"OnlyIntegers", "INSTRUMENT_AMOUNT2") == 0) {
						//////// //System.out.println("For checking(filter)
						//////// CPI_INSTRUMENT_AMOUNT2 value
						//////// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2"));
						return 0;
					}

					if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3") != null
							&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3").equalsIgnoreCase("")
							&& validateType("CPI_INSTRUMENT_AMOUNT3", formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3"),
									"OnlyIntegers", "INSTRUMENT_AMOUNT3") == 0) {
						//////// //System.out.println("For checking(filter)
						//////// CPI_INSTRUMENT_AMOUNT3 value
						//////// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3"));
						return 0;
					}
					/***********************
					 * End CR-8001-54702 E-Mail Filter
					 ***************************/

				}
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				if (CheckMandatoryDate("CPI_RISK_INSPECTION_DATE", "Risk Inception Date") == 0) {
					return 0;
				}

				/*********************
				 * CR 45 Network Partner
				 *****************************/
				if (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("iPartner")
						&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					if (CheckMandatoryCombo("CPI_NETWORK_PARTNER", "Network Partner") == 0) {
						return 0;
					}
					if (formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("Yes")) {
						if (formObject.getNGValue("CPI_NETWORK_PARTNER_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Network Partner Name .");
							formObject.NGFocus("CPI_NETWORK_PARTNER_NAME");
							return 0;
						}
					}
				}
				/*********************
				 * End CR 45 Network Partner
				 *************************/

				if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("Adjustment")) {
					if (CheckMandatoryTextBox("CPI_REMARK", "Remark") == 0) {
						return 0;
					}
				}
				if (!(formObject.getNGValue("CPI_INSTRUMENT_DATE").equalsIgnoreCase(""))) {
					if (datesCompare(formObject.getNGValue("CPI_RISK_INSPECTION_DATE"),
							formObject.getNGValue("CPI_INSTRUMENT_DATE")) == 2) {
						JOptionPane.showMessageDialog(null, "64 VB Case");
						formObject.NGFocus("CPI_INSTRUMENT_DATE");
						// return 0;
					}
				}
				if (CheckMandatoryCombo("CPI_RI_INWARD", "RI Inward") == 0) {
					return 0;
				}
				if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("CPI_q_ProductName")) {
					JOptionPane.showMessageDialog(null, "Please fill  Product Name .");
					formObject.setNGValue("CPI_PRODUCT_NAME", "");
					formObject.NGFocus("CPI_PRODUCT_NAME");
					return 0;
				}
				/***************
				 * Start CR-OMCPI-1314-04 URN No
				 *****************/
				if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& !formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance")) {
					String urnDateStatus = "";
					if (formObject.getNGValue("CPI_RISK_INSPECTION_DATE") != null
							&& !formObject.getNGValue("CPI_RISK_INSPECTION_DATE").equalsIgnoreCase("")) {
						urnDateStatus = getFinancialYear(formObject.getNGValue("CPI_RISK_INSPECTION_DATE"));
					}
					if (formObject.getNGValue("CPI_CoInsurance").equalsIgnoreCase("Leader")
							&& (urnDateStatus != null && !urnDateStatus.equalsIgnoreCase("0"))) {
						//////// //System.out.println("urnDateStatus RM
						//////// GreenFile Leader case: " + urnDateStatus);
						//////// //System.out.println("CPI_CoInsurance while
						//////// click on done button : ");
						if (!formObject.isNGLocked("CPI_Leader_URN_No")) {
							formObject.setNGLocked("CPI_Leader_URN_No", true);
						}
						if (CheckMandatoryCombo("CPI_Leader_URN_No", "Leader URN No") == 0) {
							//////// //System.out.println("saa ");
							formObject.NGFocus("CPI_Leader_URN_No");
							formObject.setNGLocked("CPI_Leader_URN_No", false);
							return 0;
						}

					}

				}
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				//////// //System.out.println("RM_Green_File
				//////// CPI_RISK_EXPIRY_DATE :
				//////// "+formObject.getNGValue("CPI_RISK_EXPIRY_DATE"));
				//////// //System.out.println("CPI_quOTE_SYS_ID :
				//////// "+formObject.getNGValue("CPI_quOTE_SYS_ID"));
				if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					if (CheckMandatoryDate("CPI_RISK_EXPIRY_DATE", "Risk Expiry Date") == 0) {
						return 0;
					}
					if (CheckMandatoryTextBox("CPI_LOCATION_OF_RISK", "Location Of Risk") == 0) {
						return 0;
					}
				}
				/*************************
				 * End CPI PID Additional Points
				 **************************/
				/***************
				 * End CR-OMCPI-1314-04 URN No
				 *******************/

				/***********************
				 * Start CR-8001-54702 E-Mail Filter
				 ***************************/
				//////// //System.out.println("checking in rm_green_file Method
				//////// for checking Ias and data val id");
				if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {

					if (CheckMandatoryTextBox("CPI_DATA_VALIDATION_ID", "Data Validation ID") == 0) {
						//////// //System.out.println("CR-8001-54702 E-Mail
						//////// Filter CPI DATA VAL ID validation");
						return 0;
					}

					if (CheckMandatoryTextBox("CPI_IAS_ID", "IAS ID") == 0) {
						//////// //System.out.println("CR-8001-54702 E-Mail
						//////// Filter CPI IAS ID validation");
						return 0;
					}

				}
				/***********************
				 * End CR-8001-54702 E-Mail Filter
				 ***************************/

				/*
				 * =============================CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */
				if (formObject.getNGValue("CPI_SERVICE_RENDERED_JK") == null
						|| formObject.getNGValue("CPI_SERVICE_RENDERED_JK").equalsIgnoreCase("--Select--")
						|| formObject.getNGValue("CPI_SERVICE_RENDERED_JK").equalsIgnoreCase("")) {
					// //System.out.println("Inside validation mapping bucket
					// under RM_Green_File Bucket Done");
					if (CheckMandatoryCombo("CPI_SERVICE_RENDERED_JK", "SERVICE RENDERED UNDER J&K") == 0) {
						return 0;
					}
				}
				/*
				 * =============================END CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */

				//////// //System.out.println("RM_Green_File Exit Done : ");

				/**************************************
				 * CR-8001-92286 Omniflow held cover letter CR Start
				 *****************************************************/

				if (formObject.getNGValue("CPI_SUM_INSURED_NO_OF_LIVES").equalsIgnoreCase("")) {
					// //System.out.println("In GreenFile Bucket Done Click
					// checking for CPI_SUM_INSURED_NO_OF_LIVES..vaibhav==");
					JOptionPane.showMessageDialog(null, "Please fill SUM_INSURED No Of Lives.");
					formObject.NGFocus("CPI_SUM_INSURED_NO_OF_LIVES");
					return 0;
				}

				if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
						|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000")) {
					// //System.out.println("In GreenFile Bucket Done Click
					// checking for CPI_RM_LOCATION..vaibhav==");
					if (formObject.getNGValue("CPI_RM_LOCATION").equalsIgnoreCase("")) {
						// //System.out.println("In GreenFile Bucket Done Click
						// checking for CPI_RM_LOCATION..vaibhav==");
						JOptionPane.showMessageDialog(null, "Please fill RM_LOCATION Value As Primary Vertical is BA.");
						formObject.NGFocus("CPI_RM_LOCATION");
						return 0;
					}
					if (formObject.getNGValue("CPI_BSG_LOCATION").equalsIgnoreCase("")) {
						// //System.out.println("In GreenFile Bucket Done Click
						// checking for CPI_BSG_LOCATION..vaibhav==");
						JOptionPane.showMessageDialog(null,
								"Please fill BSG_LOCATION Value As Primary Vertical is BA.");
						formObject.NGFocus("CPI_BSG_LOCATION");
						return 0;
					}
				}
				/**************************************
				 * CR-8001-92286 Omniflow held cover letter CR End
				 ******************************************************/

				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					if (CheckMandatoryCombo("CPI_GST_REGISTERED", "GST Registered Value") == 0) {
						// //System.out.println("Inside GreenFile Bucket Done :
						// CR-8127-95325 : GST-Omniflow development");
						formObject.NGFocus("CPI_GST_REGISTERED");
						return 0;
					}
					/**********
					 * Start CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					if (formObject.getNGValue("CPI_GST_REGISTERED").equalsIgnoreCase("Yes")) {
						if (CheckMandatoryCombo("CPI_GST_INVOICE_OPTION", "GST Invoice Option") == 0) {
							// System.out.println("Inside GreenFile Bucket Done
							// : ");
							formObject.NGFocus("CPI_GST_INVOICE_OPTION");
							return 0;
						}
					}
					/**********
					 * End CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
				}

				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/

				/***************************
				 * Vendor login & weather Product
				 ****************************/

				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				String prodIrdaCode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
				String parentIndex = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
				String vendor1Ind = formObject.getNGValue("CPI_CHILD1_FOLDERINDEX");
				String vendor2Ind = formObject.getNGValue("CPI_CHILD2_FOLDERINDEX");
				//////// //System.out.println("prodIrdaCode before==" +
				//////// prodIrdaCode);
				if (prodIrdaCode.equalsIgnoreCase("4037") || prodIrdaCode.equalsIgnoreCase("4047"))// weatherproduct
				{
					//////// //System.out.println("prodIrdaCode in
					//////// RM_Green_File==" + prodIrdaCode);
					if (parentIndex == null || parentIndex.equalsIgnoreCase("") || vendor1Ind == null
							|| vendor1Ind.equalsIgnoreCase("") || vendor2Ind == null
							|| vendor2Ind.equalsIgnoreCase("")) {

						url = "FolderGeneration.jsp?Process=CPI" + "&Pid=" + sWIName + "&userId=" + sUserName
								+ "&cabinetName=ilombardcabinet" + "&Flag=RM_Green_File";
						showMailPage(url, "docupload");
					}
				}
				/*************************
				 * End Vendor login & weather Product
				 **************************/
				/**********************
				 * Start CR-8001-87420 GREEN FILE Digitization CR Vaibhav
				 ***********************/
				String prodIrdaCode2 = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
				// //System.out.println("prodIrdaCode in GreenFile Bucket Done
				// Click Before Loop..==" + prodIrdaCode2);
				if (!(prodIrdaCode2.equalsIgnoreCase("4037") || prodIrdaCode2.equalsIgnoreCase(
						"4047")) /*
									 * &&
									 * !formObject.getNGValue("CPI_ITRODUCEDBY")
									 * .equalsIgnoreCase("IPARTNER")
									 * CR-8001-71104_CR-8119-87478_Auto CPI
									 * generation iPartner
									 */) {
					String sWIName2 = xmlParserGenData.getValueOf("ProcessInstanceId");
					String sUserName2 = formObject.getUserName();
					String sProcessType = formObject.getNGValue("CPI_pROCESS_TYPE");

					String parentIndex3 = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
					String sflag = "No";
					// //System.out.println("prodIrdaCode in GreenFile Bucket
					// Done Click..==" + prodIrdaCode2);
					// //System.out.println("Green File Digitization Done
					// Click..==" + prodIrdaCode2);
					// //System.out.println("Green File Digitization Done Click
					// parentIndex..==" + parentIndex3);
					if (parentIndex3 == null || parentIndex3.equalsIgnoreCase("")) {
						// //System.out.println("Green File Digitization Done
						// Click parentIndexparentIndex..==" + parentIndex);
						url = "AddFolder.jsp?Process=CPI" + "&process_type=" + sProcessType + "&Pid=" + sWIName2
								+ "&isexistingpath=" + sflag + "&userId=" + sUserName2 + "&cabinetName=ilombardcabinet";
						showMailPage(url, "docupload");
					}
					// //System.out.println("Folder Already Created..in
					// GreenFile..==");
				}

				/**********************
				 * End CR-8001-87420 GREEN FILE Digitization CR Vaibhav
				 ***********************/
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting RM_Green_File at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	private int BSG_QC(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering BSG_QC at : " +
		//////// dateFormat1.format(new Date()));
		try {
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
					&& formObject.getNGValue("CPI_quOTE_SYS_ID") != "") {
				//////// //System.out.println("inside SAve sandeep quote
				//////// validation");

				formObject.setNGValue("CPI_PRIMARY_SUB_VERTICAL", formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL"));
				formObject.setNGValue("CPI_SECONDARY_SUB_VERTICAL",
						formObject.getNGValue("CORP_SECONDARY_SUB_VERTICAL"));
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", formObject.getNGValue("CORP_CHANNEL_EMPLOYEE_ID"));
				/*****************************
				 * CR 28 by satish
				 *****************************/
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", formObject.getNGValue("Corp_Channel_Employee_Name"));
				formObject.setNGValue("CPI_INFRA_COMMISSION", formObject.getNGValue("Corp_Infra_Commission"));
				/***************************
				 * End CR 28 by satish
				 ***************************/
				// formObject.setNGValue("CPI_BANK_NAME_CD_NAME",
				// formObject.getNGValue("CORP_BANK_NAME_CD_NAME"));//PID_CPI
				// process changes

				formObject.setNGValue("CPI_SOURCE_NAME", formObject.getNGValue("CORP_SOURCE_NAME"));
				formObject.setNGValue("CPI_BRANCH_NAME", formObject.getNGValue("CORP_BRANCH_NAME"));
				formObject.setNGValue("CPI_CHANNEL_NAME", formObject.getNGValue("CORP_CHANNEL_NAME"));
				formObject.setNGValue("CPI_PAS", formObject.getNGValue("CORP_PAS"));
				/***************************
				 * PID-CPI process changes
				 ***************************/
				formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", formObject.getNGValue("CORP_PRIVILEGE_BANKER_CODE"));
				formObject.setNGValue("CPI_CIF_ID", formObject.getNGValue("CORP_CIF_ID"));
				System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + ActivityName);
				formObject.setNGValue("CPI_PID_PAYMENT_TYPE", formObject.getNGValue("CORP_PID_PAYMENT_TYPE"));
				formObject.setNGValue("CPI_CUSTOMER_ID", formObject.getNGValue("CORP_CUSTOMER_ID"));
				/***********************
				 * End PID-CPI process changes
				 ***************************/
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				formObject.setNGValue("CPI_PRIMARY_SUB_VERTICAL", formObject.getNGValue("End_PRIMARY_SUB_VERTICAL"));
				formObject.setNGValue("CPI_SECONDARY_SUB_VERTICAL",
						formObject.getNGValue("End_SECONDARY_SUB_VERTICAL"));
				formObject.setNGValue("CPI_SOURCE_NAME", formObject.getNGValue("End_SOURCE_NAME"));
				formObject.setNGValue("CPI_BRANCH_NAME", formObject.getNGValue("End_BRANCH_NAME"));
				formObject.setNGValue("CPI_CHANNEL_NAME", formObject.getNGValue("End_CHANNEL_NAME"));
				formObject.setNGValue("CPI_PAS", formObject.getNGValue("End_PAS"));
				/*
				 * formObject.setNGValue("CPI_MODE_OF_PAYMENT",
				 * formObject.getNGValue("End_MODE_OF_PAYMENT"));
				 */ // Suraj
				/***************************
				 * PID-CPI process changes
				 ***************************/
				/*
				 * formObject.setNGValue("CPI_PID_PAYMENT_TYPE",
				 * formObject.getNGValue("End_PID_PAYMENT_TYPE"));
				 */ // Suraj
				formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", formObject.getNGValue("End_PRIVILEGE_BANKER_CODE"));
				formObject.setNGValue("CPI_CIF_ID", formObject.getNGValue("End_CIF_ID"));
				System.out.println("Setting value CPI_PID_PAYMENT_TYPE at " + ActivityName);
				formObject.setNGValue("CPI_PID_PAYMENT_TYPE", formObject.getNGValue("End_PID_PAYMENT_TYPE"));
				formObject.setNGValue("CPI_CUSTOMER_ID", formObject.getNGValue("End_CUSTOMER_ID"));
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				/*******************************
				 * CR 44 by satish
				 ****************************/
				formObject.setNGValue("CPI_OUR_SHARE_PREMIUM", formObject.getNGValue("End_OUR_SHARE_PREMIUM"));
				formObject.setNGValue("CPI_coINSURANCE", formObject.getNGValue("End_coINSURANCE"));
				/****************************
				 * end CR 44 by satish
				 ***************************/

				/***********************
				 * Start CR-8001-61337 URN Medium Priority
				 ***************************/
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", formObject.getNGValue("End_Channel_Employee_Name"));
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", formObject.getNGValue("End_CHANNEL_EMPLOYEE_ID"));
			}
			// to check product type in BSG_QC done
			//////// //System.out.println("Value of End product_type in BSG_QC
			// done: " + formObject.getNGValue("End_PRODUCT_TYPE"));

			//////// //System.out.println("Value of CPI product_type in BSG_QC
			//////// done: " + formObject.getNGValue("CPI_PRODUCT_TYPE"));

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", formObject.getNGValue("Corp_Channel_Employee_Name"));
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", formObject.getNGValue("CORP_CHANNEL_EMPLOYEE_ID"));
				formObject.setNGValue("CPI_CIF_ID", formObject.getNGValue("CORP_CIF_ID"));
			}
			/***********************
			 * End CR-8001-61337 URN Medium Priority
			 ***************************/
			if (pEventName.equalsIgnoreCase("S")) {

				// Sadik
				// //System.out.println("Sadik FR7 Enabling
				// Btn_GeneratePdf:"+pEventName);
				formObject.setNGEnable("Btn_GeneratePdf", true);
				// End

				/*
				 * =============================CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					// //System.out.println("Inside bucket mapping cr setting
					// value of CPI_SERVICE_RENDERED_JK done");
					formObject.setNGValue("CPI_SERVICE_RENDERED_JK", formObject.getNGValue("Corp_SERVICE_RENDERED_JK"));
					// //System.out.println("Value of Corp_SERVICE_RENDERED_JK
					// on BSG_QC bucket save
					// "+formObject.getNGValue("Corp_SERVICE_RENDERED_JK"));
					// //System.out.println("Value of CPI_SERVICE_RENDERED_JK on
					// BSG_QC bucket save
					// "+formObject.getNGValue("CPI_SERVICE_RENDERED_JK"));
					/***** Start CR-8001-87420-Green File Digitization *****/

					formObject.setNGValue("CPI_ADDTNL_CIT_RM_ID", formObject.getNGValue("CORP_ADDTNL_CIT_RM_ID"));
					formObject.setNGValue("CPI_ADDTNL_CIT_RM_NAME", formObject.getNGValue("CORP_ADDTNL_CIT_RM_NAME"));
					formObject.setNGValue("CPI_UW_EMP_ID", formObject.getNGValue("CORP_UW_EMP_ID"));
					formObject.setNGValue("CPI_UW_NAME", formObject.getNGValue("CORP_UW_NAME"));
					// //System.out.println(" inside CPI_ADDTNL_CIT_RM_ID
					// :"+formObject.getNGValue("CORP_ADDTNL_CIT_RM_ID")+"CPI_ADDTNL_CIT_RM_NAME
					// :"+formObject.getNGValue("CORP_ADDTNL_CIT_RM_NAME")+"CPI_UW_EMP_ID
					// :"+formObject.getNGValue("CORP_UW_EMP_ID") +"CPI_UW_NAME
					// :"+formObject.getNGValue("CORP_UW_NAME"));
					/***** End CR-8001-87420-Green File Digitization *****/
					/******
					 * Start CR GREEN FILE Digitization Phase II (Yogesh)
					 ******/
					// System.out.println("Inside int BSG_QC done Value setting
					// BSG_QC form CR GREEN FILE Digitization Phase II (Yogesh)
					// for Policy");
					formObject.setNGValue("CPI_RMT_FLAG", formObject.getNGValue("CORP_RMT_FLAG"));
					formObject.setNGValue("CPI_PERCENTAGE_OF_COMMISION",
							formObject.getNGValue("CORP_PERCENTAGE_OF_COMMISION"));
					formObject.setNGValue("CPI_TOTAL_PREMIUM", formObject.getNGValue("CORP_TOTAL_PREMIUM"));
					formObject.setNGValue("CPI_PRODUCT_NAME", formObject.getNGValue("CORP_PRODUCT_NAME"));
					/******
					 * End CR GREEN FILE Digitization Phase II (Yogesh)
					 ******/

				}
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					// //System.out.println("Inside bucket mapping cr
					// Endorsement setValue END_SERVICE_RENDERED_JK done");
					formObject.setNGValue("CPI_SERVICE_RENDERED_JK", formObject.getNGValue("END_SERVICE_RENDERED_JK"));
					// //System.out.println("Value of END_SERVICE_RENDERED_JK on
					// BSG_QC bucket save
					// "+formObject.getNGValue("END_SERVICE_RENDERED_JK"));
					// //System.out.println("Value of CPI_SERVICE_RENDERED_JK on
					// BSG_QC bucket save
					// "+formObject.getNGValue("CPI_SERVICE_RENDERED_JK"));
					/***** Start CR-8001-87420-Green File Digitization *****/
					formObject.setNGValue("CPI_ADDTNL_CIT_RM_ID", formObject.getNGValue("END_ADDTNL_CIT_RM_ID"));
					formObject.setNGValue("CPI_ADDTNL_CIT_RM_NAME", formObject.getNGValue("END_ADDTNL_CIT_RM_NAME"));
					formObject.setNGValue("CPI_UW_EMP_ID", formObject.getNGValue("END_UW_EMP_ID"));
					formObject.setNGValue("CPI_UW_NAME", formObject.getNGValue("END_UW_NAME"));
					// //System.out.println(" inside CPI_ADDTNL_CIT_RM_ID
					// :"+formObject.getNGValue("END_ADDTNL_CIT_RM_ID")+"CPI_ADDTNL_CIT_RM_NAME
					// :"+formObject.getNGValue("END_ADDTNL_CIT_RM_NAME")+"CPI_UW_EMP_ID
					// :"+formObject.getNGValue("END_UW_EMP_ID") +"CPI_UW_NAME
					// :"+formObject.getNGValue("END_UW_NAME"));
					/***** End CR-8001-87420-Green File Digitization *****/
					/******
					 * Start CR GREEN FILE Digitization Phase II (Yogesh)
					 ******/
					// System.out.println("Inside int BSG_QC done Value setting
					// BSG_QC form CR GREEN FILE Digitization Phase II (Yogesh)
					// for Endorsement");
					formObject.setNGValue("CPI_RMT_FLAG", formObject.getNGValue("END_RMT_FLAG"));
					formObject.setNGValue("CPI_PERCENTAGE_OF_COMMISION",
							formObject.getNGValue("END_PERCENTAGE_OF_COMMISION"));
					formObject.setNGValue("CPI_TOTAL_PREMIUM", formObject.getNGValue("End_TOTAL_PREMIUM"));
					formObject.setNGValue("CPI_PRODUCT_NAME", formObject.getNGValue("End_PRODUCT_NAME"));
					/******
					 * End CR GREEN FILE Digitization Phase II (Yogesh)
					 ******/

				}
				/*
				 * =============================END CR 8001-79910 Mapping
				 * Bucket(Yogesh)=============================
				 */

				// ****** 31/01/2011 **************
				//////// //System.out.println("Saving Q variables at BSG_QC :
				// ");
				//////// //System.out.println("Saving CPI_QUOTE_NO at BSG_QC : "
				// + formObject.getNGValue("CPI_QUOTE_NO"));
				// formObject.setNGValue("CPI_q_Transaction_ID",
				// formObject.getNGValue("CPI_TRANSACTION_ID")); //Vendor login
				// & weather Product CR
				formObject.setNGValue("CPI_q_Quote_No", formObject.getNGValue("CPI_QUOTE_NO"));

				// //////// //System.out.println("CPI_TRANSACTION_ID at BSG_QC :
				// " + formObject.getNGValue("CPI_TRANSACTION_ID")); //Vendor
				// login & weather Product CR
				//////// //System.out.println("CPI_QUOTE_NO : " +
				// formObject.getNGValue("CPI_QUOTE_NO"));
				// //////// //System.out.println("CPI_q_Transaction_ID at BSG_QC
				// : " + formObject.getNGValue("CPI_q_Transaction_ID"));
				// //Vendor login & weather Product CR
				//////// //System.out.println("CPI_q_Quote_No at BSG_QC : " +
				// formObject.getNGValue("CPI_q_Quote_No"));

				// ****** 31/01/2011 **************
			}
			if (pEventName.equalsIgnoreCase("D")) {
				// $$$
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& formObject.getNGValue("CPI_QUOTE_NO") != "") {
					//////// //System.out.println("inside sandeep quote
					//////// validation");

					/*
					 * ============================CR 8001-79910 Mapping
					 * Bucket(Yogesh)=============================
					 */
					if (CheckMandatoryCombo("CORP_SERVICE_RENDERED_JK", "SERVICE RENDERED UNDER J&K") == 0) {
						// //System.out.println("Validation for bucket mapping
						// CR BSG_QC done");
						return 0;
					}
					/*
					 * =============================END CR 8001-79910 Mapping
					 * Bucket(Yogesh)=============================
					 */

					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						if (CheckMandatoryTextBox("CORP_PAS", "PAS") == 0) {
							return 0;
						}
					}
				}
				/******
				 * Start CR GREEN FILE Digitization Phase II (Yogesh)
				 ******/
				if (!(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
						&& !(formObject.getNGValue("CPI_co_insurance_status").equalsIgnoreCase("Co Insurance"))) {
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						if ((formObject.getNGValue("CORP_RMT_FLAG") == null
								|| formObject.getNGValue("CORP_RMT_FLAG").equalsIgnoreCase(""))
								&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
										|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG1")
										|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG2")
										|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
								&& ActivityName.equalsIgnoreCase("BSG_QC")) {
							// System.out.println("Inside validation
							// CORP_RMT_FLAG");
							JOptionPane.showMessageDialog(null, "Kindly Select the Document Received Type.");
							formObject.NGFocus("CORP_RMT_FLAG");
							return 0;
						}
					} else {
						if ((formObject.getNGValue("END_RMT_FLAG") == null
								|| formObject.getNGValue("END_RMT_FLAG").equalsIgnoreCase(""))
								&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
										|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG1")
										|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG2")
										|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
								&& ActivityName.equalsIgnoreCase("BSG_QC")) {
							JOptionPane.showMessageDialog(null, "Kindly Select the Document Received Type.");
							formObject.NGFocus("END_RMT_FLAG");
							return 0;
						}
						if ((formObject.getNGValue("END_PERCENTAGE_OF_COMMISION") == null
								|| formObject.getNGValue("END_PERCENTAGE_OF_COMMISION").equalsIgnoreCase(""))
								&& (!formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT").equalsIgnoreCase("")
										|| formObject.getNGValue("CPI_NAME_OF_BROKER_AGENT") != "")) {

						}
					}

				}
				/****** End CR GREEN FILE Digitization Phase II (Yogesh) ******/
				// ****** 31/01/2011 **************
				//////// //System.out.println("Saving Q variables at BSG_QC :
				// ");
				// formObject.setNGValue("CPI_q_Transaction_ID",
				// formObject.getNGValue("CPI_TRANSACTION_ID")); //Vendor login
				// & weather Product CR
				formObject.setNGValue("CPI_q_Quote_No", formObject.getNGValue("CPI_QUOTE_NO"));
				// ****** 31/01/2011 **************

				if (NGF_SaveNGFData("BSG_QC", "S") == 0) {
					return 0;
				}
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					//////// //System.out.println("ravi12345::" +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					//////// //System.out.println("CPI_Withdrawn_Status" +
					//////// formObject.getNGValue("CPI_Withdrawn_Status"));
					//////// //System.out.println("CPI_Rejected_To_IT" +
					//////// formObject.getNGValue("CPI_Rejected_To_IT"));

					// ========= sunil DMS NO ===============
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						formObject.setNGEnable("CPI_REJECTED_TO_IT", false);
						//////// //System.out.println("CPI_Rejected_To_IT For
						//////// DMS setNGEnable " +
						//////// formObject.getNGValue("CPI_Rejected_To_IT"));
						formObject.setNGValue("CPI_REJECTED_TO_IT", "false");
						//////// //System.out.println("CPI_Rejected_To_IT For
						//////// DMS setNGValue" +
						//////// formObject.getNGValue("CPI_Rejected_To_IT"));
					}
					// ============= CR 2 Quote Sys ==================
					//////// //System.out.println("Quote Sys BSG_QC:: YOGE");
					// ===================Yogendra Saraswat=================

					if (formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
							|| formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
									&& (!formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
						//////// //System.out.println("inside BBG/KRG Quote SYS
						//////// ");
						if (CheckMandatoryTextBox("CORP_CHANNEL_EMPLOYEE_ID", "Channel Employee ID") == 0) {
							return 0;
						}
						if (formObject.getNGValue("CORP_Source_Name").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Source Name .");
							formObject.NGFocus("CORP_Source_Name");
							return 0;
						}
						if (formObject.getNGValue("CORP_CHANNEL_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  CHANNEL NAME .");
							formObject.NGFocus("CORP_CHANNEL_NAME");
							return 0;
						}
						if (formObject.getNGValue("CORP_BRANCH_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Branch Name .");
							formObject.NGFocus("CORP_BRANCH_NAME");
							return 0;
						}

					}
					//////// //System.out.println("Start CR-8001-61337 URN
					//////// Medium Priority validation in BSG_QC ");
					/***********************
					 * Start CR-8001-61337 URN Medium Priority
					 ***************************/
					if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
							&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
							&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
									|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))) // only
																													// for
																													// Sync
																													// cases
					{
						//////// //System.out.println("inside validation BBG/KRG
						//////// BSG_QC Urn CR for Sync cases");
						if (formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_ID").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill CHANNEL EMPLOYEE ID ");
							formObject.NGFocus("CPI_CHANNEL_EMPLOYEE_ID");
							return 0;
						}

						if (formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill CHANNEL EMPLOYEE NAME ");
							formObject.NGFocus("CPI_CHANNEL_EMPLOYEE_NAME");
							return 0;
						}
						if (formObject.getNGValue("CPI_CIF_ID").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill CIF ID ");
							formObject.NGFocus("CORP_CIF_ID");
							return 0;
						}
						String cifid1 = formObject.getNGValue("CPI_CIF_ID");
						//////// //System.out.println("checking CIF ID max
						//////// length validation cifid1 in BSG_QC for BABBGKRG
						//////// "+cifid1);
						if (cifid1 != null && cifid1.length() > 20) {
							JOptionPane.showMessageDialog(null, "Max length of CIF ID is 20");
							formObject.NGFocus("CORP_CIF_ID");
							return 0;
						}

					}

					/***********************
					 * End CR-8001-61337 URN Medium Priority
					 ***************************/
					/***************************
					 * PID-CPI process changes
					 ***************************/
					if ((formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
							&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement"))
							|| (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
									&& formObject.getNGValue("CPI_Process_Type")
											.equalsIgnoreCase("Corporate Policy Insurance")
									&& formObject.getNGValue("CPI_TRANSACTION_TYPE").equalsIgnoreCase("Renewal"))) {
						//////// //System.out.println("pid payment type value in
						//////// endoresement=="+formObject.getNGValue("CPI_PID_PAYMENT_TYPE"));
						//////// //System.out.println("CPI_PAS value in
						//////// endoresement=="+formObject.getNGValue("CPI_PAS"));
						//////// //System.out.println("CPI_Process_Type value in
						//////// endoresement=="+formObject.getNGValue("CPI_Process_Type"));
						//////// //System.out.println("CPI_CUSTOMER_ID value in
						//////// endoresement=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
						if (CheckMandatoryTextBox("CPI_CUSTOMER_ID", "Customer ID") == 0) {
							//////// //System.out.println("CPI_CUSTOMER_ID IF
							//////// endoresement=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
							return 0;
						}
						/*
						 * if(validateType("CPI_CUSTOMER_ID",formObject.
						 * getNGValue("CPI_CUSTOMER_ID"),"OnlyNumeric",
						 * "CUSTOMER_ID")==0) { ////////
						 * //System.out.println("CPI_CUSTOMER_ID value in=="
						 * +formObject.getNGValue("CPI_CUSTOMER_ID")); return 0;
						 * } String custid =
						 * formObject.getNGValue("CPI_CUSTOMER_ID"); if(custid
						 * != null && custid.length() > 0 && custid.length()
						 * <12) { JOptionPane.showMessageDialog(null,
						 * "Min length of Customer ID is 12"); return 0; }
						 */

					}
					String custid = formObject.getNGValue("CPI_CUSTOMER_ID");
					//////// //System.out.println("custid in
					//////// bsg_qc=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
					if (custid != null && !custid.equals("") && custid.length() > 0) {
						if (validateType("CPI_CUSTOMER_ID", formObject.getNGValue("CPI_CUSTOMER_ID"), "OnlyNumeric",
								"CUSTOMER_ID") == 0) {
							//////// //System.out.println("CPI_CUSTOMER_ID value
							//////// in=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
							return 0;
						}

						if (custid != null && custid.length() > 0 && custid.length() < 12) {
							JOptionPane.showMessageDialog(null, "Min length of Customer ID is 12");
							return 0;
						}
					}
					if (formObject.getNGValue("CORP_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
							&& formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")) {
						if (CheckMandatoryTextBox("CORP_PRIVILEGE_BANKER_CODE", "Privilege Banker Code") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CORP_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
							&& formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")) {
						if (CheckMandatoryTextBox("CORP_CIF_ID", "CF ID") == 0) {
							return 0;
						}
					}
					/***********************
					 * End PID-CPI process changes
					 ***************************/
					/*************************
					 * CPI PID Additional Points
					 *****************************/
					if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")
							|| formObject.getNGValue("CPI_PAS").equalsIgnoreCase("OM")) {
						if (!formObject.getNGValue("CPI_QUOTE_NO").equalsIgnoreCase("")
								&& duplicateCheck("CPI_QUOTE_NO", formObject.getNGValue("CPI_QUOTE_NO")) == 0) {
							JOptionPane.showMessageDialog(null, "Quote No. already exists");
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
							&& formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Pathfinder")
							&& formObject.getNGValue("CPI_TRANSACTION_ID") != null
							&& !formObject.getNGValue("CPI_TRANSACTION_ID").equalsIgnoreCase("")) {
						String trn_id = formObject.getNGValue("CPI_TRANSACTION_ID");
						//////// //System.out.println("trn_id value bsg_qc
						//////// in=="+formObject.getNGValue("CPI_TRANSACTION_ID"));
						if (trn_id.length() > 0 && trn_id.length() < 10) {
							//////// //System.out.println("CPI_TRANSACTION_ID
							//////// value
							//////// in=="+formObject.getNGValue("CPI_TRANSACTION_ID"));
							JOptionPane.showMessageDialog(null, "Length of TRANSACTION ID ID is 10 digits");
							formObject.setNGLocked("CPI_TRANSACTION_ID", true);
							return 0;
						}
					}
					/*************************
					 * End CPI PID Additional Points
					 **************************/
					/***********************************
					 * Start Yogesh Marine
					 *******************************/
					/*
					 * if (formObject.getWFActivityName().equalsIgnoreCase(
					 * "BSG_QC") ||
					 * formObject.getWFActivityName().equalsIgnoreCase(
					 * "RM_Clarification") ||
					 * formObject.getWFActivityName().equalsIgnoreCase(
					 * "BSG_Clarification") &&
					 * !formObject.getNGValue("CPI_quOTE_SYS_ID").
					 * equalsIgnoreCase("") &&
					 * formObject.getNGValue("CPI_Process_Type").
					 * equalsIgnoreCase("Corporate Policy Insurance")) { //
					 * //System.out.
					 * println("Enter Corp SP name validation Yogesh:"); String
					 * str=formObject.getNGValue("CORP_SP_NAME"); if(str != null
					 * && str.length()>=30) {
					 * JOptionPane.showMessageDialog(null,
					 * "SP Name should be 30 Character"); return 0; } }
					 */// commented by yogesh sp code 30 character issue.
					/***********************************
					 * End Yogesh Marine
					 *******************************/
					if ((formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
							&& formObject.getNGValue("CORP_SOURCE_NAME").equalsIgnoreCase("RLG"))
							|| (formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
									&& formObject.getNGValue("CORP_SOURCE_NAME").equalsIgnoreCase("ING Vysya"))
							|| (formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("Home")
									&& formObject.getNGValue("CORP_PRIMARY_VERTICAL").equalsIgnoreCase("BA"))) {
						if (formObject.getNGValue("CORP_SP_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Specified Person .");
							formObject.NGFocus("CORP_SP_NAME");
							return 0;
						}
					}

					// ===================Yogendra Saraswat=================

					// ============= End CR 2 Quote Sys ==================

					// ========= sunil DMS NO ===============

					if ((formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false"))
							|| (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")
									&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase(""))) {
						//////// //System.out.println("ravi123456::" +
						//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
						if (CheckMandatoryTextBox("CPI_DMS_NO", "DMS NO") == 0) {
							return 0;
						}
						/*******************************
						 * CR 44 by satish
						 ***********************************/
						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
								&& formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("iPartner")) {
							if (CheckMandatoryTextBox("CPI_POLICY_NO", "Policy No") == 0) {
								return 0;
							}
						}
						/***************************
						 * PID-CPI process changes
						 ****************************/
						if (!formObject.getNGValue("CPI_POLICY_NO").equalsIgnoreCase("")
								&& duplicateCheck("CPI_POLICY_NO", formObject.getNGValue("CPI_POLICY_NO")) == 0) {
							JOptionPane.showMessageDialog(null, "Policy No. already exists");
							formObject.NGFocus("CPI_POLICY_NO");
							return 0;
						}
						/*************************
						 * End PID-CPI process changes
						 **************************/

						/****************************
						 * end CR 44 by satish
						 ***********************************/
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_PAS").equalsIgnoreCase("Premia")
							|| formObject.getNGValue("CPI_PAS").equalsIgnoreCase("OM")) // CPI
																						// PID
																						// Additional
																						// Points
					{
						//////// //System.out.println("in BSG_QC PID/CCR
						//////// Validation1");
						if (CheckMandatoryTextBox("CPI_PID_CCR_NUMBER", "PID/CCR Number") == 0) {
							//////// //System.out.println("in BSG_QC PID/CCR
							//////// Validation2");
							formObject.NGFocus("CPI_PID_CCR_NUMBER");
							return 0;
						}
					}
					/***************************
					 * PID-CPI process changes
					 ***************************/
					if (formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")) {
						if (CheckMandatoryTextBox("CPI_TAG_STATUS",
								"The case is not Tagged, you cannot submit the case") == 0) {
							return 0;
						}
					}
					/***********************
					 * End PID-CPI process changes
					 ***************************/
				} else {
					/*
					 * //////// //System.out.
					 * println("Raising Exception...obj.toString() :"+obj.
					 * toString()); if(obj.toString().equalsIgnoreCase("R")) {
					 * str[0] = "BSG_QC"; ////////
					 * //System.out.println("Start Raising Exception...");
					 * //////// //System.out.println("Value of js: "+js); obj =
					 * js.call("setExceptionName_CPI", str); ////////
					 * //System.out.println("obj.toString()  " +
					 * obj.toString()); } ////////
					 * //System.out.println("After Raising excep");
					 */
					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "BSG_QC";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}

				}

				/*********************
				 * CR 45 Network Partner
				 *****************************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
						&& formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("Yes")) {
					if (CheckMandatoryCombo("CPI_ORG_PROPOSAL_FORM_RECEIVED", "Original Proposal Form Received") == 0) {
						return 0;
					}
				}
				/*********************
				 * End CR 45 Network Partner
				 *************************/

				/**********************
				 * Start Omni flow CPI –Channel Employee id – MH V 1.0
				 **********************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& (formObject.getNGValue("CPI_quOTE_SYS_ID") != null
								&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase(""))) {
					//////// //System.out.println("Omni flow CPI –Channel
					//////// Employee id Checking MH Validations");
					if (CheckMandatoryCombo("CPI_MH", "MH ") == 0) {

						formObject.NGFocus("CPI_MH");
						return 0;
					}

					if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("Yes")) {
						formObject.setNGValue("CPI_Exception_To_MH", "");
						if (CheckMandatoryTextBox("CPI_MH_Interaction_No", "MH Interaction No") == 0) {
							//////// //System.out.println("Please fill
							//////// CPI_MH_Interaction_No ::::::::::");
							formObject.NGFocus("CPI_MH_Interaction_No");
							return 0;
						}
					}

					String mhNo = formObject.getNGValue("CPI_MH_Interaction_No");
					//////// //System.out.println("mhNo in RM_Green_File :
					//////// "+formObject.getNGValue("CPI_MH_Interaction_No"));
					if (mhNo != null && mhNo.length() > 0 && mhNo.length() > 15) {
						JOptionPane.showMessageDialog(null, "Max length of MH Interaction No is 15");
						return 0;
					}

					if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("No")) {

						//////// //System.out.println("Please fill
						//////// CPI_Exception_To_MH inside NO :");
						formObject.setNGValue("CPI_MH_Interaction_No", "");

						String exToMh = formObject.getNGValue("CPI_Exception_To_MH");
						//////// //System.out.println("exToMh in RM_Green_File :
						//////// "+formObject.getNGValue("CPI_Exception_To_MH"));
						if (exToMh == null || exToMh.equals("null") || exToMh.equals("")) {
							//////// //System.out.println("Please fill
							//////// CPI_Exception_To_MH outside
							//////// CheckMandatoryTextBox :::::::");
							JOptionPane.showMessageDialog(null, "Please Fill Exception to MH .");
							formObject.NGFocus("CPI_Exception_To_MH");
							//////// //System.out.println("Please fill
							//////// CPI_Exception_To_MH after return
							//////// CheckMandatoryTextBox :::::::");
							return 0;

						}

					}
				}
				/**********************
				 * End Omni flow CPI –Channel Employee id – MH V 1.0
				 **********************/

				/**********************
				 * Start Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 *************************/

				if (CheckMandatoryCombo("CPI_BOOKING_TYPE", "Booking type") == 0) {
					JOptionPane.showMessageDialog(null, "Please Select CPI_BOOKING_TYPE ");
					formObject.NGFocus("CPI_BOOKING_TYPE");
					//////// //System.out.println("Please Select
					//////// CPI_BOOKING_TYPE In BSG_QC Bucket :::::::");
					return 0;
				}
				/**********************
				 * End Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 ***************************/

				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/

				if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					if (CheckMandatoryCombo("CPI_GST_REGISTERED", "GST Registered Value") == 0) {
						System.out.println("Inside BSG_QC Bucket Done : CR-8127-95325 : GST-Omniflow development");
						formObject.NGFocus("CPI_GST_REGISTERED");
						return 0;
					}
					/**********
					 * Start CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
					if (formObject.getNGValue("CPI_GST_REGISTERED").equalsIgnoreCase("Yes")) {
						if (CheckMandatoryCombo("CPI_GST_INVOICE_OPTION", "GST Invoice Option") == 0) {
							System.out.println("Inside BSG_QC Bucket Done : ");
							formObject.NGFocus("CPI_GST_INVOICE_OPTION");
							return 0;
						}
					}
					/**********
					 * End CR-8001-97828_BRS_GST_OmniflowCPI
					 **********/
				}
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/

			} else if (pEventName.equalsIgnoreCase("S")) {
				// Validation changed by Dinesh Kumar on 30Jun2010 to allow all
				// special characters
				if (!ICICIval.validateText(formObject.getNGValue("CPI_DMS_NO"), "GeneralTextMask")) {
					JOptionPane.showMessageDialog(null, "Please enter valid DMS NO.");
					formObject.NGFocus("CPI_DMS_NO");
					return 0;
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting BSG_QC at : " +
		//////// dateFormat1.format(new Date()));
		return 1;

	}

	/***************************
	 * PID-CPI process changes
	 ***************************/
	private int COPS_Cust_Id(String pEventName, String ActivityName) {
		//////// //System.out.println("COPS_Cust_Id: done button");
		try {
			//////// //System.out.println(" Corp_CUSTOMER_ID: " +
			//////// formObject.getNGValue("Corp_CUSTOMER_ID"));
			if (pEventName.equalsIgnoreCase("S")) {
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println(" Corp_CUSTOMER_ID: " +
					//////// formObject.getNGValue("Corp_CUSTOMER_ID"));
					//////// //System.out.println(" Corp_CUSTOMER_NAME:" +
					//////// formObject.getNGValue("Corp_CUSTOMER_NAME"));
					formObject.setNGValue("CPI_CUSTOMER_ID", formObject.getNGValue("Corp_CUSTOMER_ID"));
					formObject.setNGValue("CPI_CUSTOMER_NAME", formObject.getNGValue("Corp_CUSTOMER_NAME"));

				}
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					//////// //System.out.println(" End_CUSTOMER_ID: " +
					//////// formObject.getNGValue("End_CUSTOMER_ID"));
					//////// //System.out.println(" End_CUSTOMER_ID:" +
					//////// formObject.getNGValue("End_CUSTOMER_ID"));
					formObject.setNGValue("CPI_CUSTOMER_ID", formObject.getNGValue("End_CUSTOMER_ID"));
					formObject.setNGValue("CPI_CUSTOMER_NAME", formObject.getNGValue("End_CUSTOMER_NAME"));
				}
			}
			if (pEventName.equalsIgnoreCase("D")) {

				if (COPS_Cust_Id("S", "") == 0) {
					return 0;
				}
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);

				if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					JOptionPane.showMessageDialog(null,
							"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
					return 0;
				}
				if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
						return 0;
					}
				}
				if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
						&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
								|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
					if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
						return 0;
					}
				}

				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);

					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))
							&& (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase(""))) {
						//////// //System.out.println("before check
						//////// CPI_CUSTOMER_ID=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
						if (CheckMandatoryTextBox("CPI_CUSTOMER_ID", "Customer ID") == 0) {
							//////// //System.out.println("in IF
							//////// CPI_CUSTOMER_ID=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
							return 0;
						}
						if (validateType("CPI_CUSTOMER_ID", formObject.getNGValue("CPI_CUSTOMER_ID"), "OnlyNumeric",
								"CUSTOMER_ID") == 0) {
							//////// //System.out.println("CPI_CUSTOMER_ID value
							//////// in=="+formObject.getNGValue("CPI_CUSTOMER_ID"));
							return 0;
						}
						String custid = formObject.getNGValue("CPI_CUSTOMER_ID");
						if (custid != null && custid.length() > 0 && custid.length() < 12) {
							JOptionPane.showMessageDialog(null, "Min length of Customer ID is 12");
							return 0;
						}
					}

				} else {

					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "COPS_Cust_Id";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
						//////// //System.out.println("10018");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					}
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		return 1;
	}

	/***********************
	 * End PID-CPI process changes
	 ***************************/

	private int BSGPH_Clarification(boolean exceptionflag) {
		//////// //System.out.println("Entering BSG_Clarification at : " +
		//////// dateFormat1.format(new Date()));
		/***********************
		 * Start CR-8001-61337 URN Medium Priority
		 ***************************/
		if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
			//////// //System.out.println("In bsg_clar save for CR-8001-61337
			//////// URN setting value");
			formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", formObject.getNGValue("Corp_Channel_Employee_Name"));
			formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", formObject.getNGValue("CORP_CHANNEL_EMPLOYEE_ID"));
			formObject.setNGValue("CPI_CIF_ID", formObject.getNGValue("CORP_CIF_ID"));
		}
		//////// //System.out.println("Value of End Chaneel_emp_id: " +
		//////// formObject.getNGValue("End_CHANNEL_EMPLOYEE_ID"));
		//////// //System.out.println("Value of End channel employee NAme:" +
		//////// formObject.getNGValue("End_Channel_Employee_Name"));
		//////// //System.out.println("Value of CPI Chaneel_emp_id: " +
		//////// formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_ID"));
		//////// //System.out.println("Value of CPI channel employee NAme:" +
		//////// formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_NAME"));
		//////// //System.out.println("Value of Corp Chaneel_emp_id: " +
		//////// formObject.getNGValue("CORP_CHANNEL_EMPLOYEE_ID"));
		//////// //System.out.println("Value of Corp channel employee NAme:" +
		//////// formObject.getNGValue("Corp_Channel_Employee_Name"));
		//////// //System.out.println("Value of CPI CIF ID: " +
		//////// formObject.getNGValue("CPI_CIF_ID"));
		//////// //System.out.println("Value of CORP CIF ID:" +
		//////// formObject.getNGValue("CORP_CIF_ID"));
		/***********************
		 * End CR-8001-61337 URN Medium Priority
		 ***************************/

		if (!exceptionflag) {
			formObject.setNGValue("CPI_Route_To", "");
			formObject.setNGEnable("CPI_Route_To", false);
			if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
					&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
				JOptionPane.showMessageDialog(null,
						"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
				return 0;
			}
			if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")
					&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
				if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
					return 0;
				}
			}
			if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
					&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
				if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
					return 0;
				}
			}

		} else {
			if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
					&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
				JOptionPane.showMessageDialog(null,
						"Please check only one checkbox, either Rejected TO IT or 	Withdrawn status.");
				return 0;
			}
			if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")
					&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
				if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
					return 0;
				}
			}
			if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
					&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
				if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
					return 0;
				}
			}
			/*********************
			 * CR 45 Network Partner
			 *****************************/
			if (formObject.getWFActivityName().equalsIgnoreCase("BSG_Clarification")) {
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
						&& formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("Yes")) {
					if (CheckMandatoryCombo("CPI_ORG_PROPOSAL_FORM_RECEIVED", "Original Proposal Form Received") == 0) {
						return 0;
					}
				}
			}
			/*********************
			 * End CR 45 Network Partner
			 *************************/
			if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
					|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))
					&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
				//////// //System.out.println("10013");
				formObject.setNGEnable("CPI_Route_To", true);
				if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
					return 0;
				}
			}
		}

		if (formObject.getWFActivityName().equalsIgnoreCase("BSG_Clarification")
				&& !(formObject.getNGValue("CPI_PRODUCT_CATEGORY").equalsIgnoreCase("Corporate_Endorsement"))) {
			/***************************
			 * PID-CPI process changes
			 ***************************/
			if (!formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder")) {
				if (CheckMandatoryTextBox("CPI_PID_CCR_NUMBER", "PID/CCR Number") == 0) {
					formObject.NGFocus("CPI_PID_CCR_NUMBER");
					return 0;
				}
			}
			/***********************
			 * End PID-CPI process changes
			 ***************************/

			/***********************
			 * Start CR-8001-61337 URN Medium Priority
			 ***************************/
			if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
					&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
					&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))) // for
																											// sync
																											// cases
			{
				//////// //System.out.println("inside all validation BBG/KRG
				//////// BSG/RM_CLAR Urn CR for Sync cases");
				if (formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_ID").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill CHANNEL EMPLOYEE ID ");
					formObject.NGFocus("CPI_CHANNEL_EMPLOYEE_ID");
					return 0;
				}

				if (formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_NAME").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill CHANNEL EMPLOYEE NAME ");
					formObject.NGFocus("CPI_CHANNEL_EMPLOYEE_NAME");
					return 0;
				}
				if (formObject.getNGValue("CPI_CIF_ID").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill CIF ID ");
					formObject.NGFocus("CORP_CIF_ID");
					return 0;
				}
				String cifid1 = formObject.getNGValue("CPI_CIF_ID");
				//////// //System.out.println("checking CIF ID max length
				//////// validation cifid1 in bsg_clar for BABBGKRG for Sync
				//////// cases"+cifid1);
				if (cifid1 != null && cifid1.length() > 20) {
					JOptionPane.showMessageDialog(null, "Max length of CIF ID is 20");
					formObject.NGFocus("CORP_CIF_ID");
					return 0;
				}
			}
			/***********************
			 * End CR-8001-61337 URN Medium Priority
			 ***************************/

			/*************************
			 * CPI URN CR 8001-61339 Multiple Changes CR
			 *****************************/

			String endNo = formObject.getNGValue("CPI_ENDORSEMENT_NO");
			//////// //System.out.println("ON BSGPH_Clarification Done Checking
			//////// Endorsement_NO validation 8001-61339:"+endNo);
			if (endNo != null && endNo.length() > 30) {
				JOptionPane.showMessageDialog(null, "Max length of CPI_ENDORSEMENT_NO is 30");
				formObject.NGFocus("CPI_ENDORSEMENT_NO");
				return 0;
			}

			/*************************
			 * End CPI URN CR 8001-61339 Multiple Changes CR
			 **************************/

			/**********************
			 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
			 ***********************/

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				formObject.setNGValue("CPI_PAN", formObject.getNGValue("Corp_PAN"));
				formObject.setNGValue("CPI_CUSTOMER_NAME", formObject.getNGValue("Corp_CUSTOMER_NAME"));
			} else {
				formObject.setNGValue("CPI_PAN", formObject.getNGValue("End_PAN"));
				formObject.setNGValue("CPI_CUSTOMER_NAME", formObject.getNGValue("End_CUSTOMER_NAME"));
			}
			String totalpremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
			//////// //System.out.println("Inside BSG_CLAR Method Checking
			//////// totalpremium validation CR-8001-59268 : "+totalpremium);
			boolean flag1 = false;
			int totalpremiumparsed = 0;
			if (totalpremium != null && !totalpremium.equalsIgnoreCase("")
					&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
				try {
					totalpremiumparsed = Integer.parseInt(totalpremium);
					//////// //System.out.println("After parsing
					//////// totalpremiumparsed: "+totalpremiumparsed);
				} catch (Exception e) {
					flag1 = true;
				}
				if (!flag1 && totalpremiumparsed >= 100000) {
					//////// //System.out.println("Inside IF BSG_CLAR Method
					//////// Checking totalpremiumparsed validation
					//////// CR-8001-59268 : "+totalpremiumparsed);
					// formObject.setNGEnable("CPI_PAN", true);
					formObject.setNGLocked("CPI_PAN", true);
					if (CheckMandatoryTextBox("CPI_PAN", "PAN") == 0) {
						formObject.NGFocus("CPI_PAN");
						return 0;
					}

					if (formObject.getNGValue("CPI_PAN") != null
							&& !formObject.getNGValue("CPI_PAN").equalsIgnoreCase("")
							&& validateType("CPI_PAN", formObject.getNGValue("CPI_PAN"), "OnlyPanNo", "PAN") == 0) {
						//////// //System.out.println("In BSG_CLAR For checking
						//////// CPI_PAN value
						//////// in=="+formObject.getNGValue("CPI_PAN"));
						String PANNO = formObject.getNGValue("CPI_PAN");
						//////// //System.out.println("In BSG_CLAR For checking
						//////// CPI_PAN value in=="+PANNO);
						return 0;
					}

				}

			}

			/**********************
			 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
			 ************************/

		}

		/**************************************
		 * CR-8001-92286 Omniflow held cover letter CR Start
		 *****************************************************/

		if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
			// //System.out.println("In BSG Clarification Method Corporate
			// CR-8001-92286 Omniflow held cover letter CR Start : vaibhav");
			formObject.setNGValue("CPI_SUM_INSURED_NO_OF_LIVES", formObject.getNGValue("CORP_SUM_INSURED_NO_OF_LIVES"));
			formObject.setNGValue("CPI_BSG_LOCATION", formObject.getNGValue("CORP_BSG_LOCATION"));
			formObject.setNGValue("CPI_RM_LOCATION", formObject.getNGValue("CORP_RM_LOCATION"));
			formObject.setNGValue("CPI_RM_LOCATION", formObject.getNGValue("CORP_RM_LOCATION"));
			formObject.setNGValue("CPI_quOTE_SYS_ID", formObject.getNGValue("Corp_QuoteSYSID"));
		} else {
			// //System.out.println("In BSG Clarification Method Endorsement
			// Corporate CR-8001-92286 Omniflow held cover letter CR Start :
			// vaibhav");
			formObject.setNGValue("CPI_SUM_INSURED_NO_OF_LIVES", formObject.getNGValue("END_SUM_INSURED_NO_OF_LIVES"));
			formObject.setNGValue("CPI_BSG_LOCATION", formObject.getNGValue("END_BSG_LOCATION"));
			formObject.setNGValue("CPI_RM_LOCATION", formObject.getNGValue("END_RM_LOCATION"));
			formObject.setNGValue("CPI_quOTE_SYS_ID", formObject.getNGValue("Corp_QuoteSYSID"));
		}
		/**************************************
		 * CR-8001-92286 Omniflow held cover letter CR End
		 ******************************************************/

		/**************************************
		 * Start CR-8001-54702 E-Mail Filter
		 *****************************************************/
		if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
			System.out.println("In BSG Clarification Method Corporate CR-8001-54702 E-Mail Filter : vaibhav1");
			formObject.setNGValue("CPI_DATA_VALIDATION_ID", formObject.getNGValue("CORP_DATA_VALIDATION_ID"));
			formObject.setNGValue("CPI_IAS_ID", formObject.getNGValue("CORP_IAS_ID"));
		} else {
			System.out.println("In BSG Clarification Method Endorsement CR-8001-54702 E-Mail Filter : vaibhav1");
			formObject.setNGValue("CPI_DATA_VALIDATION_ID", formObject.getNGValue("End_DATA_VALIDATION_ID"));
			formObject.setNGValue("CPI_IAS_ID", formObject.getNGValue("End_IAS_ID"));
		}
		/**************************************
		 * End CR-8001-54702 E-Mail Filter
		 ******************************************************/

		/**************************************
		 * CR-8127-95325 : GST-Omniflow development Start
		 *****************************************************/
		if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
				&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
			if (CheckMandatoryCombo("CPI_GST_REGISTERED", "GST Registered Value") == 0) {
				System.out.println("Inside BSG Clarification Bucket Done : CR-8127-95325 : GST-Omniflow development");
				formObject.NGFocus("CPI_GST_REGISTERED");
				return 0;
			}
			/********** Start CR-8001-97828_BRS_GST_OmniflowCPI **********/
			if (formObject.getNGValue("CPI_GST_REGISTERED").equalsIgnoreCase("Yes")) {
				if (CheckMandatoryCombo("CPI_GST_INVOICE_OPTION", "GST Invoice Option") == 0) {
					System.out.println("Inside BSG Clarification Bucket Done : ");
					formObject.NGFocus("CPI_GST_INVOICE_OPTION");
					return 0;
				}
			}
			/********** End CR-8001-97828_BRS_GST_OmniflowCPI **********/
		}
		/**************************************
		 * CR-8127-95325 : GST-Omniflow development End
		 ******************************************************/
		return 1;
	}

	private int UW_DEO(String pEventName, String ActivityName) {
		//////// //System.out.println("Checking Code Reflection At UW_DEO at :
		//////// ");
		//////// //System.out.println("Entering UW_DEO at : " +
		//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
		//////// //System.out.println("Entering UW_DEO at : " +
		//////// dateFormat1.format(new Date()));

		try {
			/*************************
			 * CPI PID Additional Points
			 *****************************/
			String pasValue = "";
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				pasValue = formObject.getNGValue("Corp_pas");
			} else {
				pasValue = formObject.getNGValue("End_pas");
			}
			//////// //System.out.println("pasValue first=== " + pasValue);
			/*************************
			 * End CPI PID Additional Points
			 **************************/
			if (pEventName.equalsIgnoreCase("S")) {

				// ******** 31/01/2011 ***********

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println(" CPI_REJECTED_TO_IT22: " +
					//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
					//////// //System.out.println("
					//////// CPI_Samadhan_Interaction_ID22:" +
					//////// formObject.getNGValue("CPI_Samadhan_Interaction_ID"));
					// formObject.setNGValue("CPI_q_Transaction_ID",
					//////// formObject.getNGValue("CPI_TRANSACTION_ID"));
					//////// //Vendor login & weather Product CR
					formObject.setNGValue("CPI_q_Quote_No", formObject.getNGValue("CPI_QUOTE_NO"));
					formObject.setNGValue("CPI_Samadhan_Interaction_ID",
							formObject.getNGValue("Corp_Samadhan_Interaction_ID"));
					formObject.setNGValue("CPI_REJECTED_TO_IT", formObject.getNGValue("Corp_REJECTED_TO_IT"));

				}
				/*************************
				 * CPI PID Additional Points
				 *****************************/
				if (pasValue != null && pasValue.equalsIgnoreCase("Pathfinder")) {
					formObject.setNGValue("CPI_PROPOSAL_NO", formObject.getNGValue("Corp_PROPOSAL_NO"));// CPI
																										// PID
																										// Additional
																										// Points
				}
				/*************************
				 * End CPI PID Additional Points
				 **************************/
			}
			if (pEventName.equalsIgnoreCase("D")) {
				if (UW_DEO("S", "") == 0) {
					return 0;
				}
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(
									"")) /*
											 * //Commenting OTC condition &&
											 * !formObject.getNGValue(
											 * "CPI_PRODUCT_TYPE").
											 * equalsIgnoreCase("OTC")
											 */) {

						if (CheckMandatoryCombo("CPI_UW_DEO_SEND_TO", "UW DEO Send To") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						formObject.setNGValue("CPI_UW_DEO_SEND_TO", "");
						formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					/*************************
					 * CPI PID Additional Points
					 *****************************/
					//////// //System.out.println("pas value=== " +
					//////// formObject.getNGValue("CPI_pas"));

					//////// //System.out.println("pasValue=== " + pasValue);

					if (pasValue != null && pasValue.equalsIgnoreCase("Pathfinder")) {
						//////// //System.out.println("CPI_PROPOSAL_NO=== " +
						//////// formObject.getNGValue("CPI_PROPOSAL_NO"));
						//////// //System.out.println("Corp_PROPOSAL_NO value
						//////// in=="+formObject.getNGValue("Corp_PROPOSAL_NO"));
						if (CheckMandatoryTextBox("Corp_PROPOSAL_NO", "PROPOSAL_NO") == 0) {
							return 0;
						}
						if (formObject.getNGValue("Corp_PROPOSAL_NO") != null
								&& !formObject.getNGValue("Corp_PROPOSAL_NO").equalsIgnoreCase("")
								&& validateType("Corp_PROPOSAL_NO", formObject.getNGValue("Corp_PROPOSAL_NO"),
										"OnlyNumeric", "PROPOSAL_NO") == 0) {
							//////// //System.out.println("Corp_PROPOSAL_NO
							//////// value
							//////// in=="+formObject.getNGValue("Corp_PROPOSAL_NO"));
							return 0;
						}
						String proposal_no = formObject.getNGValue("Corp_PROPOSAL_NO");
						if (proposal_no != null && !proposal_no.equals("") && proposal_no.length() > 0) {
							//////// //System.out.println("proposal_no length
							//////// in=="+proposal_no.length());
							if (proposal_no.length() > 0 && proposal_no.length() < 10) {
								JOptionPane.showMessageDialog(null, "Length of PROPOSAL No. is 10");
								return 0;
							}
							if (!formObject.getNGValue("Corp_PROPOSAL_NO").equalsIgnoreCase("")
									&& duplicateCheck("CPI_PROPOSAL_NO",
											formObject.getNGValue("Corp_PROPOSAL_NO")) == 0) {
								JOptionPane.showMessageDialog(null, "PROPOSAL No. already exists");
								formObject.NGFocus("Corp_PROPOSAL_NO");
								return 0;
							}
						}

					}
					/*************************
					 * End CPI PID Additional Points
					 **************************/

				} else {

					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/
					//////// //System.out.println("Above Start Raising
					//////// Exception..crwrkstep:");
					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "UW_DEO";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					formObject.setNGListIndex("CPI_UW_DEO_SEND_TO", 0);
					formObject.setNGEnable("CPI_UW_DEO_SEND_TO", false);
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						//////// //System.out.println("10014");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}

				}

				//////// //System.out.println("satish thota Aug 19 2015 after
				//////// 1PM");
				//////// //System.out.println("vaibhav Aug 19 2015 after 1PM");
				//////// //System.out.println("Mandatory Check DEO: " +
				//////// formObject.getNGValue("Corp_PAS"));
				//////// //System.out.println("Mandatory Check DEO1: " +
				//////// formObject.getNGValue("CPI_quOTE_SYS_ID"));
				//////// //System.out.println("Mandatory Check DEO1: " +
				//////// formObject.getNGValue("Corp_QuoteSYSID"));
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						|| !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					//////// //System.out.println("Mandatory Check IN: " +
					//////// formObject.getNGValue("Corp_QuoteSYSID"));
					// **************** 31/01/2011 CR **********************
					if (formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Premia")) {
						formObject.setNGLocked("CPI_QUOTE_NO", true);
						if (CheckMandatoryTextBox("CPI_QUOTE_NO", "Quote No") == 0) {
							return 0;
						}
						formObject.NGFocus("CPI_QUOTE_NO");
						/*************************
						 * CPI PID Additional Points
						 *****************************/
						if (!formObject.getNGValue("CPI_QUOTE_NO").equalsIgnoreCase("")
								&& duplicateCheck("CPI_QUOTE_NO", formObject.getNGValue("CPI_QUOTE_NO")) == 0) {
							JOptionPane.showMessageDialog(null, "Quote No. already exists");
							return 0;
						}
						/*************************
						 * End CPI PID Additional Points
						 **************************/

					}
					if (formObject.getNGValue("Corp_PAS").equalsIgnoreCase("Pathfinder")) {
						formObject.setNGLocked("CPI_TRANSACTION_ID", true);
						if (CheckMandatoryTextBox("CPI_TRANSACTION_ID", "Transaction ID/ Quick ID") == 0) {
							formObject.NGFocus("CPI_TRANSACTION_ID");
							return 0;
						}
						/*************************
						 * CPI PID Additional Points
						 *****************************/
						if (formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
								&& formObject.getNGValue("CPI_TRANSACTION_ID") != null
								&& !formObject.getNGValue("CPI_TRANSACTION_ID").equalsIgnoreCase("")) {
							String trn_id = formObject.getNGValue("CPI_TRANSACTION_ID");
							//////// //System.out.println("trn_id value
							//////// in=="+formObject.getNGValue("CPI_TRANSACTION_ID"));
							if (trn_id.length() > 0 && trn_id.length() < 10) {
								//////// //System.out.println("CPI_TRANSACTION_ID
								//////// value
								//////// in=="+formObject.getNGValue("CPI_TRANSACTION_ID"));
								JOptionPane.showMessageDialog(null, "Length of TRANSACTION ID ID is 10 digits");
								return 0;
							}
						}
						/*************************
						 * End CPI PID Additional Points
						 **************************/

					}
					// **************** End 31/01/2011 CR **********************
				}

				// ******** 31/01/2011 ***********
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						// formObject.setNGValue("CPI_q_Transaction_ID",
						// formObject.getNGValue("CPI_TRANSACTION_ID"));
						// //Vendor login & weather Product CR
						formObject.setNGValue("CPI_q_Quote_No", formObject.getNGValue("CPI_QUOTE_NO"));
					}
				}
				// ******** 31/01/2011 ***********

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting UW_DEO at : " +
		//////// dateFormat1.format(new Date()));

		return 1;
	}

	/***************************
	 * Vendor login & weather Product
	 ****************************/

	private int Vendor_Assignment(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Vendor_Assignment at : " +
		//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
		//////// //System.out.println("Entering Vendor_Assignment at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {

			}
			if (pEventName.equalsIgnoreCase("D")) {
				if (CheckMandatoryCombo("CPI_VENDOR_ASSGN_SEND_TO", "VENDOR_ASSGN_SEND_TO") == 0) {
					return 0;
				}

				/***************************
				 * Vendor login & weather Product
				 ****************************/
				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				String parentIndex = formObject.getNGValue("CPI_WINAME_FOLDERINDEX");
				String vendor1Ind = formObject.getNGValue("CPI_CHILD1_FOLDERINDEX");
				String vendor2Ind = formObject.getNGValue("CPI_CHILD2_FOLDERINDEX");
				//////// //System.out.println("parentIndex Vendor_Assignment=="
				//////// + parentIndex);
				////////// //System.out.println("vendor1Ind Vendor_Assignment=="
				//////// + vendor1Ind);
				////////// //System.out.println("vendor2Ind Vendor_Assignment=="
				//////// + vendor2Ind);
				if (parentIndex == null || parentIndex.equalsIgnoreCase("")) {

					url = "FolderGeneration.jsp?Process=CPI" + "&Pid=" + sWIName + "&userId=" + sUserName
							+ "&cabinetName=ilombardcabinet" + "&Flag=Vendor_Assignment";

					showMailPage(url, "docupload");

				}

				/*************************
				 * End Vendor login & weather Product
				 **************************/

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting Vendor_Assignment at : ");
		return 1;
	}

	private int Vendor1(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Vendor1 at : " +
		//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
		//////// //System.out.println("Entering Vendor1 at : " +
		//////// dateFormat1.format(new Date()));

		try {

			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {

				} else {

					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						//////// //System.out.println("10014");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					}

				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Vendor1 at : " +
		//////// dateFormat1.format(new Date()));

		return 1;

	}

	private int Vendor2(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Vendor2 at : " +
		//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
		//////// //System.out.println("Entering Vendor2 at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {

				} else {

					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						//////// //System.out.println("10014");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					}

				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Vendor2 at : ");

		return 1;

	}

	/*************************
	 * End Vendor login & weather Product
	 **************************/

	/**********************
	 * Start Development in Omniflow CPI Alternate Inwarding Process 4.0
	 *************************/

	private int Client_Hold(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Client_Hold At : " +
		//////// dateFormat1.format(new Date()));

		try {

			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				/*
				 * if (CheckMandatoryCombo("CPI_BOOKING_TYPE", "Booking type")
				 * == 0) { return 0; }
				 */
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Client_Hold At : " +
		//////// dateFormat1.format(new Date()));
		formObject.setNGValue("CPI_UW_SEND_TO", formObject.getNGValue("CPI_UW_SEND_TO"));
		//////// //System.out.println("At The End Of Client Hold");
		return 1;

	}

	private int Proposal_Release(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Proposal_Release At : " +
		//////// dateFormat1.format(new Date()));

		try {

			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				//////// //System.out.println("Inside Done For Proposal_Release
				//////// Bucket Checking For CPI_BOOKING_TYPE");
				if (CheckMandatoryCombo("CPI_BOOKING_TYPE", "Booking type") == 0) {
					formObject.NGFocus("CPI_BOOKING_TYPE");
					//////// //System.out.println("Please Select
					//////// CPI_BOOKING_TYPE In Proposal_Release Bucket
					//////// :::::::");
					return 0;
				}
				if (CheckMandatoryCombo("CPI_UW_SEND_TO", "UW DEO Send To") == 0) {
					formObject.NGFocus("CPI_UW_SEND_TO");
					//////// //System.out.println("Please Select CPI_UW_SEND_TO
					//////// In Proposal_Release Bucket :::::::");
					return 0;
				}
				if (CheckMandatoryCombo("CPI_PH_Print_Option", "PH Print Option") == 0) {
					formObject.NGFocus("CPI_PH_Print_Option");
					//////// //System.out.println("Please Select
					//////// CPI_PH_Print_Option In Proposal_Release Bucket
					//////// :::::::");
					return 0;
				}

			}

		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Proposal_Release At : " +
		//////// dateFormat1.format(new Date()));

		return 1;

	}

	/**********************
	 * End Development in Omniflow CPI Alternate Inwarding Process 4.0
	 ***************************/
	/*
	 * =============================CR 42 Additional UW
	 * worksteps=============================
	 */
	private int UW1(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering UW1 at : " +
		//////// dateFormat1.format(new Date()));
		//////// //System.out.println("Checking Code Reflection at UW1 ");
		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						if (CheckMandatoryCombo("CPI_UW_SEND_TO", "UW Send To") == 0) {
							return 0;
						}
						if (CheckMandatoryCombo("CPI_PH_PRINT_OPTION", "PH Print Option") == 0) {
							return 0;
						}
					} else {
						if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
							if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
								return 0;
							}
						}
					}
				} else {
					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "UW1";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 *********************/

					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						//////// //System.out.println("10015");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					} else {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting UW1 at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	private int UW2(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering UW2 at : " +
		//////// dateFormat1.format(new Date()));
		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						if (CheckMandatoryCombo("CPI_UW_SEND_TO", "UW Send To") == 0) {
							return 0;
						}
						if (CheckMandatoryCombo("CPI_PH_PRINT_OPTION", "PH Print Option") == 0) {
							return 0;
						}
					} else {
						if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
							if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
								return 0;
							}
						}
					}
				} else {
					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "UW2";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 *********************/

					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						//////// //System.out.println("10015");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					} else {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting UW2 at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	private int UW3(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering UW3 at : " +
		//////// dateFormat1.format(new Date()));
		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						if (CheckMandatoryCombo("CPI_UW_SEND_TO", "UW Send To") == 0) {
							return 0;
						}
						if (CheckMandatoryCombo("CPI_PH_PRINT_OPTION", "PH Print Option") == 0) {
							return 0;
						}
					} else {
						if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
							if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
								return 0;
							}
						}
					}
				} else {
					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "UW3";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 *********************/

					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						//////// //System.out.println("10015");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					} else {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting UW3 at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}
	/*
	 * ===========================End CR 42 Additional UW
	 * worksteps===========================
	 */

	/******************************
	 * CR 18 ###
	 ***********************************/
	// satish
	private int CO_Insurance(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Co Insurance at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {
				//////// //System.out.println("inside SAVE sandy%%");
				/**************
				 * changes made by satish for CPI_PERCENTAGE_SHARE
				 ****************/
				if (!check_Numeric(formObject.getNGValue("CPI_PERCENTAGE_SHARE"), 5, 5)) {
					JOptionPane.showMessageDialog(null, "Enter valid percentage share");
					formObject.NGFocus("CPI_PERCENTAGE_SHARE");
					return 0;
				}
				/**************
				 * end of changes made by satish for CPI_PERCENTAGE_SHARE
				 ****************/
			}
			if (pEventName.equalsIgnoreCase("D")) {
				/**************
				 * changes made by satish for CPI_PERCENTAGE_SHARE
				 ****************/
				if (CO_Insurance("S", "") == 0) {
					return 0;
				}
				/**************
				 * end of changes made by satish for CPI_PERCENTAGE_SHARE
				 ****************/
				if (formObject.getNGValue("CPI_RM_NAME").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill  RM Name .");
					formObject.NGFocus("CPI_RM_NAME");
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_RM_ID", "RM ID") == 0) {
					JOptionPane.showMessageDialog(null, "Please Fill RM ID .");
					formObject.NGFocus("CPI_RM_ID");
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_CUSTOMER_NAME", "Name Of Insured") == 0) {
					return 0;
				}
				/***************************
				 * PID-CPI process changes
				 ***************************/
				/*
				 * if (CheckMandatoryTextBox("CPI_CUSTOMER_ID", "ID Of Insured")
				 * == 0) { return 0; }
				 */
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				if (CheckMandatoryCombo("CPI_LEADER_CATEGORY", "Leader Category") == 0) {
					return 0;
				}
				if (formObject.getNGValue("CPI_NAME_OF_LEADER").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill Name Of Leader.");
					formObject.NGFocus("CPI_NAME_OF_LEADER");
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_PERCENTAGE_SHARE", "Percentage Share") == 0) {
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_TOTAL_PREMIUM", "Total Premium") == 0) {
					return 0;
				}
				if (CheckMandatoryDate("CPI_RISK_INSPECTION_DATE", "Risk Inspection Date") == 0) {
					return 0;
				}
				if (CheckMandatoryDate("CPI_RISK_EXPIRY_DATE", "Risk Expiry Date") == 0) {
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_LEADERS_POLICY_NO", "Leaders Policy No") == 0) {
					return 0;
				}
				if (CheckMandatoryCombo("CPI_PRODUCT_CATEGORY", "Product Category") == 0) {
					return 0;
				}
				if (formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill IL Location .");
					formObject.NGFocus("CPI_IL_LOCATION");
					return 0;
				}
				if (CheckMandatoryTextBox("CPI_REMARK", "Remarks") == 0) {
					return 0;
				}

				str[0] = "ChkExpClear";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (obj.toString().equalsIgnoreCase("R")) {
					JOptionPane.showMessageDialog(null, "Please clear all exceptions");
					return 0;
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting CO Insurance at : " +
		//////// dateFormat1.format(new Date()));

		return 1;
	}

	private int CO_Insurance_RM(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Co Insurance RM at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {
				//////// //System.out.println("inside SAve sandy%%");
			}
			if (pEventName.equalsIgnoreCase("D")) {
				if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill Product name.");
					formObject.NGFocus("CPI_PRODUCT_NAME");
					return 0;
				}
				str[0] = "ChkExpClear";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (obj.toString().equalsIgnoreCase("R")) {
					// JOptionPane.showMessageDialog(null,"Please clear all
					// exceptions");
					// return 0;
				} else {
					if (CheckMandatoryCombo("CPI_ROUTE_TO", "Route To") == 0) {
						return 0;
					}
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting CO Insurance RM at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}
	// satish

	// *************************** OTC *********************************
	private int BSG_Approver(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering BSG_Approver at : " +
		//////// dateFormat1.format(new Date()));
		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						if (CheckMandatoryCombo("CPI_UW_SEND_TO", "BSG Approver Send To") == 0) {
							return 0;
						}
						if (CheckMandatoryCombo("CPI_PH_PRINT_OPTION", "PH Print Option") == 0) {
							return 0;
						}
					} else {
						if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
							if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
								return 0;
							}
						}
					}
				} else {

					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "BSG_Approver";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					formObject.setNGListIndex("CPI_UW_SEND_TO", 0);
					formObject.setNGEnable("CPI_UW_SEND_TO", false);
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						//////// //System.out.println("10015");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					} else {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting BSG_Approver at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	// *************************** End OTC *****************************
	// bhagat CR CPU_HEALTH
	private int CPU_HEALTH(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering CPU_HEALTH at : " +
		//////// dateFormat1.format(new Date()));
		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					//////// //System.out.println("Inside if : " +
					//////// obj.toString());
					// Sadik
					formObject.setNGValue("CPI_Mail_To_Client", "");
					formObject.setNGEnable("CPI_Mail_To_Client", false);
					formObject.setNGLocked("CPI_Mail_To_Client", false);
					// End
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					formObject.setNGLocked("CPI_Route_To", false);
					/* CR-OMCPI-1314-03 CPU DataWashing Start */
					formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", true);
					formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", true);
					/* CR-OMCPI-1314-03 CPU DataWashing End */

					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						if (!formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK").equalsIgnoreCase("CPU_Data_Washing")) {
							//////// //System.out.println("CR-OMCPI-1314-03 CPU
							//////// DataWashing: " +
							//////// formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK"));
							if (CheckMandatoryCombo("CPI_PH_PRINT_OPTION", "PH Print Option") == 0) {
								return 0;
							}
						}
						if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
							// sadik
							// //System.out.println("Sadik CR9 CPI_CPU_SEND_TO
							// CPI_CPU_SEND_TO:"+formObject.getNGValue("CPI_CPU_SEND_TO"));
							if (!formObject.getNGValue("CPI_CPU_SEND_TO").equalsIgnoreCase("CPU_Approver")) {
								// //System.out.println("Sadik CR9 If
								// CPI_CPU_SEND_TO CPI_CPU_SEND_TO");
								if (CheckMandatoryTextBox("CPI_POLICY_NO", "Policy No") == 0) {// Already
																								// exist
									return 0;
								}
							} // end
						}
						/***************************
						 * PID-CPI process changes
						 ****************************/
						if (!formObject.getNGValue("CPI_POLICY_NO").equalsIgnoreCase("")
								&& duplicateCheck("CPI_POLICY_NO", formObject.getNGValue("CPI_POLICY_NO")) == 0) {
							JOptionPane.showMessageDialog(null, "Policy No. already exists");
							formObject.NGFocus("CPI_POLICY_NO");
							return 0;
						}
						/*************************
						 * End PID-CPI process changes
						 **************************/

						/****
						 * Start CR-OMCPI-1314-05 DataWashing -
						 * Mail_Management_Extension
						 ******/
						// if (ActivityName.equalsIgnoreCase("CPU_HEALTH") &&
						// formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement"))
						/***********************
						 * Start CR-8001-54702 E-Mail Filter
						 ***************************/// commenting above if as
													// its needed for all health
													// cases(dw and normal)
						if (ActivityName.equalsIgnoreCase("CPU_HEALTH")) {
							//////// //System.out.println("CR-8001-54702 E-Mail
							//////// Filter");
							if (formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK") == null
									|| formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK").equalsIgnoreCase("--Select--")
									|| formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK").equalsIgnoreCase("")) {
								if (CheckMandatoryCombo("CPI_CPU_SEND_TO", "CPU SEND TO") == 0) {
									return 0;
								}
							}
						}
						// mandatory trn_id and refund_id at
						// CPU_HEALTH/CPU_Approver
						// not required mandatory
						/*
						 * if (ActivityName.equalsIgnoreCase("CPU_HEALTH") ||
						 * ActivityName.equalsIgnoreCase("CPU_Approver")) {
						 * if(formObject.getNGValue("CPI_PAS").equalsIgnoreCase(
						 * "Pathfinder") &&
						 * formObject.getNGValue("CPI_Process_Type").
						 * equalsIgnoreCase("Corporate Policy Insurance")) {
						 * //////// //System.out.
						 * println("mandatory trn_id for CR-8001-54702 e-mail filter in health/approver: "
						 * ); if (CheckMandatoryTextBox("CPI_TRANSACTION_ID",
						 * "Transaction ID/ Quick ID") == 0) { return 0; } } if
						 * (CheckMandatoryTextBox("CPI_REFUND_ID", "Refund ID")
						 * == 0) { //////// //System.out.
						 * println("mandatory refund_id for CR-8001-54702 e-mail filter in health/approver: "
						 * ); formObject.NGFocus("txtRefundID"); return 0; } }
						 */
						/***********************
						 * End CR-8001-54702 E-Mail Filter
						 ***************************/
						/****
						 * End CR-OMCPI-1314-05 DataWashing -
						 * Mail_Management_Extension
						 ********/
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false"))) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
				} else {
					//////// //System.out.println("Inside else : " +
					//////// obj.toString());
					/* CR-OMCPI-1314-03 CPU DataWashing Start */
					formObject.setNGListIndex("CPI_CO_INS_ROUTE_TO_BACK", 0);
					formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", false);
					formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", false);
					/* CR-OMCPI-1314-03 CPU DataWashing End */
					// Sadik
					// //System.out.println("Above Start Raising
					// Exception..crwrkstep:");
					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "CPU_HEALTH";
						// //System.out.println("Sadik CR9 Start CPU_HEALTH
						// Raising Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						// //System.out.println("Sadik CR9 Start CPU_HEALTH
						// Raising Exception After exceptionDetails...");
					}

					// End
					/****
					 * Start CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ******/
					if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
						//////// //System.out.println(" CPU_HEALTH
						//////// CPI_CPU_SEND_TO done button== " +
						//////// formObject.getNGValue("CPI_CPU_SEND_TO"));
						formObject.setNGListIndex("CPI_CPU_SEND_TO", 0);
						formObject.setNGEnable("CPI_CPU_SEND_TO", false);
						formObject.setNGLocked("CPI_CPU_SEND_TO", false);

					}
					/****
					 * End CR-OMCPI-1314-05 DataWashing -
					 * Mail_Management_Extension
					 ********/
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))
							&& (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase(""))) {
						//////// //System.out.println("10018");
						formObject.setNGEnable("CPI_Route_To", true);
						formObject.setNGLocked("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
							&& formObject.getNGValue("CPI_Route_To").equalsIgnoreCase("RM Clarification")) {
						// Sadik
						// //System.out.println("Sadik CR9 CPI_Mail_To_Client
						// Mandatory Endorsement CPU_HEALTH");
						formObject.setNGEnable("CPI_Mail_To_Client", true);
						formObject.setNGLocked("CPI_Mail_To_Client", true);
						if (CheckMandatoryCombo("CPI_Mail_To_Client", "Mail To Client") == 0) {
							return 0;
						}
						// End
					}
				}

				/**********************
				 * Start Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 *************************/

				if (ActivityName.equalsIgnoreCase("CPU_HEALTH")
						&& ((formObject.getNGValue("CPI_BOOKING_TYPE").equalsIgnoreCase("ALTERNATE")
								&& !formObject.getNGValue("CPI_CPU_SEND_TO").equalsIgnoreCase("Client_Hold"))
								|| (!formObject.getNGValue("CPI_BOOKING_TYPE").equalsIgnoreCase("ALTERNATE")
										&& formObject.getNGValue("CPI_CPU_SEND_TO").equalsIgnoreCase("Client_Hold")))) {
					//////// //System.out.println("CPI Alternate Inwarding
					//////// Process 4.0 On Done");
					JOptionPane.showMessageDialog(null, "Please Select Proper CPI_CPU_SEND_TO Option ");
					return 0;

				}

				/**********************
				 * End Development in Omniflow CPI Alternate Inwarding Process
				 * 4.0
				 ***************************/
				// Sadik
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& formObject.getNGValue("CPI_Route_To").equalsIgnoreCase("RM Clarification")) {
					// //System.out.println("Sadik CR9 CPI_Mail_To_Client
					// Sending Mail If
					// Value:"+formObject.getNGValue("CPI_Mail_To_Client"));
					if (formObject.getNGValue("CPI_Mail_To_Client").equalsIgnoreCase("Yes")) {
						sendCpuHealthMail();
					}
				}
				// End

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting CPU_HEALTH at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}
	// END bhagat CR CPU_HEALTH

	private int Corporate_UW(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Corporate_UW at : " +
		//////// dateFormat1.format(new Date()));
		try {
			if (pEventName.equalsIgnoreCase("S")) {
				// sadik
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				// //System.out.println("obj.toString() on corporate save " +
				// obj.toString());
				if (obj.toString().equalsIgnoreCase("R")) {
					// //System.out.println("Sadik CR9 checking while exception
					// was raised for datawashing save on corporate uw bucket");
					String prevWrkStep = formObject.getNGValue("CPI_PREV_WRK_STEP");
					if (prevWrkStep.equalsIgnoreCase("CPU_Data_Washing")) {
						// //System.out.println("Sadik CR9 If condition checking
						// while exception was raised for datawashing save on
						// corporate uw bucket");
						JOptionPane.showMessageDialog(null,
								"We cannot raised the exception for datawashing cases.Please reopen the case.");
						return 0;
					}
				}
				// end
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					/*******************
					 * CR 46 CPU DataWashing
					 ********************/
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						if (CheckMandatoryCombo("CPI_PH_PRINT_OPTION", "PH Print Option") == 0) {
							return 0;
						}
					}
					/*****************
					 * end CR 46 CPU DataWashing
					 *******************/
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					// Sadik
					String prevWrkStep = formObject.getNGValue("CPI_PREV_WRK_STEP");
					if (prevWrkStep.equalsIgnoreCase("CPU_Data_Washing")) {
						// //System.out.println("Sadik CR9 checking
						// CPI_UW_APPROVAL_STATUS");
						if (CheckMandatoryCombo("CPI_UW_APPROVAL_STATUS", "UW Approval Status") == 0) {
							// formObject.NGFocus("CPI_UW_APPROVAL_STATUS");
							// //System.out.println("Sadik CR9 checking Please
							// Select CPI_UW_APPROVAL_STATUS In Corporate UW
							// Bucket :::::::");
							return 0;
						}
					}
					// end

				} else {
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						//////// //System.out.println("10016");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					} else {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					// Sadik
					String prevWrkStep = formObject.getNGValue("CPI_PREV_WRK_STEP");
					if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
						if (prevWrkStep.equalsIgnoreCase("CPU_Data_Washing")) {
							// //System.out.println("Sadik CR9 In Corporate_UW
							// Bucket on Done if block");
							// Disable Route to for datawashing cases
							formObject.setNGEnable("CPI_ROUTE_TO", false);
							formObject.setNGLocked("CPI_ROUTE_TO", false);
						}
					}
					// end
					// Sadik
					// String prevWrkStep =
					// formObject.getNGValue("CPI_PREV_WRK_STEP");
					if (prevWrkStep.equalsIgnoreCase("CPU_Data_Washing")) {
						// //System.out.println("Sadik CR9 checking while
						// exception was raised for datawashing done on
						// corporate uw bucket");
						JOptionPane.showMessageDialog(null,
								"We cannot raised the exception for datawashing cases.Please reopen the case.");
						return 0;
					}
					// end
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting Corporate_UW at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	private int PH_Print(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering PH_Print at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {

				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}

				} else {
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						//////// //System.out.println("10017");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					} else {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
				}

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting PH_Print at : " +
		//////// dateFormat1.format(new Date()));

		return 1;

	}

	private int Processing_Hub(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Processing_Hub at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						if ((formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
								&& !formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder"))
								|| (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")
										&& formObject.getNGValue("End_pas").equalsIgnoreCase("Premia"))) { // CPI
																											// PID
																											// Additional
																											// Points
							//////// //System.out.println("Policy no checking :
							//////// " + formObject.getNGValue("End_pas"));
							if (CheckMandatoryTextBox("CPI_POLICY_NO", "Policy No") == 0) {
								return 0;
							}
						}
						/***************************
						 * PID-CPI process changes
						 ****************************/
						if (!formObject.getNGValue("CPI_POLICY_NO").equalsIgnoreCase("")
								&& !formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder")
								&& duplicateCheck("CPI_POLICY_NO", formObject.getNGValue("CPI_POLICY_NO")) == 0) {
							JOptionPane.showMessageDialog(null, "Policy No. already exists");
							formObject.NGFocus("CPI_POLICY_NO");
							return 0;
						}
						/*************************
						 * End PID-CPI process changes
						 **************************/

						/*************************
						 * CPI PID Additional Points
						 *****************************/
						if (formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder")) {
							if (CheckMandatoryTextBox("CPI_PROPOSAL_NO", "Proposal No") == 0) {
								return 0;
							}
							if (validateType("CPI_PROPOSAL_NO", formObject.getNGValue("CPI_PROPOSAL_NO"), "OnlyNumeric",
									"PROPOSAL_NO") == 0) {
								//////// //System.out.println("CPI_PROPOSAL_NO
								//////// value
								//////// in=="+formObject.getNGValue("CPI_PROPOSAL_NO"));
								return 0;
							}
						}
						String proposal_no = formObject.getNGValue("CPI_PROPOSAL_NO");
						if (proposal_no != null && !proposal_no.equals("") && proposal_no.length() > 0) {
							if (proposal_no.length() > 0 && proposal_no.length() < 10) {
								JOptionPane.showMessageDialog(null, "Length of PROPOSAL No. is 10");
								return 0;
							}

							if (!formObject.getNGValue("CPI_PROPOSAL_NO").equalsIgnoreCase("")
									&& duplicateCheck("CPI_PROPOSAL_NO",
											formObject.getNGValue("CPI_PROPOSAL_NO")) == 0) {
								JOptionPane.showMessageDialog(null, "PROPOSAL No. already exists");
								formObject.NGFocus("CPI_PROPOSAL_NO");
								return 0;
							}

						}

						/*************************
						 * End CPI PID Additional Points
						 **************************/
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					if (formObject.getNGValue("CPI_PH_Print_Option").equalsIgnoreCase("Yes")) {
						if (CheckMandatoryCombo("CPI_PH_SEND_TO", "PH_SEND_TO") == 0) {
							return 0;
						}
					}
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				} else {

					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "Processing_Hub";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 *********************/

					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
						//////// //System.out.println("10018");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					}
				}

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Processing_Hub at : " +
		//////// dateFormat1.format(new Date()));

		return 1;

	}

	private int Coins_Lead_Policy(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Coins_Lead_Policy at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("D")) {
				if (CheckMandatoryTextBox("CPI_LEADERS_POLICY_NO", "Leader Policy No") == 0) {
					return 0;
				}

				if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
						return 0;
					}
				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Coins_Lead_Policy at : " +
		//////// dateFormat1.format(new Date()));

		return 1;
	}

	private int BSG_Dispatch(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering BSG_Dispatch at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("BSG_Dispatch: obj.toString(): " +
				//////// obj.toString());

				/************* CR 8 ************/
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}

				} else {

					/**********************
					 * CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (obj.toString().equalsIgnoreCase("R")) {
						String crwrkstep = "BSG_Dispatch";
						//////// //System.out.println("Start Raising
						//////// Exception..crwrkstep:"+crwrkstep);
						exceptionDetails(crwrkstep);
						//////// //System.out.println("After
						//////// exceptionDetails...");
					}

					/**********************
					 * End CPI URN CR 8001-61339 Multiple Changes CR
					 ***********************/

					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						//////// //System.out.println("10017");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					} else {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
				}
				/************ End CR * ******************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
						&& formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("Yes")) {
					/***************************
					 * PID-CPI process changes
					 ***************************/
					// if
					// (CheckMandatoryTextBox("Corp_INST_NO_CD_NO_DEP_SLIP_NO",
					// "Inst. No./CD No./Dep. Slip No.") == 0) {
					if (CheckMandatoryTextBox("CPI_INST_NO_CD_NO_DEP_SLIP_NO", "Inst. No./CD No./Dep. Slip No.") == 0) {
						return 0;
					}
					/***********************
					 * End PID-CPI process changes
					 ***************************/
				}
				if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
						return 0;
					}
				}

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting BSG_Dispatch at : " +
		//////// dateFormat1.format(new Date()));

		return 1;

	}

	/******************* CR 45 Network Partner ********************/
	private int Ins_Org_PF(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Ins_Org_PF at : " +
		//////// dateFormat1.format(new Date()));
		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				/*
				 * str[0]="ChkExpRaise";
				 * obj=js.call("CPI_JSCheckExceptionStatus",str); ////////
				 * //System.out.println("BSG_Dispatch: obj.toString():  "+obj.
				 * toString());
				 */

				/************* CR 8 ************/
				/*
				 * if(!obj.toString().equalsIgnoreCase("R")) {
				 * formObject.setNGValue("CPI_Route_To","");
				 * formObject.setNGEnable("CPI_Route_To",false);
				 * 
				 * }
				 */
				if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
						return 0;
					}
				}

				if ((formObject.isNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED")) && (formObject
						.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").trim().equalsIgnoreCase("--Select--")
						|| formObject.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").trim().equalsIgnoreCase("")
						|| formObject.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").trim().equalsIgnoreCase(null)
						|| formObject.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").trim().equalsIgnoreCase("No"))) {
					JOptionPane.showMessageDialog(null, "Please Select Original Proposal Form Received as Yes");
					formObject.NGFocus("CPI_ORG_PROPOSAL_FORM_RECEIVED");
					return 0;
				} else {
					if ((formObject.isNGLocked("CPI_ORG_PROPOSAL_FORM_RECEIVED")) && !formObject
							.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").trim().equalsIgnoreCase("Yes")) {
						JOptionPane.showMessageDialog(null, "Please Select Original Proposal Form Received as Yes");
						formObject.NGFocus("CPI_ORG_PROPOSAL_FORM_RECEIVED");
						return 0;
					}
					if (formObject.isNGLocked("CPI_POLICY_PRINT_GIVEN_TO_MO")
							&& !formObject.getNGValue("CPI_POLICY_PRINT_GIVEN_TO_MO").trim().equalsIgnoreCase("Yes")) {
						JOptionPane.showMessageDialog(null, "Please Select Policy print given to MO as Yes");
						formObject.NGFocus("CPI_POLICY_PRINT_GIVEN_TO_MO");
						return 0;
					}
					/*
					 * if((formObject.isNGLocked(
					 * "CPI_ORG_PROPOSAL_FORM_RECEIVED")) && (
					 * formObject.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").
					 * trim().equalsIgnoreCase("--Select--") ||
					 * formObject.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").
					 * trim().equalsIgnoreCase("") ||
					 * formObject.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").
					 * trim().equalsIgnoreCase(null) ||
					 * formObject.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").
					 * trim().equalsIgnoreCase("No")) )
					 */
				}
				/*
				 * if(!formObject.getNGValue("CPI_ORG_PROPOSAL_FORM_RECEIVED").
				 * equalsIgnoreCase("Yes")) { if(CheckMandatoryCombo(
				 * "CPI_ORG_PROPOSAL_FORM_RECEIVED","Original Proposal Form Received as Yes"
				 * )== 0) return 0; }
				 * if(!formObject.getNGValue("CPI_POLICY_PRINT_GIVEN_TO_MO").
				 * equalsIgnoreCase("Yes")) { if(CheckMandatoryCombo(
				 * "CPI_POLICY_PRINT_GIVEN_TO_MO","Policy print given to MO as Yes"
				 * )== 0) return 0; }
				 */
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		//////// //System.out.println("Exiting Ins_Org_PF at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	/****************** End CR 45 Network Partner ******************/
	/*************************
	 * CPI PID Additional Points
	 *****************************/
	private int COMPLETE_SYNC(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering COMPLETE_SYNC at : " +
		//////// formObject.getNGValue("CPI_REJECTED_TO_IT"));
		//////// //System.out.println("Entering COMPLETE_SYNC at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {

				} else {

					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						//////// //System.out.println("10014");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					}

				}
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Vendor2 at : ");

		return 1;

	}

	private int COPS_QC(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering Processing_Hub at : " +
		//////// dateFormat1.format(new Date()));

		try {
			if (pEventName.equalsIgnoreCase("S")) {
			}
			if (pEventName.equalsIgnoreCase("D")) {
				str[0] = "ChkExpRaise";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (!obj.toString().equalsIgnoreCase("R")) {
					formObject.setNGValue("CPI_Route_To", "");
					formObject.setNGEnable("CPI_Route_To", false);
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("")) {
						/*************************
						 * CPI PID Additional Points
						 *****************************/
						if (formObject.getNGValue("CPI_pas").equalsIgnoreCase("Pathfinder")) {
							if (CheckMandatoryTextBox("CPI_PROPOSAL_NO", "Proposal No") == 0) {
								return 0;
							}
							if (!formObject.getNGValue("CPI_PROPOSAL_NO").equalsIgnoreCase("")
									&& validateType("CPI_PROPOSAL_NO", formObject.getNGValue("CPI_PROPOSAL_NO"),
											"OnlyNumeric", "PROPOSAL_NO") == 0) {
								//////// //System.out.println("CPI_PROPOSAL_NO
								//////// value
								//////// in=="+formObject.getNGValue("CPI_PROPOSAL_NO"));
								return 0;
							}
							String proposal_no = formObject.getNGValue("CPI_PROPOSAL_NO");
							if (proposal_no != null && !proposal_no.equals("") && proposal_no.length() > 0) {
								if (proposal_no.length() > 0 && proposal_no.length() < 10) {
									JOptionPane.showMessageDialog(null, "Length of PROPOSAL No. is 10");
									return 0;
								}
								if (!formObject.getNGValue("CPI_PROPOSAL_NO").equalsIgnoreCase("")
										&& duplicateCheck("CPI_PROPOSAL_NO",
												formObject.getNGValue("CPI_PROPOSAL_NO")) == 0) {
									JOptionPane.showMessageDialog(null, "PROPOSAL No. already exists");
									formObject.NGFocus("CPI_PROPOSAL_NO");
									return 0;
								}
							}
						}

						/*************************
						 * End CPI PID Additional Points
						 **************************/
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}

				} else {
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")) {
						//////// //System.out.println("10018");
						formObject.setNGEnable("CPI_Route_To", true);
						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							return 0;
						}
					}
				}

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Processing_Hub at : " +
		//////// dateFormat1.format(new Date()));

		return 1;

	}

	/*************************
	 * End CPI PID Additional Points
	 **************************/

	private int CheckMandatoryCombo(String ControlName, String CaptionName) {

		if ((formObject.isNGLocked(ControlName))
				&& (formObject.getNGValue(ControlName).trim().equalsIgnoreCase("--Select--")
						|| formObject.getNGValue(ControlName).trim().equalsIgnoreCase("")
						|| formObject.getNGValue(ControlName).trim().equalsIgnoreCase(null))) {
			JOptionPane.showMessageDialog(null, "Please Select " + CaptionName + " .");
			formObject.NGFocus(ControlName);
			return 0;
		}
		return 1;
	}

	private int CheckMandatoryTextBox(String ControlName, String CaptionName) {
		if ((formObject.isNGLocked(ControlName)) && formObject.getNGValue(ControlName).trim().equalsIgnoreCase("")) {
			/***************************
			 * PID-CPI process changes
			 ***************************/
			if (ControlName.equalsIgnoreCase("CPI_TAG_STATUS")) {
				JOptionPane.showMessageDialog(null, CaptionName);
				return 0;
			}
			/***********************
			 * End PID-CPI process changes
			 ***************************/
			else if (ControlName.equalsIgnoreCase("CPI_Samadhan_Interaction_ID")
					&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				JOptionPane.showMessageDialog(null, "Please fill " + CaptionName + " .");
				formObject.NGFocus("Corp_Samadhan_Interaction_ID");
				return 0;
			} else if (ControlName.equalsIgnoreCase("CPI_Samadhan_Interaction_ID")
					&& formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				JOptionPane.showMessageDialog(null, "Please fill " + CaptionName + " .");
				formObject.NGFocus("End_Samadhan_Interaction_ID");
				return 0;
			} else {
				JOptionPane.showMessageDialog(null, "Please fill " + CaptionName + " .");
				formObject.NGFocus(ControlName);
				return 0;
			}
		}
		return 1;
	}

	private int CheckMandatoryDate(String ControlName, String CaptionName) {
		if ((formObject.isNGEnable(ControlName)) && formObject.getNGValue(ControlName).trim().equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "Please fill " + CaptionName + " .");
			formObject.NGFocus(ControlName);
			return 0;
		}
		return 1;
	}

	/*
	 * #This is simple date comparision function, Function is written by
	 * Yogendra Kaushik(20/May/2010). #Both the parameter should be in
	 * "dd/MM/yyyy" format. #Function return the flag value 0 -> both date are
	 * equals,1->first date is greater,2->Second date is greater.
	 * 
	 * Function Limitation: #This function can campare date only defined format.
	 */
	public int datesCompare(String sDate1, String sDate2) // return 1 when Date1
															// is greater,0 when
															// equal,2 when
															// Date2 is greater
	{
		int iYear1 = Integer.parseInt(sDate1.substring(7, 10));
		int iYear2 = Integer.parseInt(sDate2.substring(7, 10));

		if (iYear1 > iYear2) {
			return 1;
		} else if (iYear1 < iYear2) {
			return 2;
		} else {
			int iMonth1 = Integer.parseInt(sDate1.substring(3, 5));
			int iMonth2 = Integer.parseInt(sDate2.substring(3, 5));

			if (iMonth1 < 10) {
				iMonth1 = 0 + Integer.parseInt(sDate1.substring(3, 5));
			}

			if (iMonth2 < 10) {
				iMonth2 = 0 + Integer.parseInt(sDate2.substring(3, 5));
			}

			if (iMonth1 > iMonth2) {
				return 1;
			} else if (iMonth1 < iMonth2) {
				return 2;
			} else {

				int iDay1 = Integer.parseInt(sDate1.substring(0, 2));
				int iDay2 = Integer.parseInt(sDate2.substring(0, 2));
				if (iDay1 > iDay2) {
					return 1;
				} else if (iDay1 < iDay2) {
					return 2;
				} else {
					return 0;
				}
			}
		}
	}// End of function.

	/*************** Start CR-OMCPI-1314-04 URN No *****************/

	public int validateType(String fieldName, String value, String validationType, String displayName) {
		String submittedValue = value;
		String Type = "";
		if (validationType.equals("lengthCheck")) {
			//////// //System.out.println("inside validateType-->value: " +
			//////// value);
			if (value.length() > 35 || value.length() == 0) {
				JOptionPane.showMessageDialog(null,
						" Kindly mention the " + displayName + " and the length of the URN should be below 35");
				//////// //System.out.println("inside validateType: satish");
				// formObject.NGClear(fieldName);
				formObject.NGFocus(fieldName);
				return 0;
			}
		}

		/***********************
		 * Start CR-8001-54702 E-Mail Filter
		 ***************************/

		if (validationType.equals("OnlyIntegers")) {
			Type = "([0-9]*)?+(\\-[0-9][0-9]*)?";
		}
		/***********************
		 * End CR-8001-54702 E-Mail Filter
		 ***************************/

		/**********************
		 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
		 ***********************/

		if (validationType.equals("OnlyPanNo")) {
			Type = "([A-Z]){5}([0-9]){4}([A-Z]){1}?";
		}

		/**********************
		 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
		 ************************/

		/***************************
		 * PID-CPI process changes
		 ***************************/
		if (validationType.equals("OnlyNumeric")) {
			Type = "[0-9\t]*";
		}
		Pattern p = Pattern.compile(Type);
		Matcher m = p.matcher(value.toString());
		boolean bInvalid = m.matches();
		//////// //System.out.println("bInvalid=" + bInvalid);
		//////// //System.out.println("inside validateType-->value: " + value);
		if (!bInvalid) {
			if (validationType.equalsIgnoreCase("OnlyNumeric")) {
				JOptionPane.showMessageDialog(null, "Only Numbers are allowed in " + displayName + ".");
				formObject.setNGValue(fieldName, "");
				formObject.NGFocus(fieldName);
				return 0;
			}
			/***********************
			 * Start CR-8001-54702 E-Mail Filter
			 ***************************/
			if (validationType.equalsIgnoreCase("OnlyIntegers")) {
				JOptionPane.showMessageDialog(null, "Only Numbers are allowed in " + displayName + ".");
				formObject.setNGValue(fieldName, "");
				formObject.NGFocus(fieldName);
				return 0;
			}
			/***********************
			 * End CR-8001-54702 E-Mail Filter
			 ***************************/

			/**********************
			 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
			 ***********************/
			if (validationType.equalsIgnoreCase("OnlyPanNo")) {
				JOptionPane.showMessageDialog(null, "Please Enter Correct  " + displayName + " No.");
				formObject.setNGValue(fieldName, "");
				formObject.NGFocus(fieldName);
				return 0;
			}
			/**********************
			 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
			 ************************/

		}
		/***********************
		 * End PID-CPI process changes
		 ***************************/
		return 1;
	}

	public String getClassOfBusiness(String prodName) {
		String clsBusName = "";
		String clsBusQry = "select distinct class_of_business from NG_PRODUCT_MASTER where PRODUCT_NAME ='" + prodName
				+ "'";
		//////// //System.out.println("clsBusQry=" + clsBusQry);
		ArrayList busNameList = formObject.getNGDataFromDataSource(clsBusQry, 1);
		if (busNameList != null && busNameList.size() > 0) {
			clsBusName = (busNameList.get(0)).toString();
			clsBusName = clsBusName.substring((clsBusName.indexOf("[") + 1), (clsBusName.indexOf("]")));
		}
		//////// //System.out.println("clsBusName=" + clsBusName);
		if (!clsBusName.equalsIgnoreCase("") && clsBusName != null) {
			return clsBusName;
		}
		return "";

	}
	/*
	 * Function Limitation: #This function can return the finacial year of the
	 * date(for ex:).
	 */

	public String getFinancialYear(String riskDate) {
		//////// //System.out.println("riskDate==" + riskDate);
		int rYear1 = Integer.parseInt(riskDate.substring(6, 10));
		int rMonth1 = Integer.parseInt(riskDate.substring(3, 5));
		int rDay1 = Integer.parseInt(riskDate.substring(0, 2));
		int preYear = 0;
		int postYear = 0;
		//////// //System.out.println("rYear1=" + rYear1 + "rMonth1==" + rMonth1
		//////// + "rDay1==" + rDay1);
		if (rYear1 < 2014) {
			return "0";
		} else if (rMonth1 > 3 && rMonth1 <= 12) {
			preYear = Integer.parseInt(riskDate.substring(8, 10));
			postYear = Integer.parseInt(riskDate.substring(8, 10)) + 1;
		} else if (rMonth1 >= 1 && rMonth1 <= 3) {
			postYear = Integer.parseInt(riskDate.substring(8, 10));
			preYear = Integer.parseInt(riskDate.substring(8, 10)) - 1;
		}

		if (preYear > 0 && postYear > 0) {
			return preYear + "" + postYear;
		}
		return "1";

	}

	/*************** End CR-OMCPI-1314-04 URN No *******************/
	// Start CR2 Phase1
	private int Save_RMClarification(String pEventName, String ActivityName) {
		//////// //System.out.println("Entering RMClarification at : " +
		//////// dateFormat1.format(new Date()));
		String strTotalPremium = "";
		try {
			if (pEventName.equalsIgnoreCase("S")) {
				/**************** Start ZoneHub Method call **************/
				//////// //System.out.println("Loc" +
				//////// formObject.getNGValue("CPI_IL_LOCATION"));
				if (!formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
					setZoneHub();
				}
				/**************** End ZoneHub Method call **************/
				String ProcessType = (formObject.getNGValue("CPI_Process_Type"));
				//////// //System.out.println("Value of ProcessType:::" +
				//////// ProcessType);
				if (ProcessType.equalsIgnoreCase("Endorsement")) {
					formObject.setNGValue("CPI_RM_ID", formObject.getNGValue("TXT_RM_ID"));
					// ============= Change for Product Type 11/02/2011
					// =========================
					formObject.setNGValue("CPI_PRODUCT_TYPE", formObject.getNGValue("END_PRODUCT_TYPE"));

					//////// //System.out.println("Value of Product Type:::" +
					//////// formObject.getNGValue("CPI_PRODUCT_TYPE"));
					//////// //System.out.println("Value of End Product Name:::"
					//////// + formObject.getNGValue("END_PRODUCT_NAME"));
					//////// //System.out.println("Value of CPI Product Name:::"
					//////// + formObject.getNGValue("CPI_PRODUCT_NAME"));
					// ============= End Change for Product Type
					//////// 11/02/2011=========================

					/*******************************
					 * CR 32 by satish
					 ********************************/
					if (!formObject.getNGValue("CPI_ENDORSEMENT_NO").equals("")) {
						if (duplicateEndNo(formObject.getNGValue("CPI_ENDORSEMENT_NO"))) {
							JOptionPane.showMessageDialog(null, "Endorsement Number Already Exists");
							formObject.NGFocus("CPI_ENDORSEMENT_NO");
							return 0;
						}
						/*
						 * else { String
						 * m_endno=formObject.getNGValue("CPI_ENDORSEMENT_NO");
						 * int maxVal=maxEndNo(m_endno); ////////
						 * //System.out.println("maxVal : "+maxVal); String
						 * l_endno=m_endno.substring(m_endno.lastIndexOf("/")+1)
						 * ; ////////
						 * //System.out.println("l_endno : "+l_endno); int
						 * l_endnoVal = Integer.parseInt(l_endno); ////////
						 * //System.out.println("l_endnoVal: "+l_endnoVal);
						 * if(l_endnoVal<=maxVal) {
						 * JOptionPane.showMessageDialog(
						 * null,"Invalid Endorsement Number");
						 * formObject.NGFocus("CPI_ENDORSEMENT_NO"); return 0; }
						 * }
						 */
					}
					/*******************************
					 * End of CR 32
					 ***********************************/
				}
				// added by ravi on 25/03/2010
				if (!formObject.getNGValue("CPI_TOTAL_PREMIUM").equals("")) {
					if ((formObject.getNGValue("CPI_TOTAL_PREMIUM").startsWith("+")
							|| formObject.getNGValue("CPI_TOTAL_PREMIUM").startsWith("-"))
							&& formObject.getNGValue("CPI_TOTAL_PREMIUM").length() > 1) {
						strTotalPremium = formObject.getNGValue("CPI_TOTAL_PREMIUM").substring(1,
								(formObject.getNGValue("CPI_TOTAL_PREMIUM").length()));
					}
					if (ICICIval.validateText("" + formObject.getNGValue("CPI_TOTAL_PREMIUM").charAt(0), "Number")) {
						strTotalPremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
					}
					if (!check_Numeric(strTotalPremium, 13, 2)) {

						JOptionPane.showMessageDialog(null, "Enter valid total premium");
						formObject.NGFocus("CPI_TOTAL_PREMIUM");
						return 0;

					}
				}

				if (!ICICIval.validateText(formObject.getNGValue("CPI_INSTRUMENT_AMOUNT"), "Number")) {
					JOptionPane.showMessageDialog(null, "Enter valid Instrument Amount");
					formObject.NGFocus("CPI_INSTRUMENT_AMOUNT");
					return 0;
				}

				// Validation changed by Dinesh Kumar on 30Jun2010 to allow all
				// special characters
				if (!ICICIval.validateText(formObject.getNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO"), "GeneralTextMask")) {
					JOptionPane.showMessageDialog(null, "Enter valid Inst. No./CD No./Dep. Slip No");
					formObject.NGFocus("CPI_INST_NO_CD_NO_DEP_SLIP_NO");
					return 0;
				}
				/*************** validations by satish ****************/
				/***************************
				 * PID-CPI process changes
				 ***************************/
				/*
				 * if (!ICICIval.validateText(formObject.getNGValue(
				 * "CORP_INST_NO_CD_NO_DEP_SLIP_NO"), "GeneralTextMask")) {
				 * ////////
				 * //System.out.println("CORP_INST_NO_CD_NO_DEP_SLIP_NO: " +
				 * formObject.getNGValue("CORP_INST_NO_CD_NO_DEP_SLIP_NO"));
				 * JOptionPane.showMessageDialog(null,
				 * "Enter valid Inst. No./CD No./Dep. Slip No");
				 * formObject.NGFocus("CORP_INST_NO_CD_NO_DEP_SLIP_NO"); return
				 * 0; }
				 */
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				/*************** End validations by satish ****************/
				/***********************
				 * Start CR-8001-61337 URN Medium Priority
				 ***************************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("In rm_clar save for
					//////// CR-8001-61337 URN setting value");
					formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME",
							formObject.getNGValue("Corp_Channel_Employee_Name"));
					formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", formObject.getNGValue("CORP_CHANNEL_EMPLOYEE_ID"));
					formObject.setNGValue("CPI_CIF_ID", formObject.getNGValue("CORP_CIF_ID"));
				}

				/**************************************
				 * CR-8001-92286 Omniflow held cover letter CR Start
				 *****************************************************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					// //System.out.println("In RM Clarification Method
					// Corporate CR-8001-92286 Omniflow held cover letter CR
					// Start : vaibhav");
					formObject.setNGValue("CPI_SUM_INSURED_NO_OF_LIVES",
							formObject.getNGValue("CORP_SUM_INSURED_NO_OF_LIVES"));
					formObject.setNGValue("CPI_BSG_LOCATION", formObject.getNGValue("CORP_BSG_LOCATION"));
					formObject.setNGValue("CPI_RM_LOCATION", formObject.getNGValue("CORP_RM_LOCATION"));
					formObject.setNGValue("CPI_quOTE_SYS_ID", formObject.getNGValue("Corp_QuoteSYSID"));
				} else {
					// //System.out.println("In RM Clarification Method
					// Endorsement Corporate CR-8001-92286 Omniflow held cover
					// letter CR Start : vaibhav");
					formObject.setNGValue("CPI_SUM_INSURED_NO_OF_LIVES",
							formObject.getNGValue("END_SUM_INSURED_NO_OF_LIVES"));
					formObject.setNGValue("CPI_BSG_LOCATION", formObject.getNGValue("END_BSG_LOCATION"));
					formObject.setNGValue("CPI_RM_LOCATION", formObject.getNGValue("END_RM_LOCATION"));
					formObject.setNGValue("CPI_quOTE_SYS_ID", formObject.getNGValue("Corp_QuoteSYSID"));
				}
				/**************************************
				 * CR-8001-92286 Omniflow held cover letter CR End
				 ******************************************************/

				/**************************************
				 * Start CR-8001-54702 E-Mail Filter
				 *****************************************************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					System.out.println("In BSG Clarification Method Corporate CR-8001-54702 E-Mail Filter : vaibhav");
					formObject.setNGValue("CPI_DATA_VALIDATION_ID", formObject.getNGValue("CORP_DATA_VALIDATION_ID"));
					formObject.setNGValue("CPI_IAS_ID", formObject.getNGValue("CORP_IAS_ID"));
				} else {
					System.out.println("In BSG Clarification Method Endorsement CR-8001-54702 E-Mail Filter : vaibhav");
					formObject.setNGValue("CPI_DATA_VALIDATION_ID", formObject.getNGValue("End_DATA_VALIDATION_ID"));
					formObject.setNGValue("CPI_IAS_ID", formObject.getNGValue("End_IAS_ID"));
				}
				/**************************************
				 * End CR-8001-54702 E-Mail Filter
				 ******************************************************/
			} else if (pEventName.equalsIgnoreCase("D")) {
				//////// //System.out.println("TEST 1" + obj.toString());
				//////// //System.out.println("Value of End Product NAme: " +
				//////// formObject.getNGValue("END_PRODUCT_NAME"));
				// CR-8001-61337 URN Medium Priority
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("In rm_clar done for
					//////// CR-8001-61337 URN setting value");
					formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME",
							formObject.getNGValue("Corp_Channel_Employee_Name"));
					formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", formObject.getNGValue("CORP_CHANNEL_EMPLOYEE_ID"));
					formObject.setNGValue("CPI_CIF_ID", formObject.getNGValue("CORP_CIF_ID"));
				}
				//////// //System.out.println("Value of End Chaneel_emp_id: " +
				//////// formObject.getNGValue("End_CHANNEL_EMPLOYEE_ID"));
				//////// //System.out.println("Value of End channel employee
				//////// NAme:" +
				//////// formObject.getNGValue("End_Channel_Employee_Name"));
				//////// //System.out.println("Value of CPI Chaneel_emp_id: " +
				//////// formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_ID"));
				//////// //System.out.println("Value of CPI channel employee
				//////// NAme:" +
				//////// formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_NAME"));
				//////// //System.out.println("Value of Corp Chaneel_emp_id: " +
				//////// formObject.getNGValue("CORP_CHANNEL_EMPLOYEE_ID"));
				//////// //System.out.println("Value of Corp channel employee
				//////// NAme:" +
				//////// formObject.getNGValue("Corp_Channel_Employee_Name"));
				//////// //System.out.println("Value of CPI CIF ID:" +
				//////// formObject.getNGValue("CPI_CIF_ID"));
				//////// //System.out.println("Value of CORP CIF ID: " +
				//////// formObject.getNGValue("CORP_CIF_ID"));
				// end CR-8001-61337 URN Medium Priority

				if (Save_RMClarification("S", "") == 0) {
					//////// //System.out.println("TEST 2 " + obj.toString());
					return 0;
				}

				/*************** validations by satish ****************/
				/***************************
				 * PID-CPI process changes
				 ***************************/
				/*
				 * if
				 * (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase(
				 * "Endorsement")) { ////////
				 * //System.out.println("End: satish done called");
				 * formObject.setNGValue("CPI_INSTRUMENT_DATE",
				 * formObject.getNGValue("END_INSTRUMENT_DATE")); }
				 * 
				 * if (formObject.getNGValue("CPI_Process_Type").
				 * equalsIgnoreCase("Corporate Policy Insurance")) { ////////
				 * //System.out.println("Corp: satish done called");
				 * formObject.setNGValue("CPI_INSTRUMENT_DATE",
				 * formObject.getNGValue("CORP_INSTRUMENT_DATE"));
				 * formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
				 * formObject.getNGValue("CORP_INST_NO_CD_NO_DEP_SLIP_NO")); }
				 */
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				/*************** End validations by satish ****************/
				str[0] = "ChkExpClear";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				//////// //System.out.println("obj.toString() " +
				//////// obj.toString());
				if (obj.toString().equalsIgnoreCase("R")) {
					/*******************
					 * CR 45 Network Partner
					 ********************/
					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")
							&& !formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("iPartner")
							&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
						if (CheckMandatoryCombo("CPI_NETWORK_PARTNER", "Network Partner") == 0) {
							return 0;
						}
						if (formObject.getNGValue("CPI_NETWORK_PARTNER").equalsIgnoreCase("Yes")) {
							if (formObject.getNGValue("CPI_NETWORK_PARTNER_NAME").equalsIgnoreCase("")) {
								JOptionPane.showMessageDialog(null, "Please fill  Network Partner Name .");
								formObject.NGFocus("CPI_NETWORK_PARTNER_NAME");
								return 0;
							}
						}
					}
					/*****************
					 * end CR 45 Network Partner
					 *******************/
					/*******************
					 * CR 46 CPU Datawashing
					 *******************/
					if (ActivityName.equalsIgnoreCase("CPUCustClarification")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (ActivityName.equalsIgnoreCase("CPUCustClarification")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
					/*****************
					 * end CR 46 CPU Datawashing
					 ******************/
					if ((formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
							|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))
							&& (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase(""))) {
						//////// //System.out.println("10019");
						/** CR 46 CPU Datawashing **/
						/* CR-OMCPI-1314-03 CPU DataWashing Start */
						/*
						 * if(formObject.getNGValue("CPI_CONST_PREV_WORKSTEP").
						 * equalsIgnoreCase("BSG_QC") ||
						 * (formObject.getNGValue("CPI_CONST_PREV_WORKSTEP").
						 * equalsIgnoreCase("CPU_Data_Washing") &&
						 * ActivityName.equalsIgnoreCase("RM_Clarification"))) {
						 * JOptionPane.showMessageDialog(
						 * null,"Please clear all exceptions"); return 0; }
						 */
						if (formObject.getNGValue("CPI_CONST_PREV_WORKSTEP").equalsIgnoreCase("CPU_Data_Washing")) {
							JOptionPane.showMessageDialog(null, "Please clear all exceptions");
							return 0;
						} /* CR-OMCPI-1314-03 CPU DataWashing End */ else {
							formObject.setNGEnable("CPI_Route_To", true);
							if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
								return 0;
							}
						}
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
				}
				if (!obj.toString().equalsIgnoreCase("R")) {
					/*******************
					 * CR 46 CPU Datawashing
					 *******************/
					if (ActivityName.equalsIgnoreCase("CPUCustClarification")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (ActivityName.equalsIgnoreCase("CPUCustClarification")
							&& formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("false")
									|| formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase(""))) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
					/*****************
					 * end CR 46 CPU Datawashing
					 ******************/
				}

				if (CheckMandatoryTextBox("CPI_PAS", "PAS") == 0) {
					return 0;
				}

				if (CheckMandatoryTextBox("CPI_ENDORSEMENT_NO", "Endorsement No") == 0) {
					return 0;
				}
				/*************************
				 * CPI URN CR 8001-61339 Multiple Changes CR
				 *****************************/

				String endNo = formObject.getNGValue("CPI_ENDORSEMENT_NO");
				//////// //System.out.println("ON Save_RMClarification Checking
				//////// Endorsement_No validation 8001-61339:" +endNo);
				if (endNo != null && endNo.length() > 30) {
					JOptionPane.showMessageDialog(null, "Max length of CPI_ENDORSEMENT_NO is 30");
					formObject.NGFocus("CPI_ENDORSEMENT_NO");
					return 0;
				}

				/*************************
				 * End CPI URN CR 8001-61339 Multiple Changes CR
				 **************************/

				/***********************
				 * Start CR-8001-61337 URN Medium Priority
				 ***************************/
				if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
						&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
						&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
								|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))) // for
																												// sync
																												// cases
				{
					//////// //System.out.println("inside all validation BBG/KRG
					//////// BSG/RM_CLAR Urn CR for Sync cases");
					if (formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_ID").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill CHANNEL EMPLOYEE ID ");
						formObject.NGFocus("CPI_CHANNEL_EMPLOYEE_ID");
						return 0;
					}

					if (formObject.getNGValue("CPI_CHANNEL_EMPLOYEE_NAME").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill CHANNEL EMPLOYEE NAME ");
						formObject.NGFocus("CPI_CHANNEL_EMPLOYEE_NAME");
						return 0;
					}
					if (formObject.getNGValue("CPI_CIF_ID").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill CIF ID ");
						formObject.NGFocus("CORP_CIF_ID");
						return 0;
					}
					String cifid1 = formObject.getNGValue("CPI_CIF_ID");
					//////// //System.out.println("checking CIF ID max length
					//////// validation cifid1 in bsg_clar for BABBGKRG for Sync
					//////// cases"+cifid1);
					if (cifid1 != null && cifid1.length() > 20) {
						JOptionPane.showMessageDialog(null, "Max length of CIF ID is 20");
						formObject.NGFocus("CORP_CIF_ID");
						return 0;
					}
				}
				/***********************
				 * End CR-8001-61337 URN Medium Priority
				 ***************************/

				// ============ Change for Product Type 11/02/2011 =============
				String strActivityName = formObject.getWFActivityName();
				if (formObject.getNGValue("CPI_CONST_PREV_WORKSTEP").equalsIgnoreCase("UW_DEO")
						&& strActivityName.equalsIgnoreCase("RM_Clarification")) {

					if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
						if (CheckMandatoryCombo("CPI_PRODUCT_TYPE", "Product Type") == 0) {
							return 0;
						}
						if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Product Name .");
							formObject.NGFocus("CPI_PRODUCT_NAME");
							return 0;
						}
					} else {
						if (CheckMandatoryCombo("END_PRODUCT_TYPE", "Product Type") == 0) {
							return 0;
						}
						if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill  Product Name .");
							formObject.NGFocus("CPI_PRODUCT_NAME");
							return 0;
						}
					}
				}

				// ============ End Change for Product Type 11/02/2011
				// =============

				if (!(formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						|| formObject.getNGValue("CPI_DATAWASHING_STATUS").equalsIgnoreCase("1"))) {
					if (CheckMandatoryTextBox("CPI_TOTAL_PREMIUM", "Total Premium") == 0) {
						return 0;
					}
				}
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					//////// //System.out.println("CPI_RM_ID:RM_Clarification");
					if (CheckMandatoryTextBox("CPI_RM_ID", "RM ID") == 0) {
						return 0;
					}
				}
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					//////// //System.out.println("TXT_RM_ID:RM_Clarification");
					if (CheckMandatoryTextBox("TXT_RM_ID", "RM ID") == 0) {
						return 0;
					}
				}
				// ============== 21012011 =================

				// ********** Sunil Kumar CR2 Phase 2*******************
				//////// //System.out.println("sunil:RM_Clarification");
				if (pEventName.equalsIgnoreCase("D")) {
					//////// //System.out.println("sunil2:RM_Clarification");
					String sResult = "";
					String sCPI_RM_ID = formObject.getNGValue("CPI_RM_ID");
					//////// //System.out.println("sunil00:sCPI_RM_ID: " +
					//////// sCPI_RM_ID);
					String sQuery = "SELECT count(1) FROM ng_rm_master where EMP_CODE='" + sCPI_RM_ID + "'";
					//////// //System.out.println("sunil3:RM_Clarification:" +
					//////// sQuery);

					sInputxml = icicicmn.WMTestSelect(sQuery, "1");
					//////// //System.out.println("sunil4:RM_Clarification:" +
					//////// sInputxml);
					//////// //System.out.println("Executing RM Master Query at:
					//////// " + dateFormat1.format(new Date()));
					sOutputxml = icicicmn.executeXmlGeneric(sInputxml);
					//////// //System.out.println("sunil5:RM_Clarification:" +
					//////// sOutputxml);
					//////// //System.out.println("RM Master Query Executed at :
					//////// " + dateFormat1.format(new Date()));
					//////// //System.out.println("sunil6:RM_Clarification:" +
					//////// sOutputxml);
					/*************************************************
					 * Start Yogesh Marine
					 **************************************************/
					/*
					 * if (formObject.getWFActivityName().equalsIgnoreCase(
					 * "BSG_QC") ||
					 * formObject.getWFActivityName().equalsIgnoreCase(
					 * "RM_Clarification") ||
					 * formObject.getWFActivityName().equalsIgnoreCase(
					 * "BSG_Clarification") &&
					 * !formObject.getNGValue("CPI_quOTE_SYS_ID").
					 * equalsIgnoreCase("") &&
					 * formObject.getNGValue("CPI_Process_Type").
					 * equalsIgnoreCase("Corporate Policy Insurance")) { //
					 * //System.out.
					 * println("Enter Corp SP name validation Yogesh:"); String
					 * str=formObject.getNGValue("CORP_SP_NAME"); if(str != null
					 * && str.length()>=30) {
					 * JOptionPane.showMessageDialog(null,
					 * "SP Name should be 30 Character"); return 0; } }
					 */
					/*************************************************
					 * End Yogesh Marine
					 **************************************************/ // ==============================
					if (!sCPI_RM_ID.equals("")) {
						if (!sOutputxml.equals("")) {
							//////// //System.out.println("sunil7:RM_Clarification:");
							xmlParser.setInputXML(sOutputxml);
							//////// //System.out.println("sunil8:RM_Clarification:");
							sMainCode = xmlParser.getValueOf("MainCode");
							if (sMainCode.equals("0")) {
								//////// //System.out.println("sunil9:RM_Clarification:");

								if (!sOutputxml.substring(sOutputxml.indexOf("<Results>") + 9,
										sOutputxml.indexOf("</Results>")).equals("")) {
									//////// //System.out.println("sunil10:RM_Clarification:");
									WFXmlResponse xmlResponse = new WFXmlResponse(sOutputxml);
									WFXmlList RecordList;

									//////// //System.out.println("Filling IL
									//////// Location combo at: " +
									//////// dateFormat1.format(new Date()));

									for (RecordList = xmlResponse.createList("Results", "Result"); RecordList
											.hasMoreElements(); RecordList.skip()) {
										sResult = RecordList.getVal("Result");
										//////// //System.out.println("sunil000:RM_Clarification:sResult"
										//////// + sResult);
										String splitResult = sResult.substring(1);
										//////// //System.out.println("sunil000:RM_Clarification:splitResult"
										//////// + splitResult);
										if (splitResult.equals("0")) {
											JOptionPane.showMessageDialog(null, "RM ID does not exist in Master.");
											formObject.NGFocus("CPI_RM_ID");
											return 0;
										}

									}

									//////// //System.out.println("IL Location
									//////// combo filled at: " +
									//////// dateFormat1.format(new Date()));
								} else {
									//////// //System.out.println("sunil11:RM_Clarification:");
									JOptionPane.showMessageDialog(null, "RM ID does not exist in Master..");
									bBrncInfoErr = true;
								}
							}
						}
					}
				}

				// =================== 21012011 ============================
				if (CheckMandatoryTextBox("CPI_RM_NAME", "RM Name") == 0) {
					return 0;
				}
				if (formObject.getNGValue("CPI_IL_LOCATION").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill  IL Location .");
					formObject.NGFocus("CPI_IL_LOCATION");
					return 0;
				}
				/***************************
				 * PID-CPI process changes
				 ***************************/
				if (CheckMandatoryCombo("CPI_PID_PAYMENT_TYPE", "PID Tagging") == 0) {
					return 0;
				}
				/*
				 * if (CheckMandatoryCombo("CPI_MODE_OF_PAYMENT",
				 * "Mode Of Payment") == 0) { return 0; }
				 */
				if (!formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")) {
					/*
					 * if (CheckMandatoryTextBox("CPI_MODE_OF_PAYMENT",
					 * "Mode Of Payment") == 0) { return 0; }
					 */
					if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill Mode Of Payment");
						formObject.NGFocus("CPI_MODE_OF_PAYMENT");
						return 0;
					}
				}
				/***********************
				 * End PID-CPI process changes
				 ***************************/

				/*************** validations by satish ****************/
				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					if (!formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("Adjustment")) {
						/***************************
						 * PID-CPI process changes
						 ***************************/
						/*
						 * if (CheckMandatoryTextBox("CORP_BANK_NAME_CD_NAME",
						 * "BANK NAME CD NAME") == 0) { return 0; } if
						 * (CheckMandatoryDate("CORP_INSTRUMENT_DATE",
						 * "Instrument Date") == 0) { return 0; }
						 */
						if (CheckMandatoryTextBox("CPI_BANK_NAME_CD_NAME", "BANK NAME CD NAME") == 0) {
							return 0;
						}
						if (CheckMandatoryDate("CPI_INSTRUMENT_DATE", "Instrument Date") == 0) {
							return 0;
						}

					}
					if (!formObject.getNGValue("CPI_RI_INWARD").equalsIgnoreCase("Yes")) {
						// if
						// (CheckMandatoryTextBox("CORP_INST_NO_CD_NO_DEP_SLIP_NO",
						// "Inst. No./CD No./Dep. Slip No.") == 0) { //PID_CPI
						// process changes
						if (CheckMandatoryTextBox("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
								"Inst. No./CD No./Dep. Slip No.") == 0) {
							return 0;
						}
					}
					if (CheckMandatoryDate("CPI_RISK_INSPECTION_DATE", "Risk Inception Date") == 0) {
						return 0;
					}
				}

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
					if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("DD")
							|| formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("Cheque")) {
						/*
						 * if (CheckMandatoryTextBox(
						 * "End_INST_NO_CD_NO_DEP_SLIP_NO",
						 * "Inst. No./CD No./Dep. Slip No.") == 0) { return 0; }
						 * if (CheckMandatoryDate("End_INSTRUMENT_DATE",
						 * "Instrument Date") == 0) { return 0; } if
						 * (CheckMandatoryTextBox("End_BANK_NAME_CD_NAME",
						 * "BANK NAME CD NAME") == 0) { return 0; } if
						 * (CheckMandatoryTextBox("CPI_INSTRUMENT_AMOUNT",
						 * "Instrument Amount") == 0) { return 0; }
						 */
						if (CheckMandatoryTextBox("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
								"Inst. No./CD No./Dep. Slip No.") == 0) {
							return 0;
						}
						if (CheckMandatoryDate("CPI_INSTRUMENT_DATE", "Instrument Date") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_BANK_NAME_CD_NAME", "BANK NAME CD NAME") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_INSTRUMENT_AMOUNT", "Instrument Amount") == 0) {
							return 0;
						}
					}
				}
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				/*************** End validations by satish ****************/

				/**********************
				 * Start CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
				 ***********************/

				if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
					formObject.setNGValue("CPI_PAN", formObject.getNGValue("Corp_PAN"));
					formObject.setNGValue("CPI_CUSTOMER_NAME", formObject.getNGValue("Corp_CUSTOMER_NAME"));
				} else {
					formObject.setNGValue("CPI_PAN", formObject.getNGValue("End_PAN"));
					formObject.setNGValue("CPI_CUSTOMER_NAME", formObject.getNGValue("End_CUSTOMER_NAME"));
				}

				String totalpremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
				//////// //System.out.println("Inside RM_CLAR Method Checking
				//////// totalpremium validation CR-8001-59268 :
				//////// "+totalpremium);
				boolean flag1 = false;
				int totalpremiumparsed = 0;
				if (totalpremium != null && !totalpremium.equalsIgnoreCase("")
						&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
					try {
						totalpremiumparsed = Integer.parseInt(totalpremium);
						//////// //System.out.println("After parsing
						//////// totalpremiumparsed: "+totalpremiumparsed);
					} catch (Exception e) {
						flag1 = true;
					}
					if (!flag1 && totalpremiumparsed >= 100000) {
						//////// //System.out.println("Inside IF RM_CLAR Method
						//////// Checking totalpremiumparsed validation
						//////// CR-8001-59268 : "+totalpremiumparsed);
						// formObject.setNGEnable("CPI_PAN", true);
						formObject.setNGLocked("CPI_PAN", true);
						if (CheckMandatoryTextBox("CPI_PAN", "PAN") == 0) {
							formObject.NGFocus("CPI_PAN");
							return 0;
						}

						if (formObject.getNGValue("CPI_PAN") != null
								&& !formObject.getNGValue("CPI_PAN").equalsIgnoreCase("")
								&& validateType("CPI_PAN", formObject.getNGValue("CPI_PAN"), "OnlyPanNo", "PAN") == 0) {
							//////// //System.out.println("In RM_CLAR For
							//////// checking CPI_PAN value
							//////// in=="+formObject.getNGValue("CPI_PAN"));
							String PANNO = formObject.getNGValue("CPI_PAN");
							//////// //System.out.println("In RM_CLAR For
							//////// checking CPI_PAN value in=="+PANNO);
							return 0;
						}

					}

				}

				/**********************
				 * End CPI Omniflow CPI- CR-8001-59268(FlapPrint) CR
				 ************************/
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development Start
				 *****************************************************/
				if (!formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")
						&& formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")) {
					if (CheckMandatoryCombo("CPI_GST_REGISTERED", "GST Registered Value") == 0) {
						System.out.println(
								"Inside RM_Clarification Bucket Done : CR-8127-95325 : GST-Omniflow development");
						formObject.NGFocus("CPI_GST_REGISTERED");
						return 0;
					}
				}
				/**************************************
				 * CR-8127-95325 : GST-Omniflow development End
				 ******************************************************/

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}

		//////// //System.out.println("Exiting Endorsement at : " +
		//////// dateFormat1.format(new Date()));
		return 1;
	}

	void RouteTo_ClarificationWS(String PreviousWS, String ConsPrevWS, String ActivityName) {
		formObject.NGRemoveItemAt("CPI_Route_to", 1);
		//////// //System.out.println("Entering RouteTo_ClarificationWS :");

		//////// //System.out.println("PreviousWS :" + PreviousWS);
		//////// //System.out.println("ConsPrevWS :" + ConsPrevWS);
		//////// //System.out.println("ActivityName :" + ActivityName);
		//////// //System.out.println("CPI_PRODUCT_TYPE :" +
		//////// formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("OTC"));

		// *************************** OTC **************************
		/*********************
		 * CR 24 Commented by satish**************************** if
		 * (formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase("OTC")) {
		 * formObject.setNGValue("Label6", "BSG Approver Field");
		 * formObject.setNGValue("Label10", "BSG Approver Send To");
		 * /*********************CR 24*****************************
		 * //formObject.setNGListIndex("CPI_UW_SEND_TO",1);
		 * formObject.setNGEnable("CPI_UW_SEND_TO",true);
		 * /*********************End CR 24*****************************
		 * formObject.setNGEnable("CPI_UW_DEO_SEND_TO",false); }
		 * /*********************End CR 24 Commented by satish
		 *****************************/
		// ***************************End OTC **************************
		if (ConsPrevWS.equalsIgnoreCase("UW_DEO")) {
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				//////// //System.out.println("1");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				//////// //System.out.println("2");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");

			}
			/***************************
			 * Vendor login & weather Product
			 ****************************/

			//////// //System.out.println("product_irdacode=="+formObject.getNGValue("CPI_PRODUCT_IRDACODE"));

			if ((ActivityName.equalsIgnoreCase("RM_Clarification")
					|| ActivityName.equalsIgnoreCase("BSG_Clarification"))
					&& (formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4037")
							|| formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4047"))) {
				formObject.NGAddItem("CPI_Route_to", "Vendor1Clarification");
				formObject.NGAddItem("CPI_Route_to", "Vendor2Clarification");
			}
			if ((ActivityName.equalsIgnoreCase("Vendor1Clarification")
					|| ActivityName.equalsIgnoreCase("Vendor2Clarification"))
					&& (formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4037")
							|| formObject.getNGValue("CPI_PRODUCT_IRDACODE").equalsIgnoreCase("4047"))) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				// commented below code for hiding vendor2 in venodr1 bucket and
				// viceversa
				/*
				 * if (ActivityName.equalsIgnoreCase("Vendor1Clarification")) {
				 * formObject.NGAddItem("CPI_Route_to", "Vendor2Clarification");
				 * } else if
				 * (ActivityName.equalsIgnoreCase("Vendor2Clarification")) {
				 * formObject.NGAddItem("CPI_Route_to", "Vendor1Clarification");
				 * }
				 */
			}
			/*************************
			 * End Vendor login & weather Product
			 **************************/
		}
		/***************************
		 * Vendor login & weather Product
		 ****************************/

		if (ConsPrevWS.equalsIgnoreCase("Vendor1") || ConsPrevWS.equalsIgnoreCase("Vendor2")
				|| ConsPrevWS.equalsIgnoreCase("COPS_Cust_Id")) { // CPI PID
																	// Additional
																	// Points
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				//////// //System.out.println("Vendor1 or Vendor2");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");

			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				//////// //System.out.println("Vendor1 or Vendor2");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");

			}
		}
		/*************************************************
		 * Yogesh Marine Start
		 ********************************/
		if (ConsPrevWS.equalsIgnoreCase("COPS_Policy_Endr") || ConsPrevWS.equalsIgnoreCase("COPS_Policy_Print")) {
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				// //System.out.println("inside marine 1");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");

			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				// //System.out.println("inside marine 2");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");

			}
		}
		/*************************************************
		 * Yogesh Marine End
		 ********************************/
		/*************************
		 * End Vendor login & weather Product
		 **************************/
		/******************* CR 46 CPU DataWashing ********************/
		/* CR-OMCPI-1314-03 CPU DataWashing Start - commenting following code */
		/*
		 * if(ConsPrevWS.equalsIgnoreCase("CPU_Data_Washing")) {
		 * if(ActivityName.equalsIgnoreCase("CPUCustClarification")) { ////////
		 * //System.out.println("RouteTo_ClarificationWS():CPUCustClarification"
		 * ); formObject.NGAddItem("CPI_Route_to","RM Clarification"); } }
		 */
		/* CR-OMCPI-1314-03 CPU DataWashing End */
		/*
		 * if(ConsPrevWS.equalsIgnoreCase("BSG_QC")) {
		 * formObject.NGAddItem("CPI_Route_to","RM Clarification"); }
		 */
		/***************** end CR 46 CPU DataWashing *******************/
		if ( /*
				 * =============================CR 42 Additional UW
				 * worksteps=============================
				 */ConsPrevWS.equalsIgnoreCase("UW1") || ConsPrevWS.equalsIgnoreCase("UW2")
				|| ConsPrevWS.equalsIgnoreCase("UW3")
				|| /*
					 * ===========================End CR 42 Additional UW
					 * worksteps===========================
					 */ (ConsPrevWS.equalsIgnoreCase("Corporate_UW")
						&& !formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) // CR-OMCPI-1314-05
																											// DataWashing
																											// -
																											// Mail_Management_Extension
				|| ConsPrevWS.equalsIgnoreCase("Re-Insurance") || ConsPrevWS.equalsIgnoreCase("BSG Approver")) {
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				// ***********************CR 24****************************//
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				// ***********************CR 24****************************//
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
			}
			if (ActivityName.equalsIgnoreCase("DEO_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				// ***********************CR 24****************************//
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
			}
			// ***********************CR 24****************************//
			if (ActivityName.equalsIgnoreCase("BSG_Ap_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")){
				 */
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }
			}
			/*
			 * =============================CR 42 Additional UW
			 * worksteps=============================
			 */
			if (ActivityName.equalsIgnoreCase("UW1_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			if (ActivityName.equalsIgnoreCase("UW2_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			if (ActivityName.equalsIgnoreCase("UW3_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			/*
			 * ===========================End CR 42 Additional UW
			 * worksteps===========================
			 */
			if (ActivityName.equalsIgnoreCase("Corp_UWClarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			if (ActivityName.equalsIgnoreCase("RI_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			// ***********************End CR 24****************************//
		}

		/*
		 * if(ConsPrevWS.equalsIgnoreCase("BSG Approver") ) {
		 * if(ActivityName.equalsIgnoreCase("RM_Clarification")){
		 * formObject.NGAddItem("CPI_Route_to","BSG Clarification");
		 * formObject.NGAddItem("CPI_Route_to","DEO Clarification"); }
		 * if(ActivityName.equalsIgnoreCase("BSG_Clarification")){
		 * formObject.NGAddItem("CPI_Route_to","RM Clarification");
		 * formObject.NGAddItem("CPI_Route_to","DEO Clarification"); }
		 * if(ActivityName.equalsIgnoreCase("DEO_Clarification")){
		 * formObject.NGAddItem("CPI_Route_to","BSG Clarification");
		 * formObject.NGAddItem("CPI_Route_to","RM Clarification"); } }
		 */
		/****
		 * Start CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
		 ******/
		if (ConsPrevWS.equalsIgnoreCase("Corporate_UW")
				&& formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
			//////// //System.out.println("Inside Corporate_UW with
			//////// Endorsement:");
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");

			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
			}
			if (ActivityName.equalsIgnoreCase("CPU_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
			}

		}
		if (ConsPrevWS.equalsIgnoreCase("CPU_Approver")
				&& formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
			//////// //System.out.println("Inside CPU_Approver with
			//////// :Endorsement");
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");

			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
			}
			if (ActivityName.equalsIgnoreCase("CPU_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
			}
			if (ActivityName.equalsIgnoreCase("Corp_UWClarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");

			}

		}
		/****
		 * End CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension
		 ********/
		if (ConsPrevWS.equalsIgnoreCase("Processing Hub")) {
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ***********************CR 24****************************//
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//

			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ***********************CR 24****************************//
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//

			}
			// ******************** OTC **********************
			if (ActivityName.equalsIgnoreCase("BSG_Ap_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")){
				 */
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }
			}
			// ******************** End OTC **********************
			if (ActivityName.equalsIgnoreCase("DEO_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ***********************CR 24****************************//
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
			}
			/*
			 * =============================CR 42 Additional UW
			 * worksteps=============================
			 */
			if (ActivityName.equalsIgnoreCase("UW1_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			if (ActivityName.equalsIgnoreCase("UW2_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			if (ActivityName.equalsIgnoreCase("UW3_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			/*
			 * ===========================End CR 42 Additional UW
			 * worksteps===========================
			 */
			if (ActivityName.equalsIgnoreCase("Corp_UWClarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			if (ActivityName.equalsIgnoreCase("RI_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW  Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
		}

		if (ConsPrevWS.equalsIgnoreCase("PH_Print")) {
			// bhagat CR CPU_HEALTH
			if (ActivityName.equalsIgnoreCase("CPU_Clarification")) {
				//////// //System.out.println("Inside CPU_Clarification for
				//////// PH_Print");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
			}
			// end bhagat CR CPU_HEALTH
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				// bhagat CR CPU_HEALTH
				if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
					//////// //System.out.println("CPU Health case: Inside
					//////// RM_Clarification for PH_Print");
					formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				} else {
					// end bhagat CR CPU_HEALTH
					//////// //System.out.println("Non CPU Health case: Inside
					// RM_Clarification for PH_Print");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");

					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					/*
					 * if (!formObject.getNGValue("CPI_PRODUCT_TYPE").
					 * equalsIgnoreCase("OTC")) {
					 */// Commenting OTC condition
					/*
					 * =======================CR 42 Additional UW
					 * worksteps=======================
					 */
					formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
					/*
					 * =======================CR 42 Additional UW
					 * worksteps=======================
					 */
					formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
					formObject.NGAddItem("CPI_Route_to", "RI Clarification");
					// }//Commenting OTC condition
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
					// ***********************CR
					// 24****************************//
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
					// ***********************End CR
					// 24****************************//
					formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				}
			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				// bhagat CR CPU_HEALTH
				//////// //System.out.println("CPU Health case: " +
				// formObject.getNGValue("CPI_CPU_HEALTH_STATUS"));
				if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
					//////// //System.out.println("CPU Health case: Inside
					//////// BSG_Clarification for PH_Print");
					formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				} else {
					// end bhagat CR CPU_HEALTH
					//////// //System.out.println("Non CPU Health case: Inside
					// BSG_Clarification for PH_Print");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					/*
					 * if (!formObject.getNGValue("CPI_PRODUCT_TYPE").
					 * equalsIgnoreCase("OTC")) {
					 */// Commenting OTC condition
					/*
					 * =======================CR 42 Additional UW
					 * worksteps=======================
					 */
					formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
					/*
					 * =======================CR 42 Additional UW
					 * worksteps=======================
					 */
					formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
					formObject.NGAddItem("CPI_Route_to", "RI Clarification");
					// }//Commenting OTC condition
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
					// ***********************CR
					// 24****************************//
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
					// ***********************End CR
					// 24****************************//
					formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				}
			}
			if (ActivityName.equalsIgnoreCase("DEO_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				// formObject.NGAddItem("CPI_Route_to","UW Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ***********************CR 24****************************//
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");

			}
			/*
			 * =============================CR 42 Additional UW
			 * worksteps=============================
			 */
			if (ActivityName.equalsIgnoreCase("UW1_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
			}
			if (ActivityName.equalsIgnoreCase("UW2_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
			}
			if (ActivityName.equalsIgnoreCase("UW3_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
			}
			/*
			 * ===========================End CR 42 Additional UW
			 * worksteps===========================
			 */
			if (ActivityName.equalsIgnoreCase("BSG_Ap_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
			}
			if (ActivityName.equalsIgnoreCase("Corp_UWClarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			if (ActivityName.equalsIgnoreCase("RI_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
			if (ActivityName.equalsIgnoreCase("ProcHubClarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ***********************CR 24****************************//
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
			}
		}

		/*********** CR 8 *****************/
		if (ConsPrevWS.equalsIgnoreCase("BSG Dispatch")) {
			// bhagat CR CPU_HEALTH
			if (ActivityName.equalsIgnoreCase("CPU_Clarification")) {
				//////// //System.out.println("Inside CPU_Clarification for BSG
				//////// Dispatch");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
			}
			// end bhagat CR CPU_HEALTH
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				// bhagat CR CPU_HEALTH
				if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
					//////// //System.out.println("CPU Health case: Inside
					//////// RM_Clarification for BSG Dispatch");
					formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				} else {
					// end bhagat CR CPU_HEALTH
					//////// //System.out.println("Non CPU Health case: Inside
					// RM_Clarification for BSG Dispatch");
					formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");

					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					/*
					 * if (!formObject.getNGValue("CPI_PRODUCT_TYPE").
					 * equalsIgnoreCase("OTC")) {
					 */// Commenting OTC condition
						// formObject.NGAddItem("CPI_Route_to","Corporate UW
						// Clarification");
					/*
					 * =======================CR 42 Additional UW
					 * worksteps=======================
					 */
					formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
					/*
					 * =======================CR 42 Additional UW
					 * worksteps=======================
					 */
					formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
					formObject.NGAddItem("CPI_Route_to", "RI Clarification");
					// }//Commenting OTC condition
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
					// ***********************CR
					// 24****************************//
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
					// ***********************End CR
					// 24****************************//
					formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
					formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
					// bhagat CR CPU_HEALTH
				}
				// end bhagat CR CPU_HEALTH
			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				// bhagat CR CPU_HEALTH
				//////// //System.out.println("CPU Health case: " +
				// formObject.getNGValue("CPI_CPU_HEALTH_STATUS"));
				if (formObject.getNGValue("CPI_CPU_HEALTH_STATUS").equalsIgnoreCase("1")) {
					//////// //System.out.println("CPU Health case: Inside
					//////// BSG_Clarification for BSG Dispatch");
					formObject.NGAddItem("CPI_Route_to", "CPU_Clarification");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				} else {
					// end bhagat CR CPU_HEALTH
					//////// //System.out.println("Non CPU Health case: Inside
					// BSG_Clarification for BSG Dispatch");
					formObject.NGAddItem("CPI_Route_to", "RM Clarification");
					formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
					/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
					/*
					 * if (!formObject.getNGValue("CPI_PRODUCT_TYPE").
					 * equalsIgnoreCase("OTC")) {
					 */// Commenting OTC condition
						// CR 24//formObject.NGAddItem("CPI_Route_to","Corporate
						// UW Clarification");
					/*
					 * =======================CR 42 Additional UW
					 * worksteps=======================
					 */
					formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
					formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
					/*
					 * =======================CR 42 Additional UW
					 * worksteps=======================
					 */
					formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
					formObject.NGAddItem("CPI_Route_to", "RI Clarification");
					// }//Commenting OTC condition
					/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
					// ***********************CR
					// 24****************************//
					formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
					// ***********************End CR
					// 24****************************//
					// Should be added
					// formObject.NGAddItem("CPI_Route_to","Processing Hub
					// Clarification");
					formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification"); // Added
																							// During
																							// CR
																							// 8
					formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
					// bhagat CR CPU_HEALTH
				}
				// end bhagat CR CPU_HEALTH
			}
			if (ActivityName.equalsIgnoreCase("DEO_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
					// formObject.NGAddItem("CPI_Route_to","Corporate UW
					// Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ***********************CR 24****************************//
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
			}
			/*
			 * =============================CR 42 Additional UW
			 * worksteps=============================
			 */
			if (ActivityName.equalsIgnoreCase("UW1_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
			}
			if (ActivityName.equalsIgnoreCase("UW2_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
			}
			if (ActivityName.equalsIgnoreCase("UW3_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
			}
			/*
			 * ===========================End CR 42 Additional UW
			 * worksteps===========================
			 */
			if (ActivityName.equalsIgnoreCase("BSG_Ap_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
			}
			if (ActivityName.equalsIgnoreCase("Corp_UWClarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
			}
			if (ActivityName.equalsIgnoreCase("RI_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");
			}
			if (ActivityName.equalsIgnoreCase("ProcHubClarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ***********************CR 24****************************//
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
				formObject.NGAddItem("CPI_Route_to", "PH Print Clarification");

			}
			if (ActivityName.equalsIgnoreCase("PHPrintClarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				/************ CR-OMCPI-1314-01 Enhanced_CR ***************/
				/*
				 * if
				 * (!formObject.getNGValue("CPI_PRODUCT_TYPE").equalsIgnoreCase(
				 * "OTC")) {
				 */// Commenting OTC condition
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				/*
				 * =======================CR 42 Additional UW
				 * worksteps=======================
				 */
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "RI Clarification");
				// }//Commenting OTC condition
				/********** End CR-OMCPI-1314-01 Enhanced_CR *************/
				// ***********************CR 24****************************//
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
				// ***********************End CR
				// 24****************************//
				formObject.NGAddItem("CPI_Route_to", "Processing Hub Clarification");
			}
		}
		/*********** End CR 8 *************/
		// bhagat CR CPU_HEALTH
		if (ConsPrevWS.equalsIgnoreCase("CPU_HEALTH")) {
			if (ActivityName.equalsIgnoreCase("RM_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
				/* CR-OMCPI-1314-03 CPU DataWashing Start */
				////////// //System.out.println("sati1======"+formObject.getNGValue("CPI_DATAWASHING_TYPE"));
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
					formObject.NGAddItem("CPI_Route_to", "CPU Datawashing Clarification");
				}
				/* CR-OMCPI-1314-03 CPU DataWashing End */
			}
			if (ActivityName.equalsIgnoreCase("BSG_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				/* CR-OMCPI-1314-03 CPU DataWashing Start */
				//////// //System.out.println("sati2======" +
				//////// formObject.getNGValue("CPI_DATAWASHING_TYPE"));
				if (formObject.getNGValue("CPI_DATAWASHING_TYPE").equalsIgnoreCase("Endorsement")) {
					formObject.NGAddItem("CPI_Route_to", "CPU Datawashing Clarification");
				}
				/* CR-OMCPI-1314-03 CPU DataWashing End */
			}
			if (ActivityName.equalsIgnoreCase("CPU_DW_Clarification")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
			}
		}
		// end bhagat CR CPU_HEALTH
	}

	void EnableONRMClarification(String ProcessType, boolean flag) {
		//////// //System.out.println("In EnableONRMClarification1");
		//////// //System.out.println("ProcessType: " + ProcessType);
		//////// //System.out.println("Flag: " + flag);
		String strActivityName = formObject.getWFActivityName();

		/***************************
		 * PID-CPI process changes
		 ***************************/

		/*
		 * if(!strActivityName.equalsIgnoreCase("RM_Clarification") &&
		 * !strActivityName.equalsIgnoreCase("CPUCustClarification")) {
		 * formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", false);
		 * formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
		 * if(formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase(
		 * "Yes")) { /*formObject.setNGValue("CPI_MODE_OF_PAYMENT","");
		 * formObject.setNGEnable("CPI_MODE_OF_PAYMENT", false);
		 * formObject.setNGLocked("CPI_MODE_OF_PAYMENT", false);
		 */
		// formObject.setNGEnable("Frame_PaymentGrid", false); //PID_CPI process
		// changes
		// lockUnlockFields("Yes");//locking all fields
		/*
		 * } else { formObject.setNGEnable("Frame_PaymentGrid", true); //PID_CPI
		 * process changes //lockUnlockFields("No");// means unlocking all
		 * fields //formObject.setNGEnable("CPI_MODE_OF_PAYMENT", flag);
		 * //formObject.setNGLocked("CPI_moDE_OF_PAYMENT", false); } }
		 */
		if (flag) {
			lockUnlockFields("No");// means unlocking all fields
		} else {
			lockUnlockFields("Yes");// means locking all fields
		}
		/***********************
		 * End PID-CPI process changes
		 ***************************/

		if (ProcessType.equalsIgnoreCase("Corporate Policy Insurance")) {

			formObject.setNGEnable("Corp_PAS", flag);
			formObject.setNGLocked("Corp_PAS", flag);
			formObject.NGAddItem("Corp_PAS", "Premia");
			formObject.NGAddItem("Corp_PAS", "Pathfinder");

			//////// //System.out.println("CR 12 CPI");

			//////// //System.out.println("Ravi shankar3" +
			//////// formObject.isNGLocked("Corp_PRODUCT_NAME"));
			formObject.setNGLocked("Corp_TOTAL_PREMIUM", flag);
			formObject.setNGLocked("Corp_SUM_INSURED", flag);
			formObject.setNGLocked("CPI_RM_ID", flag);
			//////// //System.out.println("RMID1" + flag);
			formObject.setNGLocked("Corp_RM_NAME", flag);
			formObject.setNGLocked("Corp_IL_LOCATION", flag);
			/***************************
			 * PID-CPI process changes
			 ***************************/
			// formObject.setNGEnable("Corp_MODE_OF_PAYMENT", flag);
			// formObject.setNGLocked("Corp_MODE_OF_PAYMENT", flag);
			/*
			 * if(!strActivityName.equalsIgnoreCase("RM_Clarification") &&
			 * !strActivityName.equalsIgnoreCase("CPUCustClarification")) {
			 * formObject.setNGEnable("Corp_PID_PAYMENT_TYPE", false);
			 * formObject.setNGLocked("Corp_PID_PAYMENT_TYPE", false);
			 * if(formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase
			 * ("Yes")) { formObject.setNGValue("Corp_moDE_OF_PAYMENT","");
			 * formObject.setNGEnable("Corp_moDE_OF_PAYMENT", false);
			 * formObject.setNGLocked("Corp_moDE_OF_PAYMENT", false); } else {
			 * formObject.setNGEnable("Corp_MODE_OF_PAYMENT", flag);
			 * formObject.setNGLocked("Corp_moDE_OF_PAYMENT", false); } }
			 */
			/***********************
			 * End PID-CPI process changes
			 ***************************/

			formObject.setNGLocked("Corp_prODUCT_NAME", flag);
			formObject.setNGLocked("cpi_product_type", flag);
			/***************************
			 * PID-CPI process changes
			 ***************************/
			/*
			 * formObject.setNGEnable("Corp_INSTRUMENT_DATE", flag);
			 * formObject.setNGLocked("Corp_BANK_NAME_CD_NAME", flag);
			 * formObject.setNGLocked("Corp_INST_NO_CD_NO_DEP_SLIP_NO", flag);
			 */
			/***********************
			 * End PID-CPI process changes
			 ***************************/
		}
		if (ProcessType.equalsIgnoreCase("Endorsement")) {
			formObject.setNGEnable("End_PAS", flag);
			formObject.setNGLocked("End_PAS", flag);
			formObject.NGAddItem("End_PAS", "OM");
			formObject.NGAddItem("End_PAS", "Premia");
			formObject.NGAddItem("End_PAS", "Pathfinder");

			//////// //System.out.println("CR 12 Endorsement");
			//////// //System.out.println("Ravi shankar4" +
			//////// formObject.isNGLocked("End_PRODUCT_NAME"));
			formObject.setNGLocked("End_TOTAL_PREMIUM", flag);
			formObject.setNGLocked("END_CLIENT_INFORMATION", flag);
			formObject.setNGLocked("End_RM_NAME", flag);
			formObject.setNGLocked("CPI_ENDORSEMENT_NO", flag);
			formObject.setNGLocked("End_IL_LOCATION", flag);
			/***************************
			 * PID-CPI process changes
			 ***************************/
			/*
			 * formObject.setNGEnable("End_INSTRUMENT_DATE", flag);
			 * formObject.setNGLocked("End_BANK_NAME_CD_NAME", flag);
			 * formObject.setNGLocked("End_INST_NO_CD_NO_DEP_SLIP_NO", flag);
			 * formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT", flag);
			 */
			/***********************
			 * End PID-CPI process changes
			 ***************************/
			formObject.setNGLocked("END_prODUCT_NAME", flag);
			formObject.setNGLocked("end_product_type", flag);

		}
		//////// //System.out.println("CR12:" +
		//////// formObject.getNGValue("CPI_CONST_PREV_WORKSTEP").equalsIgnoreCase("UW_DEO"));
		//////// //System.out.println("CR12:" + flag);
		if (flag == true && formObject.getNGValue("CPI_CONST_PREV_WORKSTEP").equalsIgnoreCase("UW_DEO")
				&& strActivityName.equalsIgnoreCase("RM_Clarification")) {
			//////// //System.out.println("CR 12 CPI CPI_CONST_PREV_WORKSTEP1 "
			//////// +
			//////// formObject.getNGValue("CPI_CONST_PREV_WORKSTEP").equalsIgnoreCase("UW_DEO"));
			if (ProcessType.equalsIgnoreCase("Corporate Policy Insurance")) {
				formObject.setNGEnable("CPI_PRODUCT_TYPE", true);
			}
			if (ProcessType.equalsIgnoreCase("Endorsement")) {
				formObject.setNGEnable("END_PRODUCT_TYPE", true);
			}
		} else {
			//////// //System.out.println("CR 12 CPI CPI_CONST_PREV_WORKSTEP2 "
			//////// +
			//////// formObject.getNGValue("CPI_CONST_PREV_WORKSTEP").equalsIgnoreCase("UW_DEO"));
			if (ProcessType.equalsIgnoreCase("Corporate Policy Insurance")) {
				formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
			}
			if (ProcessType.equalsIgnoreCase("Endorsement")) {
				formObject.setNGEnable("END_PRODUCT_TYPE", false);
			}
		}

		if (strActivityName.equalsIgnoreCase("RM_Clarification")
				|| strActivityName.equalsIgnoreCase("CPUCustClarification")) {
			if (ProcessType.equalsIgnoreCase("Corporate Policy Insurance")) {
				formObject.setNGLocked("Corp_PAS", false);
				formObject.setNGLocked("CPI_RM_ID", flag);
				formObject.setNGLocked("Corp_RM_NAME", flag);
				formObject.setNGLocked("Corp_IL_LOCATION", false);
				formObject.setNGLocked("Corp_prODUCT_NAME", false);
				formObject.setNGLocked("CORP_SOURCE_NAME", false);
				formObject.setNGLocked("CORP_CHANNEL_NAME", false);
				formObject.setNGLocked("CORP_Branch_Name", false);
				formObject.setNGLocked("CORP_SP_NAME", false);
				formObject.setNGLocked("Corp_TOTAL_PREMIUM", flag);
				/***************************
				 * PID-CPI process changes
				 ***************************/
				// formObject.setNGEnable("Corp_MODE_OF_PAYMENT", flag);
				// formObject.setNGLocked("Corp_MODE_OF_PAYMENT", flag);
				/*
				 * formObject.setNGEnable("Corp_PID_PAYMENT_TYPE", false);
				 * formObject.setNGLocked("Corp_PID_PAYMENT_TYPE", false);
				 * if(formObject.getNGValue("CPI_PID_PAYMENT_TYPE").
				 * equalsIgnoreCase("Yes")) {
				 * formObject.setNGValue("Corp_moDE_OF_PAYMENT","");
				 * formObject.setNGEnable("Corp_moDE_OF_PAYMENT", false);
				 * formObject.setNGLocked("Corp_moDE_OF_PAYMENT", false); } else
				 * { formObject.setNGEnable("Corp_MODE_OF_PAYMENT", flag);
				 * formObject.setNGLocked("Corp_moDE_OF_PAYMENT", false); }
				 */
				/***********************
				 * End PID-CPI process changes
				 ***************************/
				/***************************
				 * PID-CPI process changes
				 ***************************/
				/*
				 * formObject.setNGLocked("Corp_INST_NO_CD_NO_DEP_SLIP_NO",
				 * flag); formObject.setNGLocked("Corp_BANK_NAME_CD_NAME",
				 * flag); formObject.setNGEnable("Corp_INSTRUMENT_DATE", flag);
				 */

				formObject.setNGLocked("CORP_PRIVILEGE_BANKER_CODE", false);
				formObject.setNGLocked("CORP_CF_ID", false);
				/***********************
				 * End PID-CPI process changes
				 ***************************/
			}
			if (ProcessType.equalsIgnoreCase("Endorsement")) {
				//////// //System.out.println("inside second endorsement:" +
				//////// flag);
				formObject.setNGEnable("End_PAS", false);
				formObject.setNGLocked("End_PAS", false);
				formObject.setNGLocked("CPI_ENDORSEMENT_NO", flag);
				formObject.setNGLocked("End_TOTAL_PREMIUM", flag);
				formObject.setNGLocked("End_RM_NAME", flag);
				formObject.setNGLocked("End_IL_LOCATION", false);
				formObject.setNGLocked("END_prODUCT_NAME", false);
				/***************************
				 * PID-CPI process changes
				 ***************************/
				// formObject.setNGEnable("End_MODE_OF_PAYMENT", flag);
				// formObject.setNGLocked("End_MODE_OF_PAYMENT", flag);
				/*
				 * formObject.setNGEnable("End_PID_PAYMENT_TYPE", false);
				 * formObject.setNGLocked("End_PID_PAYMENT_TYPE", false);
				 * if(formObject.getNGValue("CPI_PID_PAYMENT_TYPE").
				 * equalsIgnoreCase("Yes")) {
				 * formObject.setNGValue("End_MODE_OF_PAYMENT","");
				 * formObject.setNGEnable("End_MODE_OF_PAYMENT", false);
				 * formObject.setNGLocked("End_MODE_OF_PAYMENT", false); } else
				 * { formObject.setNGEnable("End_MODE_OF_PAYMENT", flag);
				 * formObject.setNGLocked("End_moDE_OF_PAYMENT", false); }
				 */
				/***********************
				 * End PID-CPI process changes
				 ***************************/

				formObject.setNGLocked("END_CLIENT_INFORMATION", false);
				/***************************
				 * PID-CPI process changes
				 ***************************/
				/*
				 * formObject.setNGLocked("End_BANK_NAME_CD_NAME", flag);
				 * formObject.setNGEnable("End_INSTRUMENT_DATE", flag);
				 * formObject.setNGLocked("End_INST_NO_CD_NO_DEP_SLIP_NO",
				 * flag); formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT", flag);
				 */
				formObject.setNGLocked("End_PRIVILEGE_BANKER_CODE", false);
				formObject.setNGLocked("End_CF_ID", false);
				/***********************
				 * End PID-CPI process changes
				 ***************************/
			}

		}
	}

	/*
	 * void BBGKRGPopulate(String ActivityName,String strControlName,String
	 * strControlValue){
	 * 
	 * if(strControlName.equalsIgnoreCase("CPI_PRIMARY_SUB_VERTICAL")){ String
	 * TableName=""; String Column=""; String Column1=""; String Column2="";
	 * String Column3="";
	 * 
	 * String sBBG_KRG_ID=formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL");
	 * //////// //System.out.println("sBBG_KRG_ID: "+sBBG_KRG_ID); String
	 * FieldName=""; if(strControlValue.equalsIgnoreCase("BBG")){
	 * TableName="NG_CPI_BBG_Master"; Column1="BBG_Channel_Name";
	 * Column2="BBG_Source_Name"; Column3="BBG_Branch_Name"; }
	 * if(strControlValue.equalsIgnoreCase("KRG")){
	 * TableName="NG_CPI_KRG_Master"; Column1="KRG_Channel_Name";
	 * Column2="KRG_Source_Name"; Column3="KRG_Branch_Name"; } for(int
	 * i=0;i<=3;i++){ String sResult=""; if(i==0){
	 * FieldName="CPI_PRIMARY_SUB_VERTICAL"; Column=Column1;
	 * 
	 * Column="RECORDID"; TableName="NG_CPI_PRIMARY_SUB_VERT_MAS"; //ver }
	 * if(i==1){ FieldName="CPI_Source_Name"; Column=Column2; Column="SOURCE";
	 * TableName="NG_CPI_SOURCE_MASTER"; //ver } if(i==2){
	 * FieldName="CPI_Channel_Name"; Column=Column1;
	 * 
	 * Column="CHANNEL"; TableName="NG_CPI_CHANNEL_MASTER"; //ver }
	 * 
	 * if(i==3){ FieldName="CPI_Branch_Name"; Column=Column3;
	 * 
	 * Column="BRANCH"; TableName="NG_CPI_BRANCH_MASTER"; //ver }
	 * 
	 * String sQuery="";
	 * 
	 * if(i>0) { sQuery="select distinct "+Column+" from "+TableName+
	 * " Where PRIMARY_SUB_VERTICAL_ID="+sBBG_KRG_ID ; } else {
	 * sQuery="select "+Column+" from "+TableName+
	 * " Where PRIMARY_SUB_VERTICAL='"+sBBG_KRG_ID+"'" ; }
	 * 
	 * //////// //System.out.println("sQuery "+sQuery); ////////
	 * //System.out.println("Start Execution  : "+dateFormat1.format(new
	 * Date()));
	 * 
	 * 
	 * if(!(strControlValue.equalsIgnoreCase("KRG"))) { String s_Field_Value="";
	 * if (i>0) { formObject.NGClear(FieldName); }
	 * 
	 * ////////
	 * //System.out.println("BBGKRGPopulate Start Execution  : "+dateFormat1.
	 * format(new Date())); ArrayList
	 * getReason=formObject.getNGDataFromDataSource(sQuery,1); ////////
	 * //System.out.println("getReason.size(): "+getReason.size());
	 * 
	 * 
	 * for(int count=0;count<getReason.size();count++) {
	 * s_Field_Value=(getReason.get(count)).toString();
	 * s_Field_Value=s_Field_Value.substring(s_Field_Value.indexOf("[")+1,
	 * s_Field_Value.indexOf("]"));
	 * 
	 * if (i==0) { sBBG_KRG_ID=s_Field_Value; } else {
	 * formObject.NGAddItem(FieldName,s_Field_Value); }
	 * 
	 * }
	 * 
	 * ////////
	 * //System.out.println("BBGKRGPopulate End Execution  : "+dateFormat1.
	 * format(new Date()));
	 * 
	 * }
	 * 
	 * //////// //System.out.println("End execution  : "+dateFormat1.format(new
	 * Date())); }
	 * 
	 * }
	 * 
	 * //========= verma 23122010 ================
	 * if(strControlName.equalsIgnoreCase("CPI_SOURCE_NAME")) { String
	 * s_SOURCE_ID=formObject.getNGValue("CPI_SOURCE_NAME"); String
	 * s_BBG_KRG_ID=formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL");
	 * 
	 * ////////
	 * //System.out.println("s_Source_ID in CPI_SOURCE_NAME: "+s_SOURCE_ID);
	 * 
	 * if(!s_SOURCE_ID.equals("") && s_BBG_KRG_ID.equalsIgnoreCase("KRG")) {
	 * 
	 * String TableName=""; String Column=""; String Column1=""; String
	 * Column2=""; String Column3=""; String WhereClause="";
	 * 
	 * //////// //System.out.println("s_SOURCE_ID: "+s_SOURCE_ID); String
	 * FieldName=""; if(strControlValue.equalsIgnoreCase("BBG")){
	 * TableName="NG_CPI_BBG_Master"; Column1="BBG_Channel_Name";
	 * Column2="BBG_Source_Name"; Column3="BBG_Branch_Name"; }
	 * if(strControlValue.equalsIgnoreCase("KRG")){
	 * TableName="NG_CPI_KRG_Master"; Column1="KRG_Channel_Name";
	 * Column2="KRG_Source_Name"; Column3="KRG_Branch_Name"; } for(int
	 * i=0;i<=2;i++){ String sResult=""; if(i==0){ FieldName="CPI_SOURCE_NAME";
	 * Column=Column1;
	 * 
	 * Column="RECORDID"; TableName="NG_CPI_SOURCE_MASTER"; //ver }
	 * 
	 * if(i==1){ FieldName="CPI_Channel_Name"; Column=Column1;
	 * 
	 * Column="CHANNEL";
	 * TableName="NG_CPI_SOURCE_CHANNEL_MASTER A,NG_CPI_SOURCE_MASTER B,NG_CPI_CHANNEL_MASTER C "
	 * ; //ver
	 * WhereClause=" Where B.Recordid=A.Source_ID and C.Recordid=A.Channel_ID";
	 * }
	 * 
	 * if(i==2){ FieldName="CPI_Branch_Name"; Column=Column3;
	 * 
	 * Column="BRANCH";
	 * TableName="NG_CPI_SOURCE_BRANCH_MASTER A,NG_CPI_SOURCE_MASTER B,NG_CPI_BRANCH_MASTER C"
	 * ; //ver
	 * WhereClause=" Where B.Recordid=A.Source_ID and C.Recordid=A.Branch_ID ";
	 * }
	 * 
	 * String sQuery="";
	 * 
	 * if(i>0) { sQuery="select "+Column+" from "+TableName+
	 * WhereClause+" and A.SOURCE_ID="+s_SOURCE_ID ; } else {
	 * sQuery="select "+Column+" from "+TableName+
	 * " Where SOURCE='"+s_SOURCE_ID+"'"; } ////////
	 * //System.out.println("sQuery "+sQuery); ////////
	 * //System.out.println("Start Execution  : "+dateFormat1.format(new
	 * Date()));
	 * 
	 * String s_Field_Value=""; if (i>0) { formObject.NGClear(FieldName); }
	 * 
	 * ////////
	 * //System.out.println("Source Start Execution  : "+dateFormat1.format(new
	 * Date())); ArrayList
	 * getReason=formObject.getNGDataFromDataSource(sQuery,1); ////////
	 * //System.out.println("getReason.size(): "+getReason.size());
	 * 
	 * 
	 * for(int count=0;count<getReason.size();count++) {
	 * s_Field_Value=(getReason.get(count)).toString();
	 * s_Field_Value=s_Field_Value.substring(s_Field_Value.indexOf("[")+1,
	 * s_Field_Value.indexOf("]"));
	 * 
	 * if (i==0) { s_SOURCE_ID=s_Field_Value; } else {
	 * formObject.NGAddItem(FieldName,s_Field_Value); }
	 * 
	 * }
	 * 
	 * ////////
	 * //System.out.println("Source End Execution  : "+dateFormat1.format(new
	 * Date()));
	 * 
	 * //////// //System.out.println("End Execution  : "+dateFormat1.format(new
	 * Date())); }
	 * 
	 * 
	 * }
	 * 
	 * } //========= verma 23122010 End ================
	 * 
	 * }
	 */
	// ========== CR Quote SYS ========================
	void BBGKRGPopulate_QuoteSYS(String ActivityName, String strControlName, String strControlValue) {
		//////// //System.out.println("In BBGKRGPopulate_QuoteSYS");
		if (strControlName.equalsIgnoreCase("CORP_PRIMARY_SUB_VERTICAL")) {
			String TableName = "";
			String Column = "";
			String Column1 = "";
			String Column2 = "";
			String Column3 = "";

			String sBBG_KRG_ID = formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL");
			//////// //System.out.println("sBBG_KRG_ID: " + sBBG_KRG_ID);
			String FieldName = "";
			if (strControlValue.equalsIgnoreCase("BBG")) {
				TableName = "NG_CPI_BBG_Master";
				Column1 = "BBG_Channel_Name";
				Column2 = "BBG_Source_Name";
				Column3 = "BBG_Branch_Name";
			}
			if (strControlValue.equalsIgnoreCase("KRG")) {
				TableName = "NG_CPI_KRG_Master";
				Column1 = "KRG_Channel_Name";
				Column2 = "KRG_Source_Name";
				Column3 = "KRG_Branch_Name";
			}
			for (int i = 0; i <= 3; i++) {
				String sResult = "";
				if (i == 0) {
					FieldName = "CORP_PRIMARY_SUB_VERTICAL";
					Column = Column1;

					Column = "RECORDID";
					TableName = "NG_CPI_PRIMARY_SUB_VERT_MAS"; // ver
				}
				if (i == 1) {
					FieldName = "CORP_Source_Name";
					Column = Column2;
					Column = "SOURCE";
					TableName = "NG_CPI_SOURCE_MASTER"; // ver
				}
				if (i == 2) {
					FieldName = "CORP_Channel_Name";
					Column = Column1;

					Column = "CHANNEL";
					TableName = "NG_CPI_CHANNEL_MASTER"; // ver
				}

				if (i == 3) {
					FieldName = "CORP_Branch_Name";
					Column = Column3;

					Column = "BRANCH";
					TableName = "NG_CPI_BRANCH_MASTER"; // ver
				}

				String sQuery = "";

				if (i > 0) {
					sQuery = "select distinct " + Column + " from " + TableName + " Where PRIMARY_SUB_VERTICAL_ID="
							+ sBBG_KRG_ID;
				} else {
					sQuery = "select " + Column + " from " + TableName + " Where PRIMARY_SUB_VERTICAL='" + sBBG_KRG_ID
							+ "'";
				}

				//////// //System.out.println("sQuery " + sQuery);
				//////// //System.out.println("Start Execution : " +
				//////// dateFormat1.format(new Date()));

				if (!(strControlValue.equalsIgnoreCase("KRG"))) // if(!(i<2 &&
																// strControlValue.equalsIgnoreCase("KRG")))
				{

					String s_Field_Value = "";
					if (i > 0) {
						formObject.NGClear(FieldName);
						// formObject.setNGListIndex(FieldName,0);
					}

					//////// //System.out.println("BBGKRGPopulate Start
					//////// Execution : " + dateFormat1.format(new Date()));
					ArrayList getReason = formObject.getNGDataFromDataSource(sQuery, 1);
					//////// //System.out.println("getReason.size(): " +
					//////// getReason.size());

					for (int count = 0; count < getReason.size(); count++) {
						s_Field_Value = (getReason.get(count)).toString();
						s_Field_Value = s_Field_Value.substring(s_Field_Value.indexOf("[") + 1,
								s_Field_Value.indexOf("]"));

						if (i == 0) {
							sBBG_KRG_ID = s_Field_Value;
						} else {
							formObject.NGAddItem(FieldName, s_Field_Value);
						}

					}

					//////// //System.out.println("BBGKRGPopulate End Execution
					//////// : " + dateFormat1.format(new Date()));

				}

				//////// //System.out.println("End execution : " +
				//////// dateFormat1.format(new Date()));
			}

		}

		// ========= verma 23122010 ================
		if (strControlName.equalsIgnoreCase("CORP_SOURCE_NAME")) {
			String s_SOURCE_ID = formObject.getNGValue("CORP_SOURCE_NAME");
			String s_BBG_KRG_ID = formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL");

			//////// //System.out.println("s_Source_ID in CORP_SOURCE_NAME: " +
			//////// s_SOURCE_ID);

			if (!s_SOURCE_ID.equals("") && s_BBG_KRG_ID.equalsIgnoreCase("KRG")) {

				String TableName = "";
				String Column = "";
				String Column1 = "";
				String Column2 = "";
				String Column3 = "";
				String WhereClause = "";

				//////// //System.out.println("s_SOURCE_ID: " + s_SOURCE_ID);
				String FieldName = "";
				if (strControlValue.equalsIgnoreCase("BBG")) {
					TableName = "NG_CPI_BBG_Master";
					Column1 = "BBG_Channel_Name";
					Column2 = "BBG_Source_Name";
					Column3 = "BBG_Branch_Name";
				}
				if (strControlValue.equalsIgnoreCase("KRG")) {
					TableName = "NG_CPI_KRG_Master";
					Column1 = "KRG_Channel_Name";
					Column2 = "KRG_Source_Name";
					Column3 = "KRG_Branch_Name";
				}
				for (int i = 0; i <= 2; i++) {
					String sResult = "";
					if (i == 0) {
						FieldName = "CORP_SOURCE_NAME";
						Column = Column1;

						Column = "RECORDID";
						TableName = "NG_CPI_SOURCE_MASTER"; // ver
					}

					if (i == 1) {
						FieldName = "CORP_Channel_Name";
						Column = Column1;

						Column = "CHANNEL";
						TableName = "NG_CPI_SOURCE_CHANNEL_MASTER A,NG_CPI_SOURCE_MASTER B,NG_CPI_CHANNEL_MASTER C "; // ver
						WhereClause = " Where B.Recordid=A.Source_ID and C.Recordid=A.Channel_ID";
					}

					if (i == 2) {
						FieldName = "CORP_Branch_Name";
						Column = Column3;

						Column = "BRANCH";
						TableName = "NG_CPI_SOURCE_BRANCH_MASTER A,NG_CPI_SOURCE_MASTER B,NG_CPI_BRANCH_MASTER C"; // ver
						WhereClause = " Where B.Recordid=A.Source_ID and C.Recordid=A.Branch_ID ";
					}

					String sQuery = "";

					if (i > 0) {
						sQuery = "select " + Column + " from " + TableName + WhereClause + " and A.SOURCE_ID="
								+ s_SOURCE_ID;
					} else {
						sQuery = "select " + Column + " from " + TableName + " Where SOURCE='" + s_SOURCE_ID + "'";
					}

					//////// //System.out.println("sQuery " + sQuery);
					//////// //System.out.println("Start Execution : " +
					//////// dateFormat1.format(new Date()));

					String s_Field_Value = "";
					if (i > 0) {
						formObject.NGClear(FieldName);
					}

					//////// //System.out.println("Source Start Execution : " +
					//////// dateFormat1.format(new Date()));
					ArrayList getReason = formObject.getNGDataFromDataSource(sQuery, 1);
					//////// //System.out.println("getReason.size(): " +
					//////// getReason.size());

					for (int count = 0; count < getReason.size(); count++) {
						s_Field_Value = (getReason.get(count)).toString();
						s_Field_Value = s_Field_Value.substring(s_Field_Value.indexOf("[") + 1,
								s_Field_Value.indexOf("]"));

						if (i == 0) {
							s_SOURCE_ID = s_Field_Value;
						} else {
							formObject.NGAddItem(FieldName, s_Field_Value);
						}

					}

					//////// //System.out.println("Source End Execution : " +
					//////// dateFormat1.format(new Date()));

					//////// //System.out.println("End Execution : " +
					//////// dateFormat1.format(new Date()));
				}

			}

		}
		// ========= verma 23122010 End ================

	}
	// =========== End CR Quote SYS ====================

	// ================ 2011 ===========================================
	void KRGPopulate(String ActivityName, String strControlName, String strControlValue) {
		if (strControlName.equalsIgnoreCase("CPI_PRIMARY_SUB_VERTICAL")) {
			String TableName = "";
			String Column = "";
			String Column1 = "";
			String Column2 = "";
			String Column3 = "";

			String sBBG_KRG_ID = formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL");
			//////// //System.out.println("sBBG_KRG_ID: " + sBBG_KRG_ID);
			String FieldName = "";

			if (strControlValue.equalsIgnoreCase("KRG")) {
				TableName = "NG_CPI_KRG_Master";
				Column1 = "KRG_Channel_Name";
				Column2 = "KRG_Source_Name";
				Column3 = "KRG_Branch_Name";
			}
			for (int i = 0; i <= 1; i++) {
				String sResult = "";
				if (i == 0) {
					FieldName = "CPI_PRIMARY_SUB_VERTICAL";
					Column = Column1;

					Column = "RECORDID";
					TableName = "NG_CPI_PRIMARY_SUB_VERT_MAS"; // ver
				}
				if (i == 1) {
					FieldName = "CPI_Source_Name";
					Column = Column2;
					Column = "SOURCE";
					TableName = "NG_CPI_SOURCE_MASTER"; // ver
				}

				String sQuery = "";

				if (i > 0) {
					sQuery = "select distinct " + Column + " from " + TableName + " Where PRIMARY_SUB_VERTICAL_ID="
							+ sBBG_KRG_ID;
				} else {
					sQuery = "select " + Column + " from " + TableName + " Where PRIMARY_SUB_VERTICAL='" + sBBG_KRG_ID
							+ "'";
				}
				//////// //System.out.println("sQuery " + sQuery);
				//////// //System.out.println("KRGPopulate Start Execution : " +
				//////// dateFormat1.format(new Date()));

				String s_Field_Value = "";
				if (i > 0) {
					formObject.NGClear(FieldName);
				}

				ArrayList getReason = formObject.getNGDataFromDataSource(sQuery, 1);
				//////// //System.out.println("getReason.size(): " +
				//////// getReason.size());

				for (int count = 0; count < getReason.size(); count++) {
					s_Field_Value = (getReason.get(count)).toString();
					s_Field_Value = s_Field_Value.substring(s_Field_Value.indexOf("[") + 1, s_Field_Value.indexOf("]"));

					if (i == 0) {
						sBBG_KRG_ID = s_Field_Value;
					} else {
						formObject.NGAddItem(FieldName, s_Field_Value);
					}

				}

				//////// //System.out.println("KRGPopulate End Execution : " +
				//////// dateFormat1.format(new Date()));
			}

		}
	}
	// ======================End 2011 =================================

	// ================ CR 8 2011 ===========================================
	void Endorsement_Type_Populate(String ActivityName, String strControlName, String strControlValue) {

		//////// //System.out.println("Enter in Endorsement_Populate ");
		//////// //System.out.println("ActivityName: " + ActivityName);
		//////// //System.out.println("strControlName: " + strControlName);
		//////// //System.out.println("strControlValue: " + strControlValue);
		String FieldName = "";
		String s_ENDORSEMENT_TYPE = "";
		String s_ENDORSEMENT_TYPE_ID = "";
		if (strControlName.equalsIgnoreCase("CPI_TYPE_OF_ENDORSEMENT")) {
			//////// //System.out.println("Enter in Endorsement_Populate1 ");
			if (!strControlValue.equals("")) {
				//////// //System.out.println("Endter in Endorsement_Populate2
				//////// ");
				String TableName = "";
				String Column = "";
				String Column1 = "";
				String Column2 = "";
				String Column3 = "";
				String WhereClause = "";

				String sResult = "";

				for (int i = 0; i <= 1; i++) {

					if (i == 0) {

						FieldName = "CPI_TYPE_OF_ENDORSEMENT";
						s_ENDORSEMENT_TYPE = formObject.getNGValue(FieldName);

						//////// //System.out.println("s_ENDORSEMENT_TYPE: " +
						//////// s_ENDORSEMENT_TYPE);
						Column = "RECORD_ID";
						TableName = "NG_ENDORSEMENT_TYPE_MASTER"; // NG_ENDORSEMENT_TYPE_MASTER
					}
					if (i == 1) {

						if (formObject.getNGValue("CPI_TYPE_OF_ENDORSEMENT").equalsIgnoreCase("External endorsement")) {
							//////// //System.out.println("s_ENDORSEMENT_TYPE
							//////// for Other: " + s_ENDORSEMENT_TYPE);
							FieldName = "CPI_EXTERNAL_ENDORSEMENT_TYPE";

						}
						if (formObject.getNGValue("CPI_TYPE_OF_ENDORSEMENT").equalsIgnoreCase("Internal Endorsement")) {
							//////// //System.out.println("s_ENDORSEMENT_TYPE
							//////// for Other: " + s_ENDORSEMENT_TYPE);
							FieldName = "CPI_INTERNAL_ENDORSEMENT_TYPE";

						}

						Column = "ENDORSEMENT_SUB_TYPE";
						TableName = "NG_ENDORSEMENT_MASTER";
					}

					String sQuery = "";
					if (i > 0) {
						sQuery = "select " + Column + " from " + TableName + " Where ENDORSEMENT_TYPE_ID="
								+ s_ENDORSEMENT_TYPE_ID;
					} else {
						sQuery = "select " + Column + " from " + TableName + " Where ENDORSEMENT_TYPE='"
								+ s_ENDORSEMENT_TYPE + "'";
					}

					//////// //System.out.println("sQuery " + sQuery);
					//////// //System.out.println("ENDORSEMENT Populate Start
					//////// Execution : " + dateFormat1.format(new Date()));
					String s_Field_Value = "";
					if (i > 0) {
						formObject.NGClear(FieldName);

					}

					ArrayList getENDORSEMENT = formObject.getNGDataFromDataSource(sQuery, 1);
					//////// //System.out.println("getENDORSEMENT.size(): " +
					//////// getENDORSEMENT.size());
					//////// //System.out.println("ENDORSEMENT Type: " +
					//////// formObject.getNGValue("CPI_TYPE_OF_ENDORSEMENT"));
					for (int count = 0; count < getENDORSEMENT.size(); count++) {
						s_Field_Value = (getENDORSEMENT.get(count)).toString();
						s_Field_Value = s_Field_Value.substring(s_Field_Value.indexOf("[") + 1,
								s_Field_Value.indexOf("]"));
						//////// //System.out.println("s_Field_Value " +
						//////// s_Field_Value + "i: " + i);
						//////// //System.out.println("In For");

						if (i == 0) {
							//////// //System.out.println("In For i==0 " +
							//////// s_ENDORSEMENT_TYPE);
							s_ENDORSEMENT_TYPE_ID = s_Field_Value;

						} else {
							//////// //System.out.println("In For Else");
							formObject.NGAddItem(FieldName, s_Field_Value);

						}

					}
					//////// //System.out.println("11Source End Execution : " +
					//////// dateFormat1.format(new Date()));

				}

				//////// //System.out.println("FieldName111: " + FieldName);
				//////// //System.out.println("FieldValue111: " +
				//////// formObject.getNGValue(FieldName));
				formObject.setNGListIndex(FieldName, 0);

			} else {
				//////// //System.out.println("CR 12 CPI_TYPE_OF_ENDORSEMENT
				//////// Click Enable False: ");

				if (formObject.getNGValue("CPI_TYPE_OF_ENDORSEMENT").equalsIgnoreCase("External endorsement")) {
					formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
					if (!strControlValue.equals("--Select--")) {
						formObject.setNGListIndex("CPI_EXTERNAL_ENDORSEMENT_TYPE", 0);
					}
				}
				if (formObject.getNGValue("CPI_TYPE_OF_ENDORSEMENT").equalsIgnoreCase("Internal Endorsement")) {
					formObject.setNGEnable("CPI_INTERNAL_ENDORSEMENT_TYPE", false);
					if (!strControlValue.equals("--Select--")) {
						formObject.setNGListIndex("CPI_INTERNAL_ENDORSEMENT_TYPE", 0);
					}
				}

			}
		}
		// ========= verma 23122010 End ================
		// CPI_EXTERNAL_ENDORSEMENT_TYPE,CPI_INTERNAL_ENDORSEMENT_TYPE
	}
	// ======================End CR 8 2011 =================================

	void Validate_RM_ID(String pEventName, String pControlName, String pControlValue, String pReserved) {

		// ============= RM ID Validation at ====================
		//////// //System.out.println("RM ID Validation:");
		String sResult = "";
		String lstrActivityName = formObject.getWFActivityName();
		String sCPI_RM_ID = formObject.getNGValue(pControlName);
		//////// //System.out.println("sunil00:sCPI_RM_ID: " + sCPI_RM_ID);
		String sRM_Name_Field = "";
		if (lstrActivityName.equalsIgnoreCase("Endorsement")
				|| lstrActivityName.equalsIgnoreCase(
						"CPU_Assignment") /* CR 46 CPU DataWashing */
				|| lstrActivityName.equalsIgnoreCase("RM_Green_File")/* //satish */
				|| lstrActivityName
						.equalsIgnoreCase("CO_insurance")/* //satish */
				|| /* CR-OMCPI-1314-03 CPU DataWashing Start */ lstrActivityName.equalsIgnoreCase("CPU_Data_Washing")
				|| lstrActivityName.equalsIgnoreCase(
						"CPU_DW_Clarification") /*
												 * CR-OMCPI-1314-03 CPU
												 * DataWashing End
												 */) {
			sRM_Name_Field = "CPI_RM_NAME";
		} else {
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				sRM_Name_Field = "CORP_RM_NAME";
			}
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				sRM_Name_Field = "END_RM_NAME";
			}

		}
		//////// //System.out.println("sRM_Name_Field:: " + sRM_Name_Field);
		if (formObject.getNGValue(pControlName).equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "Please fill RM ID.");
			formObject.NGFocus(pControlName);
		} else {
			// ============= Check RM User in the OmniFlow ====================
			String sQuery = "SELECT count(1) FROM PDBUSER where useralive = 'Y' and USERNAME='" + sCPI_RM_ID
					+ "'"; /*
							 * CR-OMCPI-1314-03 CPU DataWashing bug fix - Added
							 * useralive = 'Y' condition to check if user is
							 * active
							 */
			//////// //System.out.println("sunil3:Endorsement:" + sQuery);
			ArrayList getUser = formObject.getNGDataFromDataSource(sQuery, 1);
			String s_RMUser = (getUser.get(0)).toString();
			s_RMUser = s_RMUser.substring(s_RMUser.indexOf("[") + 1, s_RMUser.indexOf("]"));
			//////// //System.out.println("s_RMUser: " + s_RMUser);
			int iRMValue = Integer.parseInt(s_RMUser);
			//////// //System.out.println("iRMValue: " + iRMValue);

			// *********** Checking RM USer Exist status ****************

			if (iRMValue > 0) {
				// ************* RM ID Locked Status ***************
				/*
				 * sQuery="SELECT count(1) FROM ng_rm_master where EMP_CODE='"
				 * +sCPI_RM_ID+"'"; ////////
				 * //System.out.println("sunil3:Endorsement:"+sQuery); ArrayList
				 * getReason=formObject.getNGDataFromDataSource(sQuery,1);
				 * String s_Field_Value=(getReason.get(0)).toString();
				 * s_Field_Value=s_Field_Value.substring(s_Field_Value.indexOf(
				 * "[")+1,s_Field_Value.indexOf("]")); ////////
				 * //System.out.println("s_Field_Value: "+s_Field_Value); int
				 * iValue = Integer.parseInt(s_Field_Value); ////////
				 * //System.out.println("iValue: "+iValue); // ***********
				 * Checking RM USer Exist status **************** if (iValue>0)
				 * {
				 * 
				 * if(!lstrActivityName.equalsIgnoreCase("RM_Clarification")) {
				 * //////// //System.out.println("RM ID Found:");
				 * sQuery="SELECT USERLOCKED FROM USERSECURITY WHERE USERINDEX = (SELECT USERINDEX FROM PDBUSER WHERE USERNAME ='"
				 * +sCPI_RM_ID+"')"; // *********** Checking RM Locked status
				 * **************** ////////
				 * //System.out.println("sQuery: "+sQuery); ArrayList
				 * getRMLockedStatus=formObject.getNGDataFromDataSource(sQuery,1
				 * ); //////// //System.out.println("getRMLockedStatussize(): "
				 * +getRMLockedStatus.size()); String
				 * s_Value=(getRMLockedStatus.get(0)).toString();
				 * s_Value=s_Value.substring(s_Value.indexOf("[")+1,s_Value.
				 * indexOf("]")); ////////
				 * //System.out.println("s_Value: "+s_Value);
				 * if(s_Value.equalsIgnoreCase("Y")) { ////////
				 * //System.out.println("RM ID Found but is Locked:");
				 * JOptionPane.showMessageDialog(
				 * null,"Specified RM ID is Locked.");
				 * formObject.setNGValue(pControlName,"");
				 * formObject.setNGValue(sRM_Name_Field,"");
				 * formObject.NGFocus(pControlName);
				 * 
				 * } // *********** End of Checking RM Locked status
				 * **************** }
				 * 
				 * } else { //////// //System.out.println("RM ID Not Found:");
				 * JOptionPane.showMessageDialog(
				 * null,"RM ID does not exist in Master.");
				 * formObject.setNGValue(pControlName,"");
				 * formObject.setNGValue(sRM_Name_Field,"");
				 * formObject.NGFocus(pControlName);
				 * 
				 * }
				 */
			} else {
				//////// //System.out.println("RM ID Not Found:");
				JOptionPane.showMessageDialog(null, "RM ID does not exist in OmniFlow System or RMID is InActive.");
				formObject.setNGValue(pControlName, "");
				formObject.setNGValue(sRM_Name_Field, "");
				formObject.NGFocus(pControlName);

			}
			// formObject.NGFocus(sRM_Name_Field);
		}
		// ============= End Check RM User in the OmniFlow ====================
	}

	// ======================End CR 12 2011 =================================
	void Validate_ClientInformation(String pEventName, String pControlName, String pControlValue, String pReserved) {
		// ============= ClientInformation Validation at Endorsement and RM
		// Green file ====================
		//////// //System.out.println("ClientInformation Validation:");
		String lstrActivityName = formObject.getWFActivityName();
		String s_ClinetInfo = formObject.getNGValue(pControlName);
		//////// //System.out.println("ClientInformation :" + s_ClinetInfo);

		if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
				&& formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("CRS")
				&& formObject.getNGValue("CPI_SECONDARY_VERTICAL").equalsIgnoreCase("BA")
				&& formObject.getNGValue("CPI_SECONDARY_SUB_VERTICAL").equalsIgnoreCase("CrSl")) {
			//////// //System.out.println("ClientInformation : HN1");
			formObject.setNGListIndex("CPI_CLIENT_INFORMATION", 2);
		} else {
			//////// //System.out.println("ClientInformation : Others");
			formObject.setNGListIndex("CPI_CLIENT_INFORMATION", 1);
		}
	}

	// ============== CR 15 ========================
	void Validate_Specified_Person(String pEventName, String pControlName, String pControlValue, String pReserved,
			boolean Flg) {
		// ============= ClientInformation Validation at Endorsement and RM
		// Green file ====================
		//////// //System.out.println("Specified_Person Validation:");
		String lstrActivityName = formObject.getWFActivityName();
		String s_ClinetInfo = formObject.getNGValue(pControlName);
		//////// //System.out.println("Specified_Person :" + s_ClinetInfo);

		if (Flg == false) {
			if (((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
					|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000"))
					&& formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("RLG"))
					|| ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
									.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
									.equalsIgnoreCase("KEY RELATIONSHIP GROUP")
							|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000"))
							&& formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase("ING Vysya"))
					|| (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("Home")
							&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA") || formObject
									.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000")))
					|| /*****************************
						 * CR 28 by satish
						 *****************************/
					/******
					 * CR-OMCPI-1314-02 FIG COB CR (Added FIG in
					 * Primary_vertical and COB in Business_type)
					 ******/
					((lstrActivityName
							.equalsIgnoreCase("RM_Green_File")/*** CR 38 ***/
							|| lstrActivityName.equalsIgnoreCase(
									"Endorsement")/*** END CR 38 ***/
							|| (lstrActivityName.equalsIgnoreCase(
									"CPU_Assignment")) /*
														 * CR 46 CPU DataWashing
														 */)
							&& (((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
									|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
									&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
											|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
									&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("Yes"))
									|| ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("FIG"))
											&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("COB"))
											&& formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL")
													.equalsIgnoreCase("COB"))))
					|| ((lstrActivityName
							.equalsIgnoreCase("RM_Green_File")/*** CR 38 ***/
							|| lstrActivityName.equalsIgnoreCase(
									"Endorsement")/*** END CR 38 ***/
							|| (lstrActivityName.equalsIgnoreCase(
									"CPU_Assignment")) /*
														 * CR 46 CPU DataWashing
														 */)
							&& (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
									|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG"))
							&& (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
									|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Broker"))
							&& formObject.getNGValue("CPI_IBANK_AGENT").equalsIgnoreCase("No")
							&& !formObject.getNGValue("CPI_SOURCE_NAME").equalsIgnoreCase(""))
					|| (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("SME")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("CSG")
							|| formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase(
									"FIG")) /****
											 * End CR-OMCPI-1314-02 FIG COB CR
											 * (Added FIG in Primary_vertical
											 * and COB in Business_type)
											 ****/
			/***************************
			 * End CR 28 by satish
			 ***************************/
			) {
				//////// //System.out.println("2.Validation CR 28: Inside
				//////// Specified_Person Enabling validation");
				//////// //System.out.println("Specified_Person :Enabled");
				// formObject.setNGListIndex("CPI_SPECIFIED_PERSON",1);
				formObject.setNGEnable("CPI_SPECIFIED_PERSON", true);
				formObject.setNGLocked("CPI_SPECIFIED_PERSON", true); // false -
																		// CR-8001-92286
																		// Omniflow
																		// held
																		// cover
																		// letter
			} else {
				//////// //System.out.println("2.Validation CR 28: Inside
				//////// Specified_Person disabling validation");
				//////// //System.out.println("Specified_Person : Disabled11");
				formObject.setNGValue("CPI_SPECIFIED_PERSON", "");
				// formObject.setNGListIndex("CPI_SPECIFIED_PERSON",0);
				formObject.setNGEnable("CPI_SPECIFIED_PERSON", false);
				formObject.setNGLocked("CPI_SPECIFIED_PERSON", false);
			}
		} else {
			if ((formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
					&& formObject.getNGValue("CORP_SOURCE_NAME").equalsIgnoreCase("RLG"))
					|| (formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
							&& formObject.getNGValue("CORP_SOURCE_NAME").equalsIgnoreCase("ING Vysya"))
					|| (formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("Home")
							|| formObject.getNGValue("CORP_PRIMARY_VERTICAL").equalsIgnoreCase("BA"))) {
				//////// //System.out.println("Specified_Person For Qute Sys at
				//////// BSG Qc:Enabled");
				formObject.setNGEnable("Corp_SP_Name", true);
				formObject.setNGLocked("Corp_SP_Name", false);
			} else {
				//////// //System.out.println("Specified_Person : Disabled12");
				formObject.setNGEnable("Corp_SP_Name", false);
				formObject.setNGLocked("Corp_SP_Name", false);
			}
		}
	}
	// ============== End CR 15 ========================

	// ================= CR Qoute SYS ========================
	void Validate_Quote_SYS_Fields() {
		String sActivityName1 = formObject.getWFActivityName();
		//////// //System.out.println("In Validate_Quote_SYS_Fields:");
		QuoteComboVal();
		if ((formObject.getWFActivityName()).equalsIgnoreCase("BSG_QC")) {
			//////// //System.out.println("inside val1");
			formObject.setNGEnable("Corp_PAS", true);
			formObject.setNGLocked("Corp_PAS", true);
			formObject.NGClear("Corp_PAS");
			formObject.NGAddItem("Corp_PAS", "Premia");
			formObject.NGAddItem("Corp_PAS", "Pathfinder");
			formObject.setNGValue("Corp_PAS", formObject.getNGValue("CPI_PAS"));
			/***********************
			 * Start CR-8001-61337 URN Medium Priority
			 ***************************/
			//////// //System.out.println("Start CR-8001-61337 URN Medium
			//////// Priority");
			if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
					&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
					&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))) // Done
																											// for
																											// Sync
																											// cases
			{
				//////// //System.out.println("inside CR-8001-61337
				//////// Validate_Quote_SYS_Fields for sync cases");
				formObject.setNGLocked("Corp_Channel_Employee_ID", true);
				formObject.setNGLocked("Corp_Channel_Employee_Name", true);
				formObject.setNGLocked("Corp_CIF_ID", true);
				formObject.setNGLocked("CPI_CIF_ID", true);
			} else {
				formObject.setNGLocked("Corp_Channel_Employee_ID", false);
				/*****************************
				 * CR 28 by satish
				 *****************************/
				formObject.setNGLocked("Corp_Channel_Employee_Name", false);
			}
			/***********************
			 * End CR-8001-61337 URN Medium Priority
			 ***************************/
			formObject.setNGLocked("Corp_Infra_Commission", false);
			/***************************
			 * End CR 28 by satish
			 ***************************/
			formObject.setNGLocked("CORP_SP_NAME", false);
			formObject.setNGLocked("Corp_Source_Name", false);
			formObject.setNGLocked("Corp_Channel_Name", false);
			formObject.setNGLocked("Corp_Branch_Name", false);
			if (!(formObject.getNGValue("Corp_Source_Name").equalsIgnoreCase(""))) {
				formObject.setNGEnable("Corp_Channel_Name", false);
				formObject.setNGEnable("Corp_Branch_Name", false);
			}

			formObject.setNGValue("Corp_Source_Name", formObject.getNGValue("CPI_Source_Name"));
			formObject.setNGValue("Corp_Channel_Name", formObject.getNGValue("CPI_Channel_Name"));
			formObject.setNGValue("Corp_Branch_Name", formObject.getNGValue("CPI_Branch_Name"));
			/**********************
			 * Start Development in Omniflow CPI Alternate Inwarding Process 4.0
			 *************************/
			formObject.setNGEnable("CPI_BOOKING_TYPE", true);
			formObject.setNGLocked("CPI_BOOKING_TYPE", true);
			/**********************
			 * End Development in Omniflow CPI Alternate Inwarding Process 4.0
			 ***************************/
			//////// //System.out.println("end val");
			// QuoteComboVal();
		} else {
			formObject.setNGEnable("CPI_PAS", false);
			formObject.setNGLocked("CPI_PAS", false);
			/**********************
			 * Start Development in Omniflow CPI Alternate Inwarding Process 4.0
			 *************************/
			formObject.setNGEnable("CPI_BOOKING_TYPE", false);
			formObject.setNGLocked("CPI_BOOKING_TYPE", false);
			/**********************
			 * End Development in Omniflow CPI Alternate Inwarding Process 4.0
			 ***************************/
		}

		// vip
		// formObject.setSpecificDateFormat("CPI_FILE_QC_DATE","dd/MM/yyyy");
		// vishal_for_uw_deo
		if ((formObject.getWFActivityName()).equalsIgnoreCase("UW_DEO")) {
			//////// //System.out.println("satish: Enabling trANSACTION_ID");
			formObject.setNGEnable("CPI_trANSACTION_ID", true);
			formObject.setNGLocked("CPI_trANSACTION_ID", true);
		}
		/**********************
		 * Start Development in Omniflow CPI Alternate Inwarding Process 4.0
		 *************************/
		if ((formObject.getWFActivityName()).equalsIgnoreCase("Proposal_Release")) {
			//////// //System.out.println("CPI_BOOKING_TYPE For Quote Cases in
			//////// Validate_Quote_SYS_Fields Method :");
			formObject.setNGEnable("CPI_BOOKING_TYPE", true);
			formObject.setNGLocked("CPI_BOOKING_TYPE", true);
		}
		/**********************
		 * End Development in Omniflow CPI Alternate Inwarding Process 4.0
		 ***************************/

		formObject.setNGLocked("CPI_QUOTE_NO", false);
		formObject.setNGLocked("CPI_CUSTOMER_NAME", false);
		formObject.setNGLocked("CPI_CUSTOMER_ID", false);// PID_CPI process
															// changes
		formObject.setNGLocked("CPI_CLIENT_INFORMATION", false);
		formObject.setNGLocked("CPI_RM_ID", false);
		formObject.setNGLocked("CPI_RM_NAME", false);
		formObject.setNGLocked("CPI_IL_LOCATION", false);
		formObject.setNGLocked("CPI_PRIMARY_VERTICAL", false);
		formObject.setNGLocked("CPI_PRIMARY_SUB_VERTICAL", false);

		formObject.setNGEnable("CPI_SECONDARY_VERTICAL", false);
		formObject.setNGLocked("CPI_SECONDARY_VERTICAL", false);
		formObject.setNGLocked("CPI_SECONDARY_SUB_VERTICAL", false);
		formObject.setNGLocked("CPI_BUSINESS_TYPE", false);
		formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", false);
		formObject.setNGLocked("CPI_Channel_Name", false);
		// //System.out.println("Inside if 1 Locked false1:");
		formObject.setNGLocked("CPI_Source_Name", false);
		formObject.setNGLocked("CPI_Branch_Name", false);
		/***************************
		 * PID-CPI process changes
		 ***************************/
		formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
		formObject.setNGLocked("CPI_CF_ID", false);
		/***********************
		 * End PID-CPI process changes
		 ***************************/

		formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", false);
		formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", false);
		// formObject.setNGLocked("CPI_BOOKING_TYPE", false); // CPI Alternate
		// Inwarding Process 4.0

		formObject.setNGLocked("CPI_TRANSACTION_TYPE", false);
		formObject.setNGLocked("CPI_COINSURANCE", false);
		formObject.setNGLocked("CPI_PERCENTAGE_SHARE", false);
		formObject.setNGEnable("CPI_PRODUCT_TYPE", false);
		formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
		formObject.setNGLocked("CPI_PRODUCT_NAME", false);
		formObject.setNGLocked("CPI_TOTAL_PREMIUM", false);
		formObject.setNGEnable("CPI_RISK_INSPECTION_DATE", false);
		// sandeep yadav cr8
		/***************************
		 * PID-CPI process changes
		 ***************************/
		/*
		 * formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", false);
		 * formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
		 */

		/***********************
		 * End PID-CPI process changes
		 ***************************/

		formObject.setNGEnable("CPI_INSTRUMENT_DATE", false);
		formObject.setNGLocked("CPI_CURRENT_BALANCE", false);
		// sandeep yadav CR8
		formObject.setNGLocked("CPI_BANK_NAME_CD_NAME", false);
		formObject.setNGLocked("CPI_RI_INWARD", false);
		formObject.setNGLocked("Corp_CUSTOMER_NAME", false);
		formObject.setNGLocked("Corp_CUSTOMER_ID", false);// PID_CPI process
															// changes
		formObject.setNGLocked("CPI_CLIENT_INFORMATION", false);
		formObject.setNGLocked("CORP_RM_NAME", false);
		formObject.setNGLocked("Corp_IL_LOCATION", false);
		formObject.setNGLocked("Corp_PRIMARY_VERTICAL", false);
		// sandeep yadav CR8
		formObject.setNGLocked("Corp_PRIMARY_SUB_VERTICAL", false);
		formObject.setNGLocked("Corp_SECONDARY_VERTICAL", false);
		// sandeep yadav CR8
		formObject.setNGLocked("Corp_SECONDARY_SUB_VERTICAL", false);
		formObject.setNGLocked("Corp_PRODUCT_NAME", false);
		// sandeep yadav CR8
		/***************************
		 * PID-CPI process changes
		 ***************************/
		/*
		 * formObject.setNGEnable("Corp_MODE_OF_PAYMENT", false);
		 * formObject.setNGLocked("Corp_MODE_OF_PAYMENT", false);
		 */
		formObject.setNGEnable("Corp_PID_PAYMENT_TYPE", false);
		formObject.setNGLocked("Corp_PID_PAYMENT_TYPE", false);
		formObject.setNGLocked("Corp_PRIVILEGE_BANKER_CODE", false);
		formObject.setNGLocked("Corp_CIF_ID", false);
		formObject.setNGEnable("CPI_MODE_OF_PAYMENT", false);
		formObject.setNGLocked("CPI_MODE_OF_PAYMENT", false);
		/***********************
		 * End PID-CPI process changes
		 ***************************/

		formObject.setNGLocked("CORP_TOTAL_PREMIUM", false);
		// sandeep yadav CR8
		/***************************
		 * PID-CPI process changes
		 ***************************/
		/*
		 * formObject.setNGLocked("CORP_INST_NO_CD_NO_DEP_SLIP_NO", false);
		 * formObject.setNGEnable("CORP_INSTRUMENT_DATE", false);
		 * formObject.setNGLocked("CORP_BANK_NAME_CD_NAME", false);
		 */
		/***********************
		 * End PID-CPI process changes
		 ***************************/
		// sandeep yadav CR8
		formObject.setNGLocked("CPI_trANSACTION_ID", false);
		formObject.setNGLocked("CPI_BANK_NAME_CD_NAME", false);// PID_CPI
																// process
																// changes
		formObject.setNGEnable("CPI_INSTRUMENT_DATE", false);// PID_CPI process
																// changes
		formObject.setNGLocked("CPI_leADERS_POLICY_NO", false);
		formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO", false);

		// ============== Client Informa tion Validation ================

		// sandeep yadav
		if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
				&& formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("CRS")
				&& formObject.getNGValue("CORP_SECONDARY_VERTICAL").equalsIgnoreCase("BA")
				&& formObject.getNGValue("CORP_SECONDARY_SUB_VERTICAL").equalsIgnoreCase("CrSl")) {
			//////// //System.out.println("ClientInformation : HNI");
			formObject.setNGValue("CPI_CLIENT_INFORMATION", "HNI");
		} else {
			//////// //System.out.println("ClientInformation : Others");
			formObject.setNGValue("CPI_CLIENT_INFORMATION", "Others");
			//////// //System.out.println("$$$:ClientInformation : Others");
		}
		// ============== End Client Information Validation ================
		String lstrActivityName = formObject.getWFActivityName();
		// =========== CR Quote SYS =============
		String pControlName = "CORP_PRIMARY_SUB_VERTICAL";
		String pControlValue = formObject.getNGValue("CORP_PRIMARY_SUB_VERTICAL");

		//////// //System.out.println("lstrActivityName" + lstrActivityName);
		//////// //System.out.println("pControlName" + pControlName);
		//////// //System.out.println("pControlValue" + pControlName);

		if (lstrActivityName.equalsIgnoreCase("BSG_QC") && pControlName.equalsIgnoreCase("CORP_PRIMARY_SUB_VERTICAL")) {
			if (pControlValue.equalsIgnoreCase("KRG") || pControlValue.equalsIgnoreCase("BBG")) {
				// ********* Verma 22122010 ====================
				//////// //System.out.println("Verma 1qwq ");
				if (pControlValue.equalsIgnoreCase("KRG")) {
					//////// //System.out.println("Verma 1 KRG ");
					formObject.setNGLocked("CORP_CHANNEL_EMPLOYEE_ID", true);
					formObject.setNGLocked("Corp_CIF_ID", true);// CR-8001-61337
																// URN Medium
																// Priority
					formObject.setNGEnable("CORP_SOURCE_NAME", true);
					formObject.setNGListIndex("CORP_SOURCE_NAME", 0);
					// sandeep yadav
					formObject.setNGValue("Corp_Source_Name", formObject.getNGValue("CPI_SOURCE_NAME"));
					formObject.setNGValue("Corp_Channel_Name", formObject.getNGValue("CPI_Channel_Name"));
					formObject.setNGValue("Corp_Branch_Name", formObject.getNGValue("CPI_Branch_Name"));
					/***************************
					 * PID-CPI process changes
					 ***************************/
					formObject.setNGValue("Corp_PRIVILEGE_BANKER_CODE",
							formObject.getNGValue("CPI_PRIVILEGE_BANKER_CODE"));
					formObject.setNGValue("Corp_CIF_ID", formObject.getNGValue("CPI_CIF_ID"));
					/***********************
					 * End PID-CPI process changes
					 ***************************/

					if ((formObject.getNGValue("CORP_SOURCE_NAME").equalsIgnoreCase(""))) {
						formObject.setNGEnable("CORP_CHANNEL_NAME", false);
						formObject.setNGEnable("CORP_BRANCH_NAME", false);
					}

				}
				if (pControlValue.equalsIgnoreCase("BBG")) {
					//////// //System.out.println("Verma 1 BBG ");
					formObject.setNGLocked("CORP_CHANNEL_EMPLOYEE_ID", true);
					formObject.setNGLocked("Corp_CIF_ID", true);// CR-8001-61337
																// URN Medium
																// Priority
					formObject.setNGEnable("CORP_SOURCE_NAME", true);
					formObject.setNGEnable("CORP_CHANNEL_NAME", true);
					formObject.setNGEnable("CORP_BRANCH_NAME", true);
					BBGKRGPopulate_QuoteSYS(lstrActivityName, pControlName, pControlValue);
				}
			} else {
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", "");
				// //System.out.println("Inside if 1 locked false2:");
				formObject.setNGLocked("CPI_SOURCE_NAME", false);
				formObject.setNGLocked("CPI_BRANCH_NAME", false);
				formObject.setNGLocked("CPI_CHANNEL_NAME", false);
				formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", false);
				/***************************
				 * PID-CPI process changes
				 ***************************/
				formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", "");
				formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
				formObject.setNGValue("CPI_CIF_ID", "");
				formObject.setNGLocked("CPI_CIF_ID", false);
				/***********************
				 * End PID-CPI process changes
				 ***************************/
			}
		}

		if ((sActivityName1.equalsIgnoreCase("RM_Green_File"))
				|| (sActivityName1.equalsIgnoreCase("RM_Clarification"))) {
			QuoteRMGreenClr();
		}
		/***********************
		 * Start CR-8001-61337 URN Medium Priority
		 ***************************/
		if (((formObject.getWFActivityName()).equalsIgnoreCase("BSG_QC")
				|| (formObject.getWFActivityName()).equalsIgnoreCase("RM_Clarification")
				|| (formObject.getWFActivityName()).equalsIgnoreCase("BSG_Clarification"))
				&& !formObject.getNGValue("CPI_quOTE_SYS_ID").equalsIgnoreCase("")
				&& formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
				&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
						|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))) // Done
																										// for
																										// Sync
																										// cases
		{
			if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
					&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
							|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))) {
				// //System.out.println("CIF_ID BBG/KRG CR-8001-61337 in
				// BSG_QC,RM/BSG_clar for Sync cases");
				formObject.setNGLocked("Corp_CIF_ID", true);
				formObject.setNGLocked("CPI_CIF_ID", true);
			}
			/*****************************
			 * Start Yogesh Marine CR
			 ***********************/
			formObject.setNGEnable("CORP_RM_NAME", true);
			formObject.setNGEnable("CPI_RM_ID", true);
			/*****************************
			 * End Yogesh Marine CR
			 ***********************/
		}
		/***********************
		 * End CR-8001-61337 URN Medium Priority
		 ***************************/
		//////// //System.out.println("Out Validate_Quote_SYS_Fields:");
	}
	// ================ End CR Quote SYS =====================

	
	public void getData(String query, String noOfCols) {
		try {
			// passing the control and form data to NGEjbCalls class
			NGEjbCalls ngEjbCalls = new NGEjbCalls(formObject);
			// get input xml for the query
			String inputXml = ngEjbCalls.callSelectInputXML(query, noOfCols);
			//////// //System.out.println("input xml:-------->" + inputXml);
			// get output xml for the query
			String outputXml = ngEjbCalls.executeXmlGeneric(inputXml);
			//////// //System.out.println("output xml:-------->" + outputXml);
			// result=
			//////// ngEjbCalls.xmlParse(outputXml,arrfieldName,noOfCols,flag);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void setZoneHub() {
		//////// //System.out.println("inside save sandeep");

		String sQuery = "select Zone, Hub from ng_il_location_master where il_Location_value='"
				+ formObject.getNGValue("CPI_IL_LOCATION") + "'";

		//////// //System.out.println("inside setZoneHub:" + sQuery);
		ArrayList getUser = formObject.getNGDataFromDataSource(sQuery, 2);

		String s_CoUser = (getUser.get(0)).toString();

		//////// //System.out.println("zone" + s_CoUser);
		String Zone = s_CoUser.substring((s_CoUser.indexOf("[") + 1), (s_CoUser.indexOf(",")));

		String Hub = s_CoUser.substring((s_CoUser.indexOf(",") + 1), (s_CoUser.indexOf("]")));

		//////// //System.out.println("Zone " + Zone);

		//////// //System.out.println("Hub " + Hub);

		formObject.setNGValue("CPI_ZONE", Zone);

		formObject.setNGValue("CPI_HUB", Hub);
		//////// //System.out.println("Zone111111" +
		//////// formObject.getNGValue("CPI_HUB"));
		//////// //System.out.println("Hub111111" +
		//////// formObject.getNGValue("CPI_ZONE"));
	}

	private int BBGKRGID(String priSubVartval, String priSubVerCode) {// CR-8001-87420
																		// Green
																		// File
																		// Digitization
		//////// //System.out.println("inside BBGKRGID");
		String sQuery = "";
		/****************
		 * Start CR-8001-87420 Green File Digitization
		 ********************/
		if (priSubVerCode == null || priSubVerCode.equals("") || priSubVerCode.equals("NA")) {
			sQuery = "select RECORDID from NG_CPI_PRIMARY_SUB_VERT_MAS Where PRIMARY_SUB_VERTICAL=N'" + priSubVartval
					+ "'";
		} else {
			sQuery = "select RECORDID from NG_CPI_PRIMARY_SUB_VERT_MAS Where PRIMARY_SUB_VERTICAL=N'" + priSubVartval
					+ "' or Primary_Sub_Vertical_Code='" + priSubVerCode + "'";
		}
		/****************
		 * End CR-8001-87420 Green File Digitization
		 ********************/
		String sQuery2 = "select RECORDID from NG_CPI_PRIMARY_SUB_VERT_MAS Where PRIMARY_SUB_VERTICAL=N'"
				+ priSubVartval + "'";
		ArrayList getIDArray = formObject.getNGDataFromDataSource(sQuery2, 1);

		String getIDString = (getIDArray.get(0)).toString();
		String getIDString1 = getIDString.substring((getIDString.indexOf("[") + 1), (getIDString.indexOf("]")));

		int valInt = Integer.parseInt(getIDString1);
		//////// //System.out.println("yadav@@" + valInt);
		return valInt;
	}

	private int SourceID(String Source) {
		//////// //System.out.println("inside source");
		String sQuery1 = "select RECORDID from NG_CPI_SOURCE_MASTER Where SOURCE=N'" + Source + "'";
		ArrayList getIDArray = formObject.getNGDataFromDataSource(sQuery1, 1);

		String getIDString = (getIDArray.get(0)).toString();
		String getIDString1 = getIDString.substring((getIDString.indexOf("[") + 1), (getIDString.indexOf("]")));

		int valInt = Integer.parseInt(getIDString1);
		//////// //System.out.println("sandeep source id @@" + valInt);
		return valInt;
	}

	private int ProducttypeID(String Source) {
		//////// //System.out.println("inside source");

		String sQuery = "select RECORD_ID from NG_PRODUCT_TYPE_MASTER Where product_type=N'" + Source + "'";
		ArrayList getIDArray = formObject.getNGDataFromDataSource(sQuery, 1);

		String getIDString = (getIDArray.get(0)).toString();
		String getIDString1 = getIDString.substring((getIDString.indexOf("[") + 1), (getIDString.indexOf("]")));

		int valInt = Integer.parseInt(getIDString1);
		//////// //System.out.println("sandeep ProducttypeID @@" + valInt);
		return valInt;
	}

	/********************** CR21 by satish *****************************/
	private int LeaderID(String Source) {
		//////// //System.out.println("inside CR21");
		String sQuery = "select RECORD_ID from NG_CPI_LEADER_CATEGORY Where LEADER_CATEGORY_TYPE=N'" + Source + "'";

		ArrayList getIDArray = formObject.getNGDataFromDataSource(sQuery, 1);
		String getIDString = (getIDArray.get(0)).toString();
		String getIDString1 = getIDString.substring((getIDString.indexOf("[") + 1), (getIDString.indexOf("]")));

		int valInt = Integer.parseInt(getIDString1);
		//////// //System.out.println("satish LeaderCategoryID @@" + valInt);
		return valInt;
	}

	private int ProductCategoryID(String Source) {
		//////// //System.out.println("inside CR21 for ProductCategoryID");
		String sQuery = "select RECORD_ID from NG_PRODUCT_CATEGORY_MASTER Where PRODUCT_CATEGORY=N'" + Source + "'";

		ArrayList getIDArray = formObject.getNGDataFromDataSource(sQuery, 1);
		String getIDString = (getIDArray.get(0)).toString();
		String getIDString1 = getIDString.substring((getIDString.indexOf("[") + 1), (getIDString.indexOf("]")));

		int valInt = Integer.parseInt(getIDString1);
		//////// //System.out.println("satish ProductCategoryID @@" + valInt);
		return valInt;
	}

	/********************** End CR21 by satish *****************************/
	// satish
	/********************** CR18### *****************************/
	void Validate_RM_Name(String pEventName, String pControlName, String pControlValue, String pReserved) {

		// ============= RM ID Validation at ====================
		//////// //System.out.println("RM ID Validation:");
		String sResult = "";
		String lstrActivityName = formObject.getWFActivityName();
		String sRM_Name_Field = formObject.getNGValue(pControlName);
		//////// //System.out.println("sandeep:sCPI_RM_Name: " +
		//////// sRM_Name_Field);
		String sRM_ID = formObject.getNGValue("CPI_RM_ID");
		String sCPI_RM_ID = "";
		// satish
		if (lstrActivityName.equalsIgnoreCase("CO_insurance")) {
			sCPI_RM_ID = "CPI_RM_ID";
		}
		// satish
		//////// //System.out.println("sRM_Name_Field:: " + sRM_Name_Field);
		//////// //System.out.println("sRM_ID_Field:: " + sRM_ID);
		if (formObject.getNGValue(pControlName).equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "Please fill RM Name.");
			formObject.NGFocus(sRM_Name_Field);
		} else {
			// ============= Check RM User in the OmniFlow ====================
			String sQuery = "SELECT count(1) FROM PDBUSER where USERNAME='" + sRM_ID + "'";
			//////// //System.out.println("sandeep:CO Insurance:" + sQuery);
			ArrayList getUser = formObject.getNGDataFromDataSource(sQuery, 1);
			String s_RMUser = (getUser.get(0)).toString();
			s_RMUser = s_RMUser.substring(s_RMUser.indexOf("[") + 1, s_RMUser.indexOf("]"));
			//////// //System.out.println("s_RMUser: " + s_RMUser);
			int iRMValue = Integer.parseInt(s_RMUser);
			//////// //System.out.println("iRMValue: " + iRMValue);

			// *********** Checking RM USer Exist status ****************

			if (iRMValue > 0) {
				// ************* RM ID Locked Status ***************
				sQuery = "SELECT count(1) FROM ng_rm_master where EMP_CODE='" + sRM_ID + "'";
				//////// //System.out.println("sandeep :CO Insurance:" +
				//////// sQuery);
				ArrayList getReason = formObject.getNGDataFromDataSource(sQuery, 1);
				String s_Field_Value = (getReason.get(0)).toString();
				s_Field_Value = s_Field_Value.substring(s_Field_Value.indexOf("[") + 1, s_Field_Value.indexOf("]"));
				//////// //System.out.println("s_Field_Value: " +
				//////// s_Field_Value);
				int iValue = Integer.parseInt(s_Field_Value);
				//////// //System.out.println("iValue: " + iValue);
				// *********** Checking RM USer Exist status ****************
				if (iValue > 0) {

					if (!lstrActivityName.equalsIgnoreCase("RM_Clarification")) {
						//////// //System.out.println("RM ID Found:");
						sQuery = "SELECT useralive FROM PDBUSER  WHERE USERNAME ='" + sRM_ID + "'";

						// *********** Checking RM Locked status
						// ****************
						//////// //System.out.println("sQuery: " + sQuery);
						ArrayList getRMLockedStatus = formObject.getNGDataFromDataSource(sQuery, 1);
						//////// //System.out.println("getRMLockedStatussize():
						//////// " + getRMLockedStatus.size());
						String s_Value = (getRMLockedStatus.get(0)).toString();
						s_Value = s_Value.substring(s_Value.indexOf("[") + 1, s_Value.indexOf("]"));
						//////// //System.out.println("s_Value:PP " + s_Value);

						//////// //System.out.println("RM ID Found:");
						sQuery = "SELECT USERLOCKED FROM USERSECURITY WHERE USERINDEX = (SELECT USERINDEX FROM PDBUSER WHERE USERNAME ='"
								+ sRM_ID + "')";
						// *********** Checking RM Locked status
						// ****************
						//////// //System.out.println("sQuery: " + sQuery);
						getRMLockedStatus = formObject.getNGDataFromDataSource(sQuery, 1);
						//////// //System.out.println("getRMLockedStatussize():
						//////// " + getRMLockedStatus.size());
						String s_Value1 = (getRMLockedStatus.get(0)).toString();
						s_Value1 = s_Value1.substring(s_Value1.indexOf("[") + 1, s_Value1.indexOf("]"));
						//////// //System.out.println("s_Value:PP " + s_Value1);

						if ((s_Value.equalsIgnoreCase("N")) && (s_Value1.equalsIgnoreCase("Y"))) {

							//////// //System.out.println("RM ID Found but is
							//////// Inactive:");
							JOptionPane.showMessageDialog(null, "Specified RM ID is Inactive and Locked.");
							formObject.NGFocus(sRM_Name_Field);
						} else if (s_Value.equalsIgnoreCase("N")) {
							//////// //System.out.println("RM ID Found but is
							//////// Inactive:");
							JOptionPane.showMessageDialog(null, "Specified RM ID is Inactive.");
							formObject.NGFocus(sRM_Name_Field);

						} else if (s_Value1.equalsIgnoreCase("Y")) {
							//////// //System.out.println("RM ID Found but is
							//////// Locked:");
							JOptionPane.showMessageDialog(null, "Specified RM ID is Locked.");
							formObject.NGFocus(sRM_Name_Field);

						}
						// *********** End of Checking RM Locked status
						// ****************
					}
				} else {
					//////// //System.out.println("RM ID Not Found:");
					JOptionPane.showMessageDialog(null, "RM ID does not exist in Master.");
					formObject.NGFocus(sRM_Name_Field);

				}
			} else {
				//////// //System.out.println("RM ID Not Found:");
				JOptionPane.showMessageDialog(null, "RM ID does not exist in OmniFlow System.");
				formObject.NGFocus(sRM_Name_Field);
			}
			formObject.NGFocus(sRM_Name_Field);
		}
		// ============= End Check RM User in the OmniFlow ====================
	}

	/********************** End CR18### *****************************/// satish
	private void SaveEndFieid() {
		formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
		formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
		formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
		formObject.setNGValue("CPI_q_ILLocation", formObject.getNGValue("CPI_IL_LOCATION"));
	}

	/********************** CR18### *****************************/
	// satish
	private void CoInsValidation() {
		String sActivityName1 = formObject.getWFActivityName();
		//////// //System.out.println("Inside CO Ins validation$$");
		//////// //System.out.println("CPI_Process_Type : " +
		//////// formObject.getNGValue("CPI_Process_Type"));
		formObject.setNGLocked("CPI_RM_NAME", false);
		formObject.setNGLocked("CPI_RM_ID", false);
		formObject.setNGLocked("CPI_Customer_NAME", false);
		formObject.setNGLocked("CPI_Customer_ID", false);// PID_CPI process
															// changes
		formObject.setNGLocked("CPI_NAME_OF_LEADER", false);
		formObject.setNGLocked("CPI_PERCENTAGE_SHARE", false);
		formObject.setNGLocked("CPI_TOTAL_PREMIUM", false);
		formObject.setNGEnable("CPI_RISK_INSPECTION_DATE", false);
		formObject.setNGEnable("CPI_RISK_EXPIRY_DATE", false);
		formObject.setNGLocked("CPI_LEADERS_POLICY_NO", false);
		formObject.setNGLocked("CPI_PRODUCT_NAME", false);
		formObject.setNGLocked("CPI_LOCATION_OF_RISK", false);
		formObject.setNGEnable("CPI_Product_Type", false);
		formObject.setNGLocked("CPI_Product_Type", false);
		formObject.setNGEnable("CPI_PRODUCT_CATEGORY", false);
		formObject.setNGLocked("CPI_IL_LOCATION", false);

		if ((sActivityName1.equalsIgnoreCase("RM_Green_File")) || (sActivityName1.equalsIgnoreCase("Endorsement"))) {
			//////// //System.out.println("CoInsValidation called for End and
			//////// CPI .");
			formObject.setNGVisible("Frame back_Coins", true);
			formObject.setNGVisible("Datawashing_Route_To", false);
			formObject.setNGVisible("Frame LEADER URN NUMBER", false);// CR-OMCPI-1314-04
																		// URN
																		// No
			if (sActivityName1.equalsIgnoreCase("RM_Green_File")) {
				/***************************
				 * PID-CPI process changes
				 ***************************/
				// formObject.setNGControlTop("Frame back_Coins", 832);
				// formObject.setNGControlTop("Frame3", 919);
				// formObject.setNGControlTop("Frame back_Coins", 907);
				// formObject.setNGControlTop("Frame3", 994);Frame_SPNAMES
				formObject.setNGControlTop("Frame_PaymentGrid", 1025);// (907+65)+180
																		// CR-8001-61339
																		// URN
																		// Normal
																		// Priority
																		// //(65+960)+180
																		// CPI-
																		// CR-8001-59268(FlapPrint)
																		// CR
				/*
				 * formObject.setNGControlTop("Frame_SPNAMES", 907); //907+150
				 * formObject.setNGControlTop("Frame back_Coins", 1057);
				 * formObject.setNGControlTop("Frame3", 1134);
				 */
				formObject.setNGControlTop("Frame_SPNAMES", 1205); // 1152+150
																	// //1205+150
																	// CPI-
																	// CR-8001-59268(FlapPrint)
																	// CR
				formObject.setNGControlTop("Frame back_Coins", 1355);// 1302+77
																		// //1355+77
																		// CPI-
																		// CR-8001-59268(FlapPrint)
																		// CR
				formObject.setNGControlTop("Frame3", 1432);
				formObject.setNGLocked("Frame_SPNAMES", false);
				/***********************
				 * End PID-CPI process changes
				 ***************************/
			} else {
				/***************************
				 * PID-CPI process changes
				 ***************************/
				// formObject.setNGControlTop("Frame back_Coins", 993);
				// formObject.setNGControlTop("Frame3", 1080);
				/*
				 * formObject.setNGControlTop("Frame_SPNAMES", 1073); //1073+150
				 * formObject.setNGControlTop("Frame back_Coins",
				 * 1223);//1223+87 formObject.setNGControlTop("Frame3", 1310);
				 */
				formObject.setNGControlTop("Frame_PaymentGrid", 1073);// 1073+180
				formObject.setNGControlTop("Frame_SPNAMES", 1253); // 1253+150
				formObject.setNGControlTop("Frame back_Coins", 1503);// 1503+87
				formObject.setNGControlTop("Frame3", 1590);
				formObject.setNGLocked("Frame_SPNAMES", false);
				/***********************
				 * End PID-CPI process changes
				 ***************************/
			}
			formObject.NGClear("CPI_CO_INS_ROUTE_TO_BACK");
			formObject.NGAddItem("CPI_CO_INS_ROUTE_TO_BACK", "CO Insurance RM");
			formObject.setNGListIndex("CPI_CO_INS_ROUTE_TO_BACK", 0);
			formObject.setNGLocked("CPI_RM_NAME", false);
			formObject.setNGLocked("CPI_RM_ID", false);
			formObject.setNGEnable("CPI_Product_Type", false);
			formObject.setNGLocked("CPI_Product_Type", false);
			formObject.setNGLocked("CPI_PRODUCT_NAME", false);
			/*******************************
			 * CR 44 by satish
			 ****************************/
			// Commenting following condition for CR 44
			// if(sActivityName1.equalsIgnoreCase("RM_Green_File"))
			// {
			formObject.setNGValue("CPI_coINSURANCE", "Follower");
			formObject.setNGEnable("CPI_COINSURANCE", false);
			formObject.setNGLocked("CPI_COINSURANCE", false);
			// }
			/****************************
			 * end CR 44 by satish
			 ***************************/
			formObject.setNGValue("CPI_IL_LOCATION", "");
		}

		if (!(sActivityName1.equalsIgnoreCase("Work Introduction1"))
				&& !(sActivityName1.equalsIgnoreCase("Co_insurance"))
				&& !(sActivityName1.equalsIgnoreCase("Co_insurance_RM"))
				&& !(sActivityName1.equalsIgnoreCase("RM_Green_File"))
				&& !(sActivityName1.equalsIgnoreCase("Endorsement"))) {
			//////// //System.out.println("inside sandy%%");
			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Corporate Policy Insurance")) {
				//////// //System.out.println("inside Co Ins Validation $$$");
				formObject.setNGLocked("CPI_Product_Type", false);
				formObject.setNGLocked("end_Product_Type", false);
				formObject.setNGValue("CORP_LOCATION_OF_RISK", formObject.getNGValue("CPI_LOCATION_OF_RISK"));
				formObject.setNGLocked("Corp_PRODUCT_NAME", false);
				formObject.setNGLocked("CORP_RM_NAME", false);
				formObject.setNGValue("CORP_RISK_EXPIRY_DATE", formObject.getNGValue("CPI_RISK_EXPIRY_DATE"));
				//////// //System.out.println("exit CO Ins validation");
			}

			if (formObject.getNGValue("CPI_Process_Type").equalsIgnoreCase("Endorsement")) {
				//////// //System.out.println("inside Co Ins Validation $$$");
				formObject.setNGLocked("End_RM_NAME", false);
				formObject.setNGLocked("end_Product_Type", false);
				formObject.setNGLocked("CPI_PRODUCT_TYPE", false);
				formObject.setNGLocked("end_PRODUCT_NAME", false);
				formObject.setNGValue("END_LOCATION_OF_RISK", formObject.getNGValue("CPI_LOCATION_OF_RISK"));
				formObject.setNGValue("END_LEADERS_POLICY_NO", formObject.getNGValue("CPI_LEADERS_POLICY_NO"));
				formObject.setNGValue("END_PERCENTAGE_SHARE", formObject.getNGValue("CPI_PERCENTAGE_SHARE"));
				/*******************************
				 * CR 44 by satish
				 ****************************/
				// commenting following fields as they are deleted from
				// Endorsement form
				/*
				 * formObject.setNGValue("END_RISK_INSPECTION_DATE",formObject.
				 * getNGValue("CPI_RISK_INSPECTION_DATE"));
				 * formObject.setNGValue("END_RISK_EXPIRY_DATE",formObject.
				 * getNGValue("CPI_RISK_EXPIRY_DATE"));
				 */
				/****************************
				 * end CR 44 by satish
				 ***************************/
				formObject.setNGValue("END_NAME_OF_LEADER", formObject.getNGValue("CPI_NAME_OF_LEADER"));
				//////// //System.out.println("exit CO Ins validation");
			}
		}
	}
	// satish

	/********************** End CR18### *****************************/
	private void QuoteComboVal() {
		//////// //System.out.println("inside quoue validation sandeep@@");
		String sActivityName1 = formObject.getWFActivityName();

		// Corp_moDE_OF_PAYMENT
		String sQuery = "Cheque!DD!NA!CD!Fund Transfer!BG!Adjustment!";
		String sQuery1 = "CHEQUE!DD!NA!CD!FUND TRANSFERT!BG!ADJUSTMENT!";

		String mode_value = formObject.getNGValue("CPI_moDE_OF_PAYMENT");
		/***************************
		 * PID-CPI process changes
		 ***************************/
		if (sQuery1.indexOf(mode_value.toUpperCase()) >= 0) {
			//////// //System.out.println("exception");
			int a = sQuery1.indexOf(mode_value.toUpperCase());
			int b = sQuery1.indexOf("!", a);

			String corVal = sQuery.substring(a, b);
			//////// //System.out.println("sandeep java" + sQuery.substring(a,
			//////// b));
			formObject.setNGValue("CPI_moDE_OF_PAYMENT", corVal);

		}

		/*
		 * if (sActivityName1.equalsIgnoreCase("RM_Green_File")) {
		 * 
		 * 
		 * String value = formObject.getNGValue("CPI_moDE_OF_PAYMENT"); if
		 * (sQuery1.indexOf(value.toUpperCase()) >= 0) { ////////
		 * //System.out.println("exception"); int a =
		 * sQuery1.indexOf(value.toUpperCase()); int b = sQuery1.indexOf("!",
		 * a);
		 * 
		 * String corVal = sQuery.substring(a, b); ////////
		 * //System.out.println("sandeep java" + sQuery.substring(a, b));
		 * formObject.setNGValue("CPI_moDE_OF_PAYMENT", corVal);
		 * 
		 * } } else { String value =
		 * formObject.getNGValue("Corp_moDE_OF_PAYMENT"); if
		 * (sQuery1.indexOf(value.toUpperCase()) >= 0) { ////////
		 * //System.out.println("exception"); int a =
		 * sQuery1.indexOf(value.toUpperCase()); int b = sQuery1.indexOf("!",
		 * a);
		 * 
		 * String corVal = sQuery.substring(a, b); ////////
		 * //System.out.println("sandeep java" + sQuery.substring(a, b));
		 * formObject.setNGValue("Corp_moDE_OF_PAYMENT", corVal); } }
		 */
		/***********************
		 * End PID-CPI process changes
		 ***************************/
		sQuery = "Direct!Agent!Broker!";
		sQuery1 = "DIRECT!AGENT!BROKER!";

		String value = formObject.getNGValue("CPI_buSINESS_TYPE");
		//////// //System.out.println("value" + value);
		//////// //System.out.println("value" + value);
		if (sQuery1.indexOf(value.toUpperCase()) >= 0) {
			//////// //System.out.println("exception");
			int a = sQuery1.indexOf(value.toUpperCase());
			int b = sQuery1.indexOf("!", a);

			String corVal = sQuery.substring(a, b);
			//////// //System.out.println("sandeep java" + sQuery.substring(a,
			//////// b));
			formObject.setNGValue("CPI_buSINESS_TYPE", corVal);
		}

		// CPI_coINSURANCE
		sQuery = "No Co-Insurance!Leader!Follower!";
		sQuery1 = "NO CO-INSURANCE!LEADER!FOLLOWER!";
		value = formObject.getNGValue("CPI_coINSURANCE");
		if (sQuery1.indexOf(value.toUpperCase()) >= 0) {
			//////// //System.out.println("exception");
			int a = sQuery1.indexOf(value.toUpperCase());
			int b = sQuery1.indexOf("!", a);

			String corVal = sQuery.substring(a, b);
			//////// //System.out.println("sandeep java" + sQuery.substring(a,
			//////// b));
			formObject.setNGValue("CPI_coINSURANCE", corVal);
		}

		// CPI_clIENT_INFORMATION
		sQuery = "Others!HNI!";
		sQuery1 = "OTHERS!HNI!";
		value = formObject.getNGValue("CPI_clIENT_INFORMATION");
		//////// //System.out.println("value" + value);
		if (sQuery1.indexOf(value.toUpperCase()) >= 0) {
			//////// //System.out.println("exception");
			int a = sQuery1.indexOf(value.toUpperCase());
			int b = sQuery1.indexOf("!", a);

			String corVal = sQuery.substring(a, b);
			//////// //System.out.println("sandeep java" + sQuery.substring(a,
			//////// b));
			formObject.setNGValue("CPI_clIENT_INFORMATION", corVal);
		}
		// CPI_Transaction_type
		sQuery = "New Client!New From Exisiting Client!Renewal!";
		sQuery1 = "NEW CLIENT!NEW FROM EXISITING CLIENT!RENEWAL!";
		value = formObject.getNGValue("CPI_Transaction_type");
		//////// //System.out.println("value" + value);
		if (sQuery1.indexOf(value.toUpperCase()) >= 0) {
			//////// //System.out.println("exception");
			int a = sQuery1.indexOf(value.toUpperCase());
			int b = sQuery1.indexOf("!", a);

			String corVal = sQuery.substring(a, b);
			//////// //System.out.println("sandeep java" + sQuery.substring(a,
			//////// b));
			formObject.setNGValue("CPI_Transaction_type", corVal);
		}
	}

	private void QuoteRMGreenClr() {
		if (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("--Select--")
				|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("")
				|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Direct")) {
			formObject.setNGValue("CPI_NAME_OF_BROKER_AGENT", "");
			formObject.setNGValue("CPI_PERCENTAGE_OF_COMMISION", "");
			formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", false);
			formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", false);
		} else if (formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("Agent")
				|| formObject.getNGValue("CPI_BUSINESS_TYPE").equalsIgnoreCase("broker")) {
			formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", true);
			formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", true);
		}

		if ((formObject.getWFActivityName()).equalsIgnoreCase("RM_Green_File")) {
			//////// //System.out.println("Insdie WWWWW");
			formObject.setNGLocked("CPI_baNK_NAME_CD_NAME", true);
			formObject.setNGEnable("CPI_baNK_NAME_CD_NAME", true);

			formObject.setNGEnable("CPI_inSTRUMENT_DATE", true);

			formObject.setNGLocked("CPI_boOKING_TYPE", true);
			formObject.setNGEnable("CPI_boOKING_TYPE", true);

			formObject.setNGEnable("CPI_naME_OF_BROKER_AGENT", true);
			formObject.setNGLocked("CPI_naME_OF_BROKER_AGENT", false);

			/***************************
			 * PID-CPI process changes
			 ***************************/
			formObject.setNGEnable("Frame_PaymentGrid", true);
			formObject.setNGLocked("Frame_PaymentGrid", true);
			formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", false);
			formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
			formObject.setNGEnable("CPI_moDE_OF_PAYMENT", true);
			formObject.setNGLocked("CPI_moDE_OF_PAYMENT", false);
			/***********************
			 * End PID-CPI process changes
			 ***************************/

			/****************
			 * Start CR-8001-87420 Green File Digitization
			 ********************/
			// //System.out.println("enabling fields for rm_greenfile");
			formObject.setNGEnable("CPI_NAME_OF_BROKER_AGENT", true);
			formObject.setNGLocked("CPI_NAME_OF_BROKER_AGENT", true);
			formObject.setNGEnable("CPI_PERCENTAGE_OF_COMMISION", true);
			formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", true);
			formObject.setNGEnable("CPI_CUSTOMER_NAME", true);
			formObject.setNGLocked("CPI_CUSTOMER_NAME", true);
			formObject.setNGEnable("CPI_CUSTOMER_ID", true);
			formObject.setNGLocked("CPI_CUSTOMER_ID", true);
			formObject.setNGEnable("CPI_PERCENTAGE_OF_COMMISION", true);
			formObject.setNGLocked("CPI_PERCENTAGE_OF_COMMISION", true);
			formObject.setNGLocked("CPI_RISK_INSPECTION_DATE", true);
			formObject.setNGEnable("CPI_RISK_INSPECTION_DATE", true);
			/****************
			 * End CR-8001-87420 Green File Digitization
			 ********************/
			formObject.setNGLocked("CPI_inST_NO_CD_NO_DEP_SLIP_NO", true);
			formObject.setNGEnable("CPI_inST_NO_CD_NO_DEP_SLIP_NO", true);

			formObject.setNGEnable("CPI_BUSINESS_TYPE", true);// CR-8001-87420
																// Green File
																// Digitization
			formObject.setNGEnable("CPI_CLIENT_INFORMATION", true);// CR-8001-87420
																	// Green
																	// File
																	// Digitization
			formObject.setNGEnable("CPI_TRANSACTION_TYPE", false);
			formObject.setNGEnable("CPI_COINSURANCE", false);
			formObject.setNGEnable("CPI_RI_INWARD", false);
			formObject.setNGLocked("CPI_PERCENTAGE_SHARE", true);// CR-8001-87420
																	// Green
																	// File
																	// Digitization
		}
	}

	/*******************************
	 * CR 32 by satish
	 ********************************/
	private boolean duplicateEndNo(String d_endno) {
		int countValue = 0;
		try {
			//////// //System.out.println("Inside duplicateEndNo: ");
			//////// //System.out.println("ENDORSEMENT_NO: " + d_endno);
			String c_ProcessId = xmlParserGenData.getValueOf("ProcessInstanceId");
			String sQuery = "select wi_name from ng_cpi_ext_table where ENDORSEMENT_NO ='" + d_endno
					+ "' and current_wrk_step!='Discard'";
			//////// //System.out.println("duplicateEndNo sQuery:" + sQuery);
			ArrayList getPid = formObject.getNGDataFromDataSource(sQuery, 1);
			if (getPid != null) {
				for (int i = 0; i < getPid.size(); i++) {
					String s_pid = (getPid.get(i)).toString();
					s_pid = s_pid.substring((s_pid.indexOf("[") + 1), (s_pid.indexOf("]")));
					// System.out.println("wi_name ::" + i + "\t" + s_pid);
					if (!s_pid.equalsIgnoreCase(c_ProcessId)) {
						++countValue;
					}
				}
			}
			// System.out.println("countValue: " + countValue);
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			// System.out.println("duplicateEndNo nex bError : " + bError);
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			// System.out.println("duplicateEndNo ex bError : " + bError);
		}
		if (countValue > 0) {
			return true;
		} else {
			return false;
		}
	}

	/*
	 * private int maxEndNo(String m_endno) { int maxValue=0; try { ////////
	 * //System.out.println("Inside maxEndNo: "); String c_ProcessId =
	 * xmlParserGenData.getValueOf("ProcessInstanceId"); ////////
	 * //System.out.println("ProcessInstanceId: "+ c_ProcessId); ////////
	 * //System.out.println("ENDORSEMENT_NO : "+m_endno); String
	 * s_endno=m_endno.substring(0,m_endno.lastIndexOf("/")+1); ////////
	 * //System.out.println("s_endno : "+s_endno); String
	 * sQuery="select max(nENDORSEMENT_NO) from(select wi_name,ENDORSEMENT_NO,substr(ENDORSEMENT_NO,INSTR(ENDORSEMENT_NO, '/',-1 , 1)+1,3) nENDORSEMENT_NO from ng_cpi_ext_table where ENDORSEMENT_NO like '"
	 * +s_endno+"%' and wi_name!='"+c_ProcessId+"')"; ////////
	 * //System.out.println("maxEndNo Query:"+sQuery); ArrayList
	 * getMax=formObject.getNGDataFromDataSource(sQuery,1); String
	 * s_max=(getMax.get(0)).toString();
	 * s_max=s_max.substring(s_max.indexOf("[")+1,s_max.indexOf("]")); ////////
	 * //System.out.println("s_max: "+s_max); if(!s_max.equalsIgnoreCase("")) {
	 * maxValue = Integer.parseInt(s_max); ////////
	 * //System.out.println("maxValue: "+maxValue); } else return maxValue; }
	 * catch(NullPointerException nex) { nex.printStackTrace(); bError=true;
	 * //////// //System.out.println("maxEndNo nex bError : "+bError); }
	 * catch(Exception ex) { ex.printStackTrace(); bError=true; ////////
	 * //System.out.println("maxEndNo ex bError : "+bError); } return maxValue;
	 * }
	 */
	/*******************************
	 * End of CR 32
	 ***********************************/
	/*****************************
	 * CR 28 by satish
	 *****************************/
	private String getAgentStatus(String a_name) {
		String a_status = "";
		try {
			//////// //System.out.println("Inside getAgentStatus: ");
			//////// //System.out.println("Agent Name: " + a_name);
			String sQuery = "select IBANKAGENT  from ng_cpi_agent_master where UPPER(AGENT_NAME)=UPPER(N'" + a_name
					+ "')";
			//////// //System.out.println("iBank Query:" + sQuery);
			ArrayList getAgent = formObject.getNGDataFromDataSource(sQuery, 1);
			if (getAgent != null) {
				a_status = (getAgent.get(0)).toString();
				a_status = a_status.substring(a_status.indexOf("[") + 1, a_status.indexOf("]"));
				//////// //System.out.println("iBank Agent status:" + a_status);
			} else {
				a_status = "N";
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			//////// //System.out.println("getAgentStatus nex bError : " +
			//////// bError);
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			//////// //System.out.println("getAgentStatus ex bError : " +
			//////// bError);
		}
		return a_status;
	}

	/***************************
	 * End CR 28 by satish
	 ***************************/
	private void setBbgKrg() {
		//////// //System.out.println("Validation CR 28: Inside setBbgKrg");
		if (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("")) {
			bBGKRGID = 0;
		}
		if ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
				|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG"))
				|| (formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000")
						|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000"))) // CR-8001-87420
																											// Green
																											// File
																											// Digitization
		{
			bBGKRGID = BBGKRGID(formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL"),
					formObject.getNGValue("CPI_SUB_VERTICAL_CODE")); // CR-8001-87420
																		// Green
																		// File
																		// Digitization
		} else {
			bBGKRGID = 0;
		}
		if ((formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
				|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KEY RELATIONSHIP GROUP")
				|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG"))
				|| (formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000")
						|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000"))) // CR-8001-87420
																											// Green
																											// File
																											// Digitization
		{
			// bBGKRGID=BBGKRGID(formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL"));
			if (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")) {
				//////// //System.out.println("Verma 1 KRG ");
				formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_ID", true);
				formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", true);
				formObject.setNGEnable("CPI_SOURCE_NAME", true);
				//////// //System.out.println("SK Quote SYS ID: " +
				//////// formObject.getNGValue("CPI_quote_SYS_ID"));
				formObject.setNGEnable("CPI_CHANNEL_NAME", false);
				formObject.setNGEnable("CPI_BRANCH_NAME", false);
				// //System.out.println("Inside if 1 locked false3:");
				formObject.setNGLocked("CPI_SOURCE_NAME", false);
				formObject.setNGLocked("CPI_CHANNEL_NAME", false);
				formObject.setNGLocked("CPI_BRANCH_NAME", false);
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", "");
				formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", false);
				formObject.setNGValue("CPI_INFRA_COMMISSION", "");
				formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
				/***************************
				 * PID-CPI process changes
				 ***************************/
				formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", true);
				formObject.setNGLocked("CPI_CIF_ID", true);
				/***********************
				 * End PID-CPI process changes
				 ***************************/
			}
			if (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")) {
				//////// //System.out.println("Verma 1 BBG ");
				formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_ID", true);
				formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", true);
				formObject.setNGEnable("CPI_SOURCE_NAME", true);
				formObject.setNGEnable("CPI_CHANNEL_NAME", true);
				formObject.setNGEnable("CPI_BRANCH_NAME", true);
				// //System.out.println("Inside if 1 locked false4:");
				formObject.setNGLocked("CPI_SOURCE_NAME", false);
				formObject.setNGLocked("CPI_CHANNEL_NAME", false);
				formObject.setNGLocked("CPI_BRANCH_NAME", false);
				formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", "");
				formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", false);
				formObject.setNGValue("CPI_INFRA_COMMISSION", "");
				formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
				/***************************
				 * PID-CPI process changes
				 ***************************/
				formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", true);
				formObject.setNGLocked("CPI_CIF_ID", true);
				/***********************
				 * End PID-CPI process changes
				 ***************************/
			}
		} else {
			//////// //System.out.println("Disabling CR 28 valdation: ");
			formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_ID", "");
			formObject.setNGValue("CPI_SOURCE_NAME", "");
			formObject.setNGValue("CPI_CHANNEL_NAME", "");
			formObject.setNGValue("CPI_BRANCH_NAME", "");
			// //System.out.println("Inside if 1 enable false5:");
			formObject.setNGEnable("CPI_SOURCE_NAME", false);
			formObject.setNGLocked("CPI_SOURCE_NAME", false);
			formObject.setNGEnable("CPI_BRANCH_NAME", false);
			formObject.setNGLocked("CPI_BRANCH_NAME", false);
			formObject.setNGEnable("CPI_CHANNEL_NAME", false);
			formObject.setNGLocked("CPI_CHANNEL_NAME", false);
			formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", false);
			formObject.setNGValue("CPI_CHANNEL_EMPLOYEE_NAME", "");
			formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", false);
			formObject.setNGValue("CPI_INFRA_COMMISSION", "");
			formObject.setNGLocked("CPI_INFRA_COMMISSION", false);
			/***************************
			 * PID-CPI process changes
			 ***************************/
			formObject.setNGValue("CPI_PRIVILEGE_BANKER_CODE", "");
			formObject.setNGLocked("CPI_PRIVILEGE_BANKER_CODE", false);
			formObject.setNGValue("CPI_CIF_ID", "");
			formObject.setNGLocked("CPI_CIF_ID", false);
			/***********************
			 * End PID-CPI process changes
			 ***************************/
		}

		/**********************
		 * Start Omni flow CPI –Channel Employee id – MH V 1.0
		 **********************/

		if ((formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("BA")
				|| formObject.getNGValue("CPI_PRIMARY_VERTICAL_CODE").equalsIgnoreCase("102000000"))
				&& (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KRG")
						|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("KEY RELATIONSHIP GROUP")
						|| formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("BBG")
						|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102006000")
						|| formObject.getNGValue("CPI_SUB_VERTICAL_CODE").equalsIgnoreCase("102008000"))) {
			//////// //System.out.println("Entering in setBbgKrg() To Enable
			//////// CHANNEL_EMPLOYEE_ID/Name Omni flow CPI –Channel Employee
			//////// id – MH V 1.0 : ");
			formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_ID", true);
			formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", true);
			formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_NAME", true);
			formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", true);
			//////// //System.out.println("Exiting in setBbgKrg() To Enable
			//////// CHANNEL_EMPLOYEE_ID/Name Omni flow CPI –Channel Employee
			//////// id – MH V 1.0 : ");
		}

		/**********************
		 * End Omni flow CPI –Channel Employee id – MH V 1.0
		 **********************/

	}

	private void AssignmentValidation() {
		formObject.setNGEnable("CPI_rm_ID", true);
		formObject.setNGLocked("CPI_rm_ID", false);
		formObject.setNGEnable("CPI_rm_NAME", true);
		formObject.setNGLocked("CPI_rm_NAME", false);
		formObject.setNGEnable("CPI_paS", false);
		formObject.setNGLocked("CPI_paS", false);
		formObject.setNGEnable("CPI_tYPE_OF_ENDORSEMENT", false);
		formObject.setNGLocked("CPI_tYPE_OF_ENDORSEMENT", false);
		formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
		formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
		formObject.setNGEnable("CPI_iNTERNAL_ENDORSEMENT_TYPE", false);
		formObject.setNGLocked("CPI_iNTERNAL_ENDORSEMENT_TYPE", false);
		formObject.setNGEnable("CPI_eNDORSEMENT_EFFECTIVE_DATE", false);
		formObject.setNGLocked("CPI_eNDORSEMENT_EFFECTIVE_DATE", false);
		formObject.setNGEnable("CPI_eNDORSEMENT_NO", false);
		formObject.setNGLocked("CPI_eNDORSEMENT_NO", false);
		formObject.setNGEnable("CPI_cuSTOMER_NAME", false);
		formObject.setNGLocked("CPI_cuSTOMER_NAME", false);
		formObject.setNGEnable("CPI_CUSTOMER_ID", false);// PID_CPI process
															// changes
		formObject.setNGLocked("CPI_CUSTOMER_ID", false);// PID_CPI process
															// changes
		formObject.setNGEnable("CPI_prODUCT_TYPE", false);
		formObject.setNGLocked("CPI_prODUCT_TYPE", false);
		formObject.setNGEnable("CPI_prODUCT_NAME", false);
		formObject.setNGLocked("CPI_prODUCT_NAME", false);
		formObject.setNGEnable("CPI_toTAL_PREMIUM", false);
		formObject.setNGLocked("CPI_toTAL_PREMIUM", false);
		formObject.setNGEnable("CPI_CLAIM_NO", false);
		formObject.setNGLocked("CPI_CLAIM_NO", false);
		formObject.setNGEnable("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
		formObject.setNGLocked("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
		formObject.setNGEnable("CPI_prIMARY_VERTICAL", false);
		formObject.setNGLocked("CPI_prIMARY_VERTICAL", false);
		formObject.setNGEnable("CPI_seCONDARY_VERTICAL", false);
		formObject.setNGLocked("CPI_seCONDARY_VERTICAL", false);
		formObject.setNGEnable("CPI_il_LOCATION", false);
		formObject.setNGLocked("CPI_il_LOCATION", false);
		formObject.setNGEnable("CPI_prIMARY_SUB_VERTICAL", false);
		formObject.setNGLocked("CPI_prIMARY_SUB_VERTICAL", false);
		formObject.setNGEnable("CPI_seCONDARY_SUB_VERTICAL", false);
		formObject.setNGLocked("CPI_seCONDARY_SUB_VERTICAL", false);
		formObject.setNGEnable("CPI_clIENT_INFORMATION", false);
		formObject.setNGLocked("CPI_clIENT_INFORMATION", false);
		formObject.setNGEnable("CPI_buSINESS_TYPE", false);
		formObject.setNGLocked("CPI_buSINESS_TYPE", false);
		formObject.setNGEnable("CPI_naME_OF_BROKER_AGENT", false);
		formObject.setNGLocked("CPI_naME_OF_BROKER_AGENT", false);
		/***************************
		 * PID-CPI process changes
		 ***************************/
		formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", false);
		formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
		/***********************
		 * End PID-CPI process changes
		 ***************************/
		formObject.setNGEnable("CPI_moDE_OF_PAYMENT", false);
		formObject.setNGLocked("CPI_moDE_OF_PAYMENT", false);
		formObject.setNGEnable("CPI_coINSURANCE", false);
		formObject.setNGLocked("CPI_coINSURANCE", false);
		formObject.setNGEnable("CPI_leADERS_POLICY_NO", false);
		formObject.setNGLocked("CPI_leADERS_POLICY_NO", false);
		formObject.setNGEnable("CPI_naME_OF_LEADER", false);
		formObject.setNGLocked("CPI_naME_OF_LEADER", false);
		formObject.setNGEnable("CPI_peRCENTAGE_SHARE", false);
		formObject.setNGLocked("CPI_peRCENTAGE_SHARE", false);
		formObject.setNGEnable("CPI_OUR_SHARE_PREMIUM", false);
		formObject.setNGLocked("CPI_OUR_SHARE_PREMIUM", false);
	}

	/**** Start CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension ******/
	private void dwDefualtSet(String sActivityName) {
		String wi_name = xmlParserGenData.getValueOf("ProcessInstanceId");
		String productName = "";
		String productCode = ""; // added by vaibhav for EDW Changes only
									// changes are made in this method
									// (dwDefualtSet) for EDW
		String productName1 = ""; // added by vaibhav for EDW Changes only
									// changes are made in this method
									// (dwDefualtSet) for EDW
		if (sActivityName.equalsIgnoreCase("CPU_Assignment")) {
			//////// //System.out.println("start test===");
			String interId = formObject.getNGValue("CPI_INTERACTIONID");
			//////// //System.out.println("interId===" + interId);

			if (interId != null && !interId.equals("")) {
				String sQuery = "select intmaildate from TRN_InteractionMailInbox where interactionid ='" + interId
						+ "'";
				//////// //System.out.println("intmaildate sQuery===" + sQuery);
				ArrayList listId = formObject.getNGDataFromDataSource(sQuery, 1);

				String intmaildate = "";
				Date date = null;
				String formattedDate = "";
				if (listId != null && listId.size() > 0) {

					String intId = (listId.get(0)).toString();
					// s_CoUser=s_CoUser.substring((s_CoUser.indexOf("[")+1),(s_CoUser.indexOf("]")));
					/*******************
					 * CR 46 CPU DataWashing
					 ********************/
					intmaildate = intId.substring((intId.indexOf("[") + 1), (intId.indexOf("]")));
					// userGroupFlag = s_CoUser.substring((s_CoUser.indexOf(",")
					// + 1), (s_CoUser.indexOf("]")));
					//////// //System.out.println("intmaildate===" +
					// intmaildate);

				}
				if (intmaildate != null && !intmaildate.equalsIgnoreCase("")) {
					try {
						date = dateFormat2.parse(intmaildate);
						//////// //System.out.println("date===" + date);
						if (date != null) {
							formattedDate = dateformat.format(date);
						}
						//////// //System.out.println("formattedDate===" +
						//////// formattedDate);
						formObject.setNGEnable("CPI_CLIENT_MAIL_RECEIVED_DATE", true);
						formObject.setSpecificDateFormat("CPI_CLIENT_MAIL_RECEIVED_DATE", "dd/MM/yyyy");
						formObject.setNGLocked("CPI_CLIENT_MAIL_RECEIVED_DATE", true);
						formObject.setNGValue("CPI_CLIENT_MAIL_RECEIVED_DATE", formattedDate);

						formObject.setNGEnable("CPI_eNDORSEMENT_EFFECTIVE_DATE", true);
						formObject.setSpecificDateFormat("CPI_eNDORSEMENT_EFFECTIVE_DATE", "dd/MM/yyyy");

						// formObject.setNGLocked("CPI_eNDORSEMENT_EFFECTIVE_DATE",
						// true);
						formObject.setNGValue("CPI_eNDORSEMENT_EFFECTIVE_DATE", formattedDate);

						formObject.setNGEnable("CPI_Instrument_Date", true);
						formObject.setSpecificDateFormat("CPI_Instrument_Date", "dd/MM/yyyy");
						formObject.setNGLocked("CPI_Instrument_Date", true);
						formObject.setNGValue("CPI_Instrument_Date", formattedDate);
					} catch (Exception e) {
						e.printStackTrace();
					}

				}

			}

			String queryProd = "SELECT PRODUCT_NAME,IRDACODE FROM (select distinct PRODUCT_NAME,IRDACODE from NG_PRODUCT_MASTER where PRODUCT_TYPE_ID=2 AND PRODUCT_ROUTING = '2' AND irdacode = '4015')";
			//////// //System.out.println("queryProd===" + queryProd);
			ArrayList prodList = formObject.getNGDataFromDataSource(queryProd, 1);
			int size = prodList.size();
			// added by vaibhav for EDW Changes only changes are made in this
			// method (dwDefualtSet) for EDW
			if (prodList != null && prodList.size() > 0) {
				String prodNames = (prodList.get(0)).toString();
				productName = prodNames.substring((prodNames.indexOf("[") + 1), (prodNames.indexOf("]")));
				String productCheck[] = productName.split(",");
				productName1 = productCheck[0];
				productCode = productCheck[1];
			}

			//////// //System.out.println("wi_name===" + wi_name);
			formObject.setNGEnable("CPI_paS", true);
			formObject.setNGLocked("CPI_paS", true);
			formObject.setNGValue("CPI_paS", "Pathfinder");
			formObject.setNGValue("CPI_product_category",
					"Corporate_Endorsement"); /**
												 * CR-8001-85348 : Corporate
												 * product endorsement (Marine
												 * Modification) : Vaibhav
												 **/

			formObject.setNGEnable("CPI_tYPE_OF_ENDORSEMENT", true);
			formObject.setNGLocked("CPI_tYPE_OF_ENDORSEMENT", true);
			formObject.setNGValue("CPI_tYPE_OF_ENDORSEMENT", "External endorsement");

			formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
			formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", true);
			formObject.setNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE", "Non Nil Endorsement");

			formObject.setNGEnable("CPI_prODUCT_TYPE", true);
			formObject.setNGLocked("CPI_prODUCT_TYPE", true);
			formObject.setNGValue("CPI_prODUCT_TYPE", "NON-OTC");

			formObject.setNGEnable("CPI_prODUCT_NAME", true);
			formObject.setNGLocked("CPI_prODUCT_NAME", false);
			formObject.setNGValue("CPI_prODUCT_NAME", productName1); // added by
																		// vaibhav
																		// for
																		// EDW
																		// Changes
																		// only
																		// changes
																		// are
																		// made
																		// in
																		// this
																		// method
																		// (dwDefualtSet)
																		// for
																		// EDW
			formObject.setNGValue("CPI_PRODUCT_IRDACODE", productCode); // added
																		// by
																		// vaibhav
																		// for
																		// EDW
																		// Changes
																		// only
																		// changes
																		// are
																		// made
																		// in
																		// this
																		// method
																		// (dwDefualtSet)
																		// for
																		// EDW

			/***************************
			 * PID-CPI process changes
			 ***************************/
			formObject.setNGEnable("CPI_PID_PAYMENT_TYPE", true);
			formObject.setNGLocked("CPI_PID_PAYMENT_TYPE", false);
			formObject.setNGValue("CPI_PID_PAYMENT_TYPE", "No");
			/***********************
			 * End PID-CPI process changes
			 ***************************/

			formObject.setNGEnable("CPI_moDE_OF_PAYMENT", true);
			formObject.setNGLocked("CPI_moDE_OF_PAYMENT", false);
			formObject.setNGValue("CPI_moDE_OF_PAYMENT", "CD");

			formObject.setNGEnable("CPI_coINSURANCE", true);
			formObject.setNGLocked("CPI_coINSURANCE", true);
			formObject.setNGValue("CPI_coINSURANCE", "No Co-Insurance");

			formObject.setNGEnable("CPI_DMS_NO", true);
			formObject.setNGLocked("CPI_DMS_NO", true);
			formObject.setNGValue("CPI_DMS_NO", wi_name);

		}
		/**** Start CR-8001-70893 Marine CR *******************************/
		else if (sActivityName.equalsIgnoreCase("COPS_Cpu_Assignment")) {
			String intId = formObject.getNGValue("CPI_INTERACTIONID");
			String clientMail = formObject.getNGValue("CPI_CUSTOMER_EMAILID");
			String clientDet = "";
			// //System.out.println("start COPS_Cpu_Assignment
			// Vaibhav:==="+clientMail );
			String queryClient = "SELECT RM_Emp_Id,rm_name,PRIMARY_VERTICAL,PRIMARY_SUB_VERTICAL,IL_LOCATION,BROKER_AGENT_NAME,agent_code FROM (select RM_Emp_Id,rm_name,PRIMARY_VERTICAL,PRIMARY_SUB_VERTICAL,IL_LOCATION,BROKER_AGENT_NAME,agent_code from ng_cpi_client_reg_mst where CLIENT_EMAIL_ID1='"
					+ clientMail + "' or CLIENT_EMAIL_ID2 = '" + clientMail + "' or CLIENT_EMAIL_ID3 = '" + clientMail
					+ "' or CLIENT_EMAIL_ID4 = '" + clientMail + "' or CLIENT_EMAIL_ID5 = '" + clientMail
					+ "' order by client_reg_no desc) where rownum=1 ";
			// //System.out.println("queryClient===" + queryClient);
			ArrayList clientList = formObject.getNGDataFromDataSource(queryClient, 6);
			if (clientList != null && clientList.size() > 0) {
				String clientDetails = (clientList.get(0)).toString();
				clientDet = clientDetails.substring((clientDetails.indexOf("[") + 1), (clientDetails.indexOf("]")));
				String regClientDet[] = clientDet.split(",");

				if (regClientDet.length > 0) {
					formObject.setNGValue("CPI_rm_ID", !regClientDet[0].equals("") ? regClientDet[0] : "");
					formObject.setNGValue("CPI_rm_name", !regClientDet[1].equals("") ? regClientDet[1] : "");
					formObject.setNGValue("CPI_PRIMARY_VERTICAL", !regClientDet[2].equals("") ? regClientDet[2] : "");
					formObject.setNGValue("CPI_PRIMARY_SUB_VERTICAL",
							!regClientDet[3].equals("") ? regClientDet[3] : "");
					formObject.setNGValue("CPI_IL_LOCATION", !regClientDet[4].equals("") ? regClientDet[4] : "");// yogesh
					formObject.setNGValue("CPI_naME_OF_BROKER_AGENT",
							!regClientDet[5].equals("") ? regClientDet[5] : "");// yogesh
					formObject.setNGValue("CPI_agent_code", !regClientDet[6].equals("") ? regClientDet[6] : "");
				}
				// //System.out.println("regClientDet===" +
				// regClientDet.length);
			}
			// //System.out.println("end COPS_Cpu_Assignment==="+clientMail );
		}
		/**** ENd CR-8001-70893 Marine CR *********************************/
	}

	/**** End CR-OMCPI-1314-05 DataWashing - Mail_Management_Extension ********/

	/***************************
	 * PID-CPI process changes
	 ***************************/
	public int duplicateCheck(String FiledName, String PolicyNo) {
		int countValue = 0;
		try {
			//////// //System.out.println("Inside duplicateCheck: ");
			//////// //System.out.println("CPI_POLICY_NO: " + PolicyNo);
			String c_ProcessId = xmlParserGenData.getValueOf("ProcessInstanceId");
			String sQuery = "";
			if (FiledName.equalsIgnoreCase("CPI_POLICY_NO")) {
				sQuery = "select wi_name from ng_cpi_ext_table where POLICY_NO='" + PolicyNo
						+ "' and  current_wrk_step != 'Discard'"; // CR-8001-54702
																	// E-Mail
																	// Filter
			}
			/*************************
			 * CPI PID Additional Points
			 *****************************/
			else if (FiledName.equalsIgnoreCase("CPI_PROPOSAL_NO")) {
				sQuery = "select wi_name from ng_cpi_ext_table where PROPOSAL_NO='" + PolicyNo
						+ "' and  current_wrk_step != 'Discard'"; // CR-8001-54702
																	// E-Mail
																	// Filter
			} else if (FiledName.equals("CPI_QUOTE_NO")) {
				sQuery = "select wi_name from ng_cpi_ext_table where QUOTE_NO='" + PolicyNo
						+ "' and  current_wrk_step != 'Discard'"; // CR-8001-54702
																	// E-Mail
																	// Filter
			}
			/*************************
			 * End CPI PID Additional Points
			 **************************/
			//////// //System.out.println("duplicateCheck sQuery:" + sQuery);
			ArrayList getPid = formObject.getNGDataFromDataSource(sQuery, 1);
			if (getPid != null) {
				for (int i = 0; i < getPid.size(); i++) {
					String s_pid = (getPid.get(i)).toString();
					s_pid = s_pid.substring((s_pid.indexOf("[") + 1), (s_pid.indexOf("]")));
					//////// //System.out.println("wi_name ::" + i + "\t" +
					//////// s_pid);
					if (!s_pid.equalsIgnoreCase(c_ProcessId)) {
						++countValue;
					}
				}
			}
			//////// //System.out.println("duplicate countValue: " +
			//////// countValue);
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			//////// //System.out.println("duplicateCheck nex bError : " +
			//////// bError);
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			//////// //System.out.println("duplicateCheck ex bError : " +
			//////// bError);
		}
		if (countValue > 0)
			return 0;
		else
			return 1;
	}

	public void clearDetails() {
		formObject.setNGValue("CPI_SP_NAME1", "");
		formObject.setNGValue("CPI_SP_CODE1", "");
		formObject.setNGValue("CPI_SP_NAME2", "");
		formObject.setNGValue("CPI_SP_CODE2", "");
		formObject.setNGValue("CPI_SP_NAME3", "");
		formObject.setNGValue("CPI_SP_CODE3", "");
		formObject.setNGValue("CPI_SP_NAME4", "");
		formObject.setNGValue("CPI_SP_CODE4", "");
	}

	public void event_PID_Tagging(String pControlName) // Method used to nullify
														// payment fields
	{
		if (formObject.getNGValue("CPI_PID_PAYMENT_TYPE") != null
				&& formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")) {
			//////// //System.out.println("In Event_PID_Tagging==Yes");
			formObject.setNGValue("CPI_PF_PAYMENT_ID_NO", "");
			formObject.setNGValue("CPI_moDE_OF_PAYMENT", "");
			formObject.setNGValue("CPI_INSTRUMENT_AMOUNT", "");
			formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO", "");
			formObject.setNGValue("CPI_BANK_NAME_CD_NAME", "");
			formObject.setNGValue("CPI_INSTRUMENT_DATE", "");
			formObject.setNGValue("CPI_CDBG_NO", "");
			formObject.setNGValue("CPI_OTHER_PIDNO", "");

			formObject.setNGValue("CPI_PF_PAYMENT_ID_NO2", "");
			formObject.setNGValue("CPI_MODE_OF_PAYMENT2", "");
			formObject.setNGValue("CPI_INSTRUMENT_AMOUNT2", "");
			formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO2", "");
			formObject.setNGValue("CPI_BANK_NAME_CD_NAME2", "");
			formObject.setNGValue("CPI_INSTRUMENT_DATE2", "");

			formObject.setNGValue("CPI_PF_PAYMENT_ID_NO3", "");
			formObject.setNGValue("CPI_MODE_OF_PAYMENT3", "");
			formObject.setNGValue("CPI_INSTRUMENT_AMOUNT3", "");
			formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO3", "");
			formObject.setNGValue("CPI_BANK_NAME_CD_NAME3", "");
			formObject.setNGValue("CPI_INSTRUMENT_DATE3", "");

		}

		else if (formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("No")
				|| formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("")) {
			//////// //System.out.println("In Event_PID_Tagging==No");
			if (pControlName.equalsIgnoreCase("CPI_moDE_OF_PAYMENT")
					&& !formObject.getNGValue("CPI_moDE_OF_PAYMENT").equalsIgnoreCase("")) // 1st
																							// Mode
																							// of
																							// payment
			{
				formObject.setNGValue("CPI_PF_PAYMENT_ID_NO", "");
				// formObject.setNGValue("CPI_moDE_OF_PAYMENT", "");
				formObject.setNGValue("CPI_INSTRUMENT_AMOUNT", "");
				formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO", "");
				formObject.setNGValue("CPI_BANK_NAME_CD_NAME", "");
				formObject.setNGValue("CPI_INSTRUMENT_DATE", "");
				formObject.setNGValue("CPI_CDBG_NO", "");
				formObject.setNGValue("CPI_OTHER_PIDNO", "");
			}

			if (pControlName.equalsIgnoreCase("CPI_MODE_OF_PAYMENT2")
					&& !formObject.getNGValue("CPI_MODE_OF_PAYMENT2").equalsIgnoreCase("")) // 2nd
																							// Mode
																							// of
																							// payment
			{
				formObject.setNGValue("CPI_PF_PAYMENT_ID_NO2", "");
				// formObject.setNGValue("CPI_MODE_OF_PAYMENT2", "");
				formObject.setNGValue("CPI_INSTRUMENT_AMOUNT2", "");
				formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO2", "");
				formObject.setNGValue("CPI_BANK_NAME_CD_NAME2", "");
				formObject.setNGValue("CPI_INSTRUMENT_DATE2", "");
				formObject.setNGValue("CPI_CDBG_NO", "");
				formObject.setNGValue("CPI_OTHER_PIDNO", "");
			}

			if (pControlName.equalsIgnoreCase("CPI_MODE_OF_PAYMENT3")
					&& !formObject.getNGValue("CPI_MODE_OF_PAYMENT3").equalsIgnoreCase("")) // 3rd
																							// Mode
																							// of
																							// payment
			{
				formObject.setNGValue("CPI_PF_PAYMENT_ID_NO3", "");
				// formObject.setNGValue("CPI_MODE_OF_PAYMENT3", "");
				formObject.setNGValue("CPI_INSTRUMENT_AMOUNT3", "");
				formObject.setNGValue("CPI_INST_NO_CD_NO_DEP_SLIP_NO3", "");
				formObject.setNGValue("CPI_BANK_NAME_CD_NAME3", "");
				formObject.setNGValue("CPI_INSTRUMENT_DATE3", "");
				formObject.setNGValue("CPI_CDBG_NO", "");
				formObject.setNGValue("CPI_OTHER_PIDNO", "");
			}

		}

	}

	public void lockUnlockFields(String flag) {
		//////// //System.out.println("lockUnlockFields==" + flag);

		boolean lock_flag = false;

		if (flag.equalsIgnoreCase("Yes")) {
			lock_flag = false; // means lock the fields
			// formObject.setNGEnable("Frame_PaymentGrid", false); //PID_CPI
			// process changes
		} else {
			lock_flag = true; // means unlock the fields
			// formObject.setNGEnable("Frame_PaymentGrid", true); //PID_CPI
			// process changes
		}

		//////// //System.out.println("lock_flag===" + lock_flag);
		formObject.setNGEnable("CPI_PF_PAYMENT_ID_NO", lock_flag);
		formObject.setNGEnable("CPI_MODE_OF_PAYMENT", lock_flag);
		formObject.setNGEnable("CPI_INSTRUMENT_AMOUNT", lock_flag);
		formObject.setNGEnable("CPI_INST_NO_CD_NO_DEP_SLIP_NO", lock_flag);
		formObject.setNGEnable("CPI_BANK_NAME_CD_NAME", lock_flag);
		formObject.setNGEnable("CPI_INSTRUMENT_DATE", lock_flag);

		formObject.setNGEnable("CPI_PF_PAYMENT_ID_NO2", lock_flag);
		formObject.setNGEnable("CPI_MODE_OF_PAYMENT2", lock_flag);
		formObject.setNGEnable("CPI_INSTRUMENT_AMOUNT2", lock_flag);
		formObject.setNGEnable("CPI_INST_NO_CD_NO_DEP_SLIP_NO2", lock_flag);
		formObject.setNGEnable("CPI_BANK_NAME_CD_NAME2", lock_flag);
		formObject.setNGEnable("CPI_INSTRUMENT_DATE2", lock_flag);

		formObject.setNGEnable("CPI_PF_PAYMENT_ID_NO3", lock_flag);
		formObject.setNGEnable("CPI_MODE_OF_PAYMENT3", lock_flag);
		formObject.setNGEnable("CPI_INSTRUMENT_AMOUNT3", lock_flag);
		formObject.setNGEnable("CPI_INST_NO_CD_NO_DEP_SLIP_NO3", lock_flag);
		formObject.setNGEnable("CPI_BANK_NAME_CD_NAME3", lock_flag);
		formObject.setNGEnable("CPI_INSTRUMENT_DATE3", lock_flag);

		/*
		 * formObject.setNGLocked("CPI_PF_PAYMENT_ID_NO",lock_flag);
		 * formObject.setNGLocked("CPI_MODE_OF_PAYMENT", lock_flag);
		 * formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT", lock_flag);
		 * formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO", lock_flag);
		 * formObject.setNGLocked("CPI_BANK_NAME_CD_NAME", lock_flag);
		 * //formObject.setNGLocked("CPI_INSTRUMENT_DATE", lock_flag);
		 * 
		 * formObject.setNGLocked("CPI_PF_PAYMENT_ID_NO2",lock_flag);
		 * formObject.setNGLocked("CPI_MODE_OF_PAYMENT2", lock_flag);
		 * formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT2", lock_flag);
		 * formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO2", lock_flag);
		 * formObject.setNGLocked("CPI_BANK_NAME_CD_NAME2", lock_flag);
		 * //formObject.setNGLocked("CPI_INSTRUMENT_DATE2", lock_flag);
		 * 
		 * formObject.setNGLocked("CPI_PF_PAYMENT_ID_NO3",lock_flag);
		 * formObject.setNGLocked("CPI_MODE_OF_PAYMENT3", lock_flag);
		 * formObject.setNGLocked("CPI_INSTRUMENT_AMOUNT3", lock_flag);
		 * formObject.setNGLocked("CPI_INST_NO_CD_NO_DEP_SLIP_NO3", lock_flag);
		 * formObject.setNGLocked("CPI_BANK_NAME_CD_NAME3", lock_flag);
		 * //formObject.setNGLocked("CPI_INSTRUMENT_DATE3", lock_flag);
		 */
	}

	/*************************
	 * End PID-CPI process changes
	 **************************/

	/**********************
	 * CPI URN CR 8001-61339 Multiple Changes CR
	 ***********************/

	public void exceptionDetails(String currentwrkstp) {

		// JSObject js1 = null;
		// js = formObject.getJSObject();
		str[0] = currentwrkstp;
		//////// //System.out.println("Start Raising Exception At :"+str[0]);
		////////// //System.out.println("Value of js: "+js);
		obj = js.call("setExceptionName_CPI", str);
		//////// //System.out.println("After Raising excep");

	}

	/**********************
	 * End CPI URN CR 8001-61339 Multiple Changes CR
	 ***********************/
	/***********************
	 * Start CR-8001-54702 E-Mail Filter
	 ***************************/
	public String getCoverNoteNo(String policyNo) {
		String covernote_No = "";
		if (policyNo != null && !policyNo.equals("")) {
			String pol[] = policyNo.split("/");

			for (int i = 0; i < pol.length; i++) {
				if (pol[i] != null && pol[i].length() > 6) {
					covernote_No = pol[i];
					break;
				}
			}
		}
		return covernote_No;
	}

	/***********************
	 * End CR-8001-54702 E-Mail Filter
	 ***************************/
	/**** Start CR-8001-70893 Marine CR *******************************/
	public void setAddItems(String controlName, String currentWrkStep) {
		// //System.out.println("controlName called=="+controlName);
		/********** Start Yogesh Marine ******************/
		if (controlName.equalsIgnoreCase("CPI_NETWORK_PARTNER")) {
			formObject.NGAddItem("CPI_NETWORK_PARTNER", "Yes");
			formObject.NGAddItem("CPI_NETWORK_PARTNER", "No");
		}
		if (controlName.equalsIgnoreCase("CPI_RI_Inward")) {
			formObject.NGAddItem("CPI_RI_Inward", "Yes");
			formObject.NGAddItem("CPI_RI_Inward", "No");

		}
		if (controlName.equalsIgnoreCase("CPI_TRANSACTION_TYPE")) {
			formObject.NGAddItem("CPI_Transaction_type", "New Client");
			formObject.NGAddItem("CPI_Transaction_type", "New From Exisiting Client");
			formObject.NGAddItem("CPI_Transaction_type", "Renewal");
			formObject.NGAddItem("CPI_Transaction_type", "Rollover");// CR GREEN
																		// FILE
																		// Digitization
																		// Phase
																		// II
																		// (Yogesh)
		}
		/********** End Yogesh Marine ******************/
		if (controlName.equalsIgnoreCase("CPI_INTERNAL_ENDORSEMENT_TYPE")) {
			formObject.NGAddItem("CPI_INTERNAL_ENDORSEMENT_TYPE", "Nil Endorsement");
		}
		if (controlName.equalsIgnoreCase("CPI_EXTERNAL_ENDORSEMENT_TYPE")) {
			formObject.NGAddItem("CPI_EXTERNAL_ENDORSEMENT_TYPE", "Nil Endorsement");
			formObject.NGAddItem("CPI_EXTERNAL_ENDORSEMENT_TYPE", "Reinstatement Premium");
			formObject.NGAddItem("CPI_EXTERNAL_ENDORSEMENT_TYPE", "Non Nil Endorsement");
		}
		if (controlName.equalsIgnoreCase("CPI_TYPE_OF_ENDORSEMENT")) {
			formObject.NGAddItem("CPI_TYPE_OF_ENDORSEMENT", "External endorsement");
			formObject.NGAddItem("CPI_TYPE_OF_ENDORSEMENT", "Internal Endorsement");
		}

		if (controlName.equalsIgnoreCase("CPI_Withdrawn_Reason")) {
			System.out.println("Inside setAddItem method " + controlName);
			formObject.NGAddItem("CPI_Withdrawn_Reason", "Wrongly in warded");
			formObject.NGAddItem("CPI_Withdrawn_Reason", "Withdrawn due to Customer Request");
			formObject.NGAddItem("CPI_Withdrawn_Reason", "System Issue");
			formObject.NGAddItem("CPI_Withdrawn_Reason", "Cheque  Bounce");
			formObject.NGAddItem("CPI_Withdrawn_Reason", "Re in warded with modified details");
			formObject.NGAddItem("CPI_Withdrawn_Reason", "Others");
		} else if (controlName.equalsIgnoreCase("CPI_BUSINESS_TYPE")) {
			formObject.NGAddItem("CPI_Business_Type", "Direct");
			formObject.NGAddItem("CPI_Business_Type", "Agent");
			formObject.NGAddItem("CPI_Business_Type", "Broker");
			formObject.NGAddItem("CPI_Business_Type", "COB");

		} else if (controlName.equalsIgnoreCase("CPI_PAS")) {
			formObject.NGAddItem("CPI_PAS", "OM");
			formObject.NGAddItem("CPI_PAS", "Premia");
			formObject.NGAddItem("CPI_PAS", "Pathfinder");
		} else if (controlName.equalsIgnoreCase("CPI_CLIENT_INFORMATION")) {
			formObject.NGAddItem("CPI_Client_Information", "Others");
			formObject.NGAddItem("CPI_Client_Information", "HNI");
		} else if (controlName.equalsIgnoreCase("CPI_BOOKING_TYPE")) {
			// //System.out.println("Inside the CPI_BOOKING_TYPE loading Yogesh
			// :");
			formObject.NGAddItem("CPI_Booking_Type", "FINAL");
			formObject.NGAddItem("CPI_Booking_Type", "PROVISIONAL");
			formObject.NGAddItem("CPI_Booking_Type", "ALTERNATE");
		} else if (controlName.equalsIgnoreCase("CPI_COINSURANCE")) {
			formObject.NGAddItem("CPI_CoInsurance", "No Co-Insurance");
			formObject.NGAddItem("CPI_CoInsurance", "Leader");
			formObject.NGAddItem("CPI_CoInsurance", "Follower");
		} else if (controlName.equalsIgnoreCase("CPI_Route_to")) {
			if (currentWrkStep.equalsIgnoreCase("COPS_Policy_Endr")
					|| currentWrkStep.equalsIgnoreCase("COPS_Policy_Print")) {
				formObject.NGAddItem("CPI_Route_to", "RM Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Clarification");
			}
			if (currentWrkStep.equalsIgnoreCase("COPS_Policy_Endr")) {
				formObject.NGAddItem("CPI_Route_to", "UW1 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW2 Clarification");
				formObject.NGAddItem("CPI_Route_to", "UW3 Clarification");
				formObject.NGAddItem("CPI_Route_to", "DEO Clarification");
				formObject.NGAddItem("CPI_Route_to", "Corporate UW Clarification");
				formObject.NGAddItem("CPI_Route_to", "BSG Ap Clarification");
			}
		} else if (controlName.equalsIgnoreCase("CPI_sEND_TO")) {
			formObject.NGAddItem("CPI_sEND_TO", "CPU Customer Clarification");
			formObject.NGAddItem("CPI_sEND_TO", "COPS_Policy_Print");
		}
	}

	private int COPS_Cpu_Assignment(String pEventName, String ActivityName) {
		// //System.out.println("COPS_Cpu_Assignment Loaded.....");
		// //System.out.println("Entering COPS_Cpu_Assignment at : " +
		// dateFormat1.format(new Date()));
		// String strTotalPremium="";
		try {
			if (pEventName.equalsIgnoreCase("S")) {
			} else if (pEventName.equalsIgnoreCase("D")) {
				if (formObject.getNGValue("CPI_CPU_ASSIGN_TO").equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Please fill Assign To.");
					formObject.NGFocus("CPI_CPU_ASSIGN_TO");
					return 0;
				}

				if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")) {
					if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
						return 0;
					}
				}
				if (CheckMandatoryTextBox("CPI_REMARK", "Remaks") == 0) {
					return 0;
				}
				// FR;
				// **************************Mail Management Extension
				// (S)[FR-5.0 & 6.0]**************************
				String sWIName = xmlParserGenData.getValueOf("ProcessInstanceId");
				String sUserName = formObject.getUserName();
				String sflag = "Yes";
				url = "AddFolder.jsp?Process=CPI" + "&Pid=" + sWIName + "&isexistingpath=" + sflag + "&userId="
						+ sUserName + "&cabinetName=ilombardcabinet";
				showMailPage(url, "docupload");
				// **************************Mail Management Extension (E)
				// [FR-5.0 & 6.0]**************************
				// FR;
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		// //System.out.println("Exiting COPS_Cpu_Assignment at : " +
		// dateFormat1.format(new Date()));
		return 1;
	}

	private int COPS_Policy_Endr(String pEventName, String ActivityName) {
		// //System.out.println("COPS_Policy_Endr Loaded.....");
		// //System.out.println("Entering COPS_Policy_Endr at : " +
		// dateFormat1.format(new Date()));
		String strTotalPremium = "";
		// String strTotalPremium="";
		try {
			if (pEventName.equalsIgnoreCase("S")) {
				if (!formObject.getNGValue("CPI_TOTAL_PREMIUM").equals("")) {
					if ((formObject.getNGValue("CPI_TOTAL_PREMIUM").startsWith("+")
							|| formObject.getNGValue("CPI_TOTAL_PREMIUM").startsWith("-"))
							&& formObject.getNGValue("CPI_TOTAL_PREMIUM").length() > 1) {
						strTotalPremium = formObject.getNGValue("CPI_TOTAL_PREMIUM").substring(1,
								(formObject.getNGValue("CPI_TOTAL_PREMIUM").length()));
					}
					if (ICICIval.validateText("" + formObject.getNGValue("CPI_TOTAL_PREMIUM").charAt(0), "Number")) {
						strTotalPremium = formObject.getNGValue("CPI_TOTAL_PREMIUM");
					}
					if (!check_Numeric(strTotalPremium, 13, 2)) {
						JOptionPane.showMessageDialog(null, "Enter valid total premium");
						formObject.setNGValue("CPI_TOTAL_PREMIUM", "");
						formObject.NGFocus("CPI_TOTAL_PREMIUM");
						return 0;
					}
				}
			}
			if (pEventName.equalsIgnoreCase("D")) {
				// //System.out.println("Inside the Done Event in
				// COPS_Policy_Endr");
				str[0] = "ChkExpClear";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				// //System.out.println("obj.toString() " + obj.toString());
				if (formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK").equalsIgnoreCase("")) {
					if (obj.toString().equalsIgnoreCase("R")) {
						/* CR-OMCPI-1314-03 CPU DataWashing Start */

						formObject.setNGListIndex("CPI_CO_INS_ROUTE_TO_BACK", 0);
						formObject.setNGEnable("CPI_CO_INS_ROUTE_TO_BACK", false);
						formObject.setNGLocked("CPI_CO_INS_ROUTE_TO_BACK", false);

						formObject.setNGEnable("CPI_Route_To", true);
						formObject.setNGLocked("CPI_Route_To", true);

						if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
							formObject.NGFocus("CPI_Route_To");
							return 0;
						}

					} else {
						formObject.setNGListIndex("CPI_Route_To", 0);
						formObject.setNGEnable("CPI_Route_To", false);
						formObject.setNGLocked("CPI_Route_To", false);
						// JOptionPane.showMessageDialog(null, "Please clear all
						// exceptions");
						// return 0;
					}

					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
							&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						JOptionPane.showMessageDialog(null,
								"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
						return 0;
					}
					if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
						if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")) {
						if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
							return 0;
						}
					}
				}
				/******************************
				 * Start Yogesh Marine
				 *******************************************/
				if (formObject.getNGValue("CPI_CO_INS_ROUTE_TO_BACK").equalsIgnoreCase("")) {
					// //System.out.println("Entering COPS_Policy_Endr:
					// Yogesh");
					if (CheckMandatoryCombo("CPI_PROCESS_TYPE", "Process Type") == 0) {
						return 0;
					}
					/* common controls in both process type */
					if (CheckMandatoryTextBox("CPI_CUSTOMER_ID", "Customer ID") == 0) {
						return 0;
					}
					if (CheckMandatoryTextBox("CPI_CUSTOMER_NAME", "Customer Name") == 0) {
						return 0;
					}
					if (formObject.getNGValue("CPI_PRODUCT_NAME").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill Product name.");
						formObject.NGFocus("CPI_PRODUCT_NAME");
						return 0;
					}
					if (formObject.getNGValue("CPI_PRIMARY_VERTICAL").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill  PRIMARY VERTICAL .");
						formObject.NGFocus("CPI_PRIMARY_VERTICAL");
						return 0;
					}
					if (formObject.getNGValue("CPI_PRIMARY_SUB_VERTICAL").equalsIgnoreCase("")) {
						JOptionPane.showMessageDialog(null, "Please fill Primary Sub Vertical .");
						formObject.NGFocus("CPI_PRIMARY_SUB_VERTICAL");
						return 0;
					}
					if (CheckMandatoryTextBox("CPI_TOTAL_PREMIUM", "Total Premium") == 0) {
						return 0;
					}
					/* end common in both validation */
					/* payment details in both */

					/*
					 * if(CheckMandatoryTextBox(
					 * "CPI_PF_PAYMENT_ID_NO","Payment Id")==0) { return 0; }
					 */

					if (!formObject.getNGValue("CPI_PID_PAYMENT_TYPE").equalsIgnoreCase("Yes")) {
						if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill Mode Of Payment");
							formObject.NGFocus("CPI_MODE_OF_PAYMENT");
							return 0;
						}
						if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT") != null
								&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT").equalsIgnoreCase("")
								&& validateType("CPI_INSTRUMENT_AMOUNT", formObject.getNGValue("CPI_INSTRUMENT_AMOUNT"),
										"OnlyIntegers", "INSTRUMENT_AMOUNT") == 0) {
							// //System.out.println("In endorsement For
							// checking(filter) CPI_INSTRUMENT_AMOUNT value
							// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT"));
							return 0;
						}
						if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2") != null
								&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2").equalsIgnoreCase("")
								&& validateType("CPI_INSTRUMENT_AMOUNT2",
										formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2"), "OnlyIntegers",
										"INSTRUMENT_AMOUNT2") == 0) {
							// //System.out.println("In endorsement For
							// checking(filter) CPI_INSTRUMENT_AMOUNT2 value
							// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT2"));
							return 0;
						}
						if (formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3") != null
								&& !formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3").equalsIgnoreCase("")
								&& validateType("CPI_INSTRUMENT_AMOUNT3",
										formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3"), "OnlyIntegers",
										"INSTRUMENT_AMOUNT3") == 0) {
							// //System.out.println("In endorsement For
							// checking(filter) CPI_INSTRUMENT_AMOUNT3 value
							// in=="+formObject.getNGValue("CPI_INSTRUMENT_AMOUNT3"));
							return 0;
						}
					}
					if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("DD")
							|| formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("Cheque")) {
						if (CheckMandatoryTextBox("CPI_INST_NO_CD_NO_DEP_SLIP_NO",
								"Inst. No./CD No./Dep. Slip No.") == 0) {
							return 0;
						}
						if (CheckMandatoryDate("CPI_INSTRUMENT_DATE", "Instrument Date") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_BANK_NAME_CD_NAME", "BANK NAME CD NAME") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_INSTRUMENT_AMOUNT", "Instrument Amount") == 0) {
							return 0;
						}
						if (!(formObject.getNGValue("CPI_INSTRUMENT_DATE").equalsIgnoreCase(""))) {
							if (datesCompare(formObject.getNGValue("CPI_ENDORSEMENT_EFFECTIVE_DATE"),
									formObject.getNGValue("CPI_INSTRUMENT_DATE")) == 2) {
								JOptionPane.showMessageDialog(null, "64 VB Case");
								formObject.NGFocus("CPI_INSTRUMENT_DATE");
							}
						}
					}
					if (CheckMandatoryTextBox("CPI_REMARK", "Remaks") == 0) {
						return 0;
					}
					if (CheckMandatoryTextBox("CPI_PROPOSAL_NO", "Proposal_no") == 0) {
						return 0;
					}
					/* end payment validation */
					// //System.out.println("Exiting COPS_Policy_Endr: Yogesh");
					if (formObject.getNGValue("CPI_PROCESS_TYPE").equalsIgnoreCase("Endorsement")) {
						// //System.out.println("Entering Endorsement Validation
						// Yogesh");
						if (CheckMandatoryCombo("CPI_BUSINESS_TYPE", "Business Type") == 0) {
							return 0;
						}
						if (CheckMandatoryCombo("CPI_TYPE_OF_ENDORSEMENT", "Type of Endorsement") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_EXTERNAL_ENDORSEMENT_TYPE", "Extenal Endorsement Type") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_ENDORSEMENT_NO", "Endorsement No") == 0) {
							return 0;
						}
						if (!formObject.getNGValue("CPI_ENDORSEMENT_NO").equals("")) {
							if (duplicateEndNo(formObject.getNGValue("CPI_ENDORSEMENT_NO"))) {
								JOptionPane.showMessageDialog(null, "Endorsement Number Already Exists");
								formObject.NGFocus("CPI_ENDORSEMENT_NO");
								return 0;
							}
						}
						if (formObject.getNGValue("CPI_ENDORSEMENT_EFFECTIVE_DATE").trim().equalsIgnoreCase("")) {
							JOptionPane.showMessageDialog(null, "Please fill Endorsement Effective Date");
							formObject.NGFocus("CPI_ENDORSEMENT_EFFECTIVE_DATE");
							return 0;
						}
						// //System.out.println("Exit Endorsement Validation
						// Yogesh:");
					} else if (formObject.getNGValue("CPI_PROCESS_TYPE")
							.equalsIgnoreCase("Corporate Policy Insurance")) {
						// //System.out.println("Entering Corporate Policy
						// Insurance Validation Yogesh:");

						if (CheckMandatoryDate("CPI_RISK_INSPECTION_DATE", "Risk Inspection Date") == 0) {
							return 0;
						}
						if (CheckMandatoryDate("CPI_RISK_EXPIRY_DATE", "Risk Expiry Date") == 0) {
							return 0;
						}
						if (CheckMandatoryCombo("CPI_MH", "MH") == 0) {
							return 0;
						}
						if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("Yes")) {
							formObject.setNGValue("CPI_Exception_To_MH", "");
							if (CheckMandatoryTextBox("CPI_MH_Interaction_No", "MH Interaction No") == 0) {
								// //System.out.println("Please fill
								// CPI_MH_Interaction_No ::::::::::");
								formObject.NGFocus("CPI_MH_Interaction_No");
								return 0;
							}
						}
						if (formObject.getNGValue("CPI_MH").equalsIgnoreCase("No")) {
							formObject.setNGValue("CPI_MH_Interaction_No", "");
							String exToMh = formObject.getNGValue("CPI_Exception_To_MH");
							// //System.out.println("exToMh in COPS_Policy_Endr
							// :
							// "+formObject.getNGValue("CPI_Exception_To_MH"));
							if (exToMh == null || exToMh.equals("null") || exToMh.equals("")) {
								// //System.out.println("Please fill
								// CPI_Exception_To_MH outside
								// CheckMandatoryTextBox :::::::");
								JOptionPane.showMessageDialog(null, "Please Fill Exception to MH .");
								formObject.NGFocus("CPI_Exception_To_MH");
								return 0;
							}
						}
						if (CheckMandatoryTextBox("CPI_MH_INTERACTION_NO", "MH Interaction Number") == 0) {
							return 0;
						}
						if (CheckMandatoryTextBox("CPI_TRANSACTION_ID", "Transaction id") == 0) {
							return 0;
						}
						// //System.out.println("Exit Corporate Policy Insurance
						// Validation Yogesh:");
					}
				}
				/******************************
				 * End Yogesh Marine
				 *******************************************/

				/******************************
				 * Start CR-8001-85348 : Corporate product endorsement (Marine
				 * Modification) : Vaibhav
				 *******************************************/
				// //System.out.println("Start CR-8001-85348 : Corporate product
				// endorsement (Marine Modification) : Vaibhav Before Checking
				// the condition...");
				if (formObject.getNGValue("CPI_PROCESS_TYPE").equalsIgnoreCase("Corporate Policy Insurance")) {
					// //System.out.println("Start CR-8001-85348 : Corporate
					// product endorsement (Marine Modification) : Vaibhav
					// Inside the condition");
					String marineProdCode = formObject.getNGValue("CPI_PRODUCT_IRDACODE");
					if (!(marineProdCode.equalsIgnoreCase("2006I") || marineProdCode.equalsIgnoreCase("2006I")
							|| marineProdCode.equalsIgnoreCase("2006E") || marineProdCode.equalsIgnoreCase("2001")
							|| marineProdCode.equalsIgnoreCase("2002I") || marineProdCode.equalsIgnoreCase("2002E"))) // Marine
																														// products
					{
						// //System.out.println("Policy Booking is not allowed
						// for Selected Product..so needs to changed product
						// name ");
						// //System.out.println(formObject.getNGValue("CPI_PRODUCT_NAME"));
						// //System.out.println("marine product code is
						// :"+marineProdCode);
						JOptionPane.showMessageDialog(null, "Policy Booking is not allowed for Selected Product");
						formObject.setNGValue("CPI_PRODUCT_NAME", "");
						formObject.NGFocus("CPI_PRODUCT_NAME");
						return 0;
					}
					// //System.out.println("End CR-8001-85348 : Corporate
					// product endorsement (Marine Modification) : Vaibhav ");
				}
				/******************************
				 * End CR-8001-85348 : Corporate product endorsement (Marine
				 * Modification) : Vaibhav
				 *******************************************/

			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		// //System.out.println("Exiting COPS_Policy_Endr at : " +
		// dateFormat1.format(new Date()));
		return 1;
	}

	private int COPS_Policy_Print(String pEventName, String ActivityName) {
		// //System.out.println("COPS_Policy_Print Loaded.....");
		// //System.out.println("Entering COPS_Policy_Print at : " +
		// dateFormat1.format(new Date()));
		String strTotalPremium = "";
		// String strTotalPremium="";
		try {
			if (pEventName.equalsIgnoreCase("S")) {

			} else if (pEventName.equalsIgnoreCase("D")) {
				// //System.out.println("Inside the Done Event on
				// COPS_Policy_Print Yogesh:");
				str[0] = "ChkExpClear";
				obj = js.call("CPI_JSCheckExceptionStatus", str);
				// //System.out.println("obj.toString() " + obj.toString());

				if (obj.toString().equalsIgnoreCase("R")) {
					/* CR-OMCPI-1314-03 CPU DataWashing Start */
					formObject.setNGEnable("CPI_Route_To", true);
					formObject.setNGLocked("CPI_Route_To", true);
					/**************** Start Yogesh Marine ******************/
					if (formObject.getNGValue("CPI_ISEXCEPTION") == null
							|| formObject.getNGValue("CPI_ISEXCEPTION").equalsIgnoreCase("")) {
						formObject.setNGValue("CPI_ISEXCEPTION", "Yes");// yogesh
																		// Exception
																		// set
						// //System.out.println("Set Value of CPI_ISEXCEPTION
						// Yogesh:"+formObject.getNGValue("CPI_ISEXCEPTION"));
					}
					/**************** End Yogesh Marine ******************/

					if (CheckMandatoryCombo("CPI_Route_To", "Route To") == 0) {
						formObject.NGFocus("CPI_Route_To");
						return 0;
					}
				} else {
					formObject.setNGListIndex("CPI_Route_To", 0);
					formObject.setNGEnable("CPI_Route_To", false);
					formObject.setNGLocked("CPI_Route_To", false);
					// JOptionPane.showMessageDialog(null, "Please clear all
					// exceptions");
					// return 0;
				}
				if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")
						&& formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					JOptionPane.showMessageDialog(null,
							"Please check only one checkbox, either Rejected TO IT or Withdrawn status.");
					return 0;
				}
				if (formObject.getNGValue("CPI_REJECTED_TO_IT").equalsIgnoreCase("true")) {
					if (CheckMandatoryTextBox("CPI_Samadhan_Interaction_ID", "Samadhan Intraction ID") == 0) {
						return 0;
					}
				}
				if (formObject.getNGValue("CPI_Withdrawn_Status").equalsIgnoreCase("true")) {

					if (CheckMandatoryCombo("CPI_Withdrawn_Reason", "Withdrawn Reason") == 0) {
						return 0;
					}
				}
				/****************** Start Yogesh Marine ***************/
				if (!formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("CD")) {
					// //System.out.println("Inside the Exception check");
					if (formObject.getNGValue("CPI_MODE_OF_PAYMENT").equalsIgnoreCase("NA")) {
						// System.out.println("Nothing...");
					} else {
						if (formObject.getNGValue("CPI_ISEXCEPTION").equalsIgnoreCase("")
								|| formObject.getNGValue("CPI_ISEXCEPTION") == null) {
							JOptionPane.showMessageDialog(null, "Please raise an exaception to RM/BSG clarification.");
							return 0;
						}
					}
				}
				if (CheckMandatoryTextBox("CPI_REMARK", "Remaks") == 0) {
					return 0;
				}
				/****************** End Yogesh Marine ***************/
				// //System.out.println("COPS_Policy_Print:1
				// "+formObject.getNGValue("CPI_EXTERNAL_ENDORSEMENT_TYPE"));
				// //System.out.println("COPS_Policy_Print:2
				// "+formObject.getNGValue("CPI_INTERNAL_ENDORSEMENT_TYPE"));
			}
		} catch (NullPointerException nex) {
			nex.printStackTrace();
			bError = true;
			return 0;
		} catch (Exception ex) {
			ex.printStackTrace();
			bError = true;
			return 0;
		}
		// //System.out.println("Exiting COPS_Cpu_Assignment at : " +
		// dateFormat1.format(new Date()));
		return 1;
	}

	private void enableFields() {
		// //System.out.println("enableFields called: ");
		formObject.setNGEnable("CPI_process_type", true);
		formObject.setNGLocked("CPI_process_type", true);
		formObject.setNGEnable("CPI_rm_ID", true);
		formObject.setNGLocked("CPI_rm_ID", false);
		formObject.setNGEnable("CPI_rm_NAME", true);
		formObject.setNGLocked("CPI_rm_NAME", false);
		formObject.setNGEnable("CPI_cuSTOMER_NAME", true);
		formObject.setNGLocked("CPI_cuSTOMER_NAME", true);
		formObject.setNGEnable("CPI_CUSTOMER_ID", true);
		formObject.setNGLocked("CPI_CUSTOMER_ID", true);
		formObject.setNGEnable("CPI_prODUCT_NAME", true);
		formObject.setNGLocked("CPI_prODUCT_NAME", false);
		formObject.setNGEnable("CPI_toTAL_PREMIUM", true);
		formObject.setNGLocked("CPI_toTAL_PREMIUM", true);

		/*
		 * formObject.setNGEnable("CPI_tYPE_OF_ENDORSEMENT", false);
		 * formObject.setNGLocked("CPI_tYPE_OF_ENDORSEMENT", false);
		 * formObject.setNGEnable("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
		 * formObject.setNGLocked("CPI_EXTERNAL_ENDORSEMENT_TYPE", false);
		 * formObject.setNGEnable("CPI_iNTERNAL_ENDORSEMENT_TYPE", false);
		 * formObject.setNGLocked("CPI_iNTERNAL_ENDORSEMENT_TYPE", false);
		 * formObject.setNGEnable("CPI_eNDORSEMENT_EFFECTIVE_DATE", false);
		 * formObject.setNGLocked("CPI_eNDORSEMENT_EFFECTIVE_DATE", false);
		 * formObject.setNGEnable("CPI_eNDORSEMENT_NO", false);
		 * formObject.setNGLocked("CPI_eNDORSEMENT_NO", false);
		 * formObject.setNGEnable("CPI_CLAIM_NO", false);
		 * formObject.setNGLocked("CPI_CLAIM_NO", false);
		 * formObject.setNGEnable("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
		 * formObject.setNGLocked("CPI_CLIENT_MAIL_RECEIVED_DATE", false);
		 */

		formObject.setNGEnable("CPI_BOOKING_TYPE", true);
		formObject.setNGLocked("CPI_BOOKING_TYPE", true);
		formObject.setNGEnable("CPI_prIMARY_VERTICAL", true);
		formObject.setNGLocked("CPI_prIMARY_VERTICAL", false);
		formObject.setNGEnable("CPI_seCONDARY_VERTICAL", true);
		formObject.setNGLocked("CPI_seCONDARY_VERTICAL", false);
		formObject.setNGEnable("CPI_il_LOCATION", true);
		formObject.setNGLocked("CPI_il_LOCATION", false);
		formObject.setNGEnable("CPI_prIMARY_SUB_VERTICAL", true);
		formObject.setNGLocked("CPI_prIMARY_SUB_VERTICAL", false);
		formObject.setNGEnable("CPI_seCONDARY_SUB_VERTICAL", true);
		formObject.setNGLocked("CPI_seCONDARY_SUB_VERTICAL", true);
		formObject.setNGEnable("CPI_clIENT_INFORMATION", true);
		formObject.setNGLocked("CPI_clIENT_INFORMATION", true);
		formObject.setNGEnable("CPI_buSINESS_TYPE", true);
		formObject.setNGLocked("CPI_buSINESS_TYPE", true);
		formObject.setNGEnable("CPI_naME_OF_BROKER_AGENT", true);
		formObject.setNGLocked("CPI_naME_OF_BROKER_AGENT", false);
		formObject.setNGEnable("CPI_moDE_OF_PAYMENT", true);
		formObject.setNGLocked("CPI_moDE_OF_PAYMENT", false);
		formObject.setNGEnable("CPI_coINSURANCE", true);
		formObject.setNGLocked("CPI_coINSURANCE", true);
		formObject.setNGEnable("CPI_leADERS_POLICY_NO", true);
		formObject.setNGLocked("CPI_leADERS_POLICY_NO", true);
		formObject.setNGEnable("CPI_naME_OF_LEADER", true);
		formObject.setNGLocked("CPI_naME_OF_LEADER", true);
		formObject.setNGEnable("CPI_peRCENTAGE_SHARE", true);
		formObject.setNGLocked("CPI_peRCENTAGE_SHARE", true);
		formObject.setNGEnable("CPI_OUR_SHARE_PREMIUM", true);
		formObject.setNGLocked("CPI_OUR_SHARE_PREMIUM", true);
		formObject.setNGEnable("CPI_BRANCH_NAME", true);
		formObject.setNGLocked("CPI_BRANCH_NAME", false);
		formObject.setNGEnable("CPI_CHANNEL_NAME", true);
		formObject.setNGLocked("CPI_CHANNEL_NAME", true);
		// //System.out.println("Inside if 1 locked false6:");
		formObject.setNGEnable("CPI_SOURCE_NAME", true);
		formObject.setNGLocked("CPI_SOURCE_NAME", false);
		formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", true);
		formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_NAME", true);
		formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", true);
		formObject.setNGLocked("CPI_CHANNEL_EMPLOYEE_ID", true);
		/***************** start Yogesh Marine ***************/
		// //System.out.println("Inside the EnableFileds() Yogesh :");
		formObject.setNGValue("CPI_NETWORK_PARTNER", "No");
		formObject.setNGLocked("CPI_NETWORK_PARTNER", false);
		/***************** End Yogesh Marine *****************/
	}

	private void disableFields() {
		// //System.out.println("disableFields called: ");
		formObject.setNGEnable("CPI_SAMADHAN_INTERACTION_ID", true);
		formObject.setNGLocked("CPI_SAMADHAN_INTERACTION_ID", true);
		formObject.setNGEnable("CPI_process_type", false);
		formObject.setNGEnable("CPI_rm_ID", false);
		formObject.setNGEnable("CPI_rm_NAME", false);
		formObject.setNGEnable("CPI_cuSTOMER_NAME", false);
		formObject.setNGEnable("CPI_CUSTOMER_ID", false);
		formObject.setNGEnable("CPI_prODUCT_TYPE", false);
		formObject.setNGEnable("CPI_prODUCT_NAME", false);
		formObject.setNGEnable("CPI_toTAL_PREMIUM", false);
		formObject.setNGEnable("CPI_prIMARY_VERTICAL", false);
		formObject.setNGEnable("CPI_seCONDARY_VERTICAL", false);
		formObject.setNGEnable("CPI_il_LOCATION", false);
		formObject.setNGEnable("CPI_prIMARY_SUB_VERTICAL", false);
		formObject.setNGEnable("CPI_seCONDARY_SUB_VERTICAL", false);
		formObject.setNGEnable("CPI_clIENT_INFORMATION", false);
		formObject.setNGEnable("CPI_buSINESS_TYPE", false);
		formObject.setNGEnable("CPI_naME_OF_BROKER_AGENT", false);
		formObject.setNGEnable("CPI_moDE_OF_PAYMENT", false);
		formObject.setNGEnable("CPI_coINSURANCE", false);
		formObject.setNGEnable("CPI_leADERS_POLICY_NO", false);
		formObject.setNGEnable("CPI_naME_OF_LEADER", false);
		formObject.setNGEnable("CPI_peRCENTAGE_SHARE", false);
		formObject.setNGEnable("CPI_OUR_SHARE_PREMIUM", false);
		formObject.setNGEnable("CPI_BRANCH_NAME", false);
		formObject.setNGEnable("CPI_CHANNEL_NAME", false);
		// //System.out.println("Inside if 1 enable false6:");
		formObject.setNGEnable("CPI_SOURCE_NAME", false);
		formObject.setNGEnable("CPI_CHANNEL_EMPLOYEE_NAME", false);
		formObject.setNGEnable("CPI_NETWORK_PARTNER", false);
		formObject.setNGEnable("CPI_VAS", false);
	}

	/**** ENd CR-8001-70893 Marine CR *********************************/
	// Sadik
	public void sendCpuHealthMail() {
		String clientToMailId = formObject.getNGValue("CPI_CUSTOMER_EMAILID");
		String rmCCMailId = formObject.getNGValue("CPI_RM_EMAILID");
		String clientMailReceivedDate = formObject.getNGValue("CPI_CLIENT_MAIL_RECEIVED_DATE");
		String interactionId = formObject.getNGValue("CPI_INTERACTIONID");
		String endorsementNo = formObject.getNGValue("CPI_eNDORSEMENT_NO");
		String exceptionName = formObject.getNGValue("CPI_exception_name");
		//// //System.out.println("Sadik CR6 within sendCpuHealthMail
		//// Value:"+rmCCMailId+","+clientToMailId+","+clientMailReceivedDate+","+interactionId+","+endorsementNo+","+exceptionName);
		// url =
		//// "mailTriggerCPUHealth.jsp?rmCCMailId="+rmCCMailId+"&clientToMailId="+clientToMailId+"&clientMailReceivedDate="
		//// + clientMailReceivedDate +
		//// "&interactionId="+interactionId+"&endorsementNo="+endorsementNo+"&exceptionName="+exceptionName;
		// //System.out.println("Sadik CR9 within sendCpuHealthMail
		//// Value:"+rmCCMailId+","+clientToMailId+","+clientMailReceivedDate+","+interactionId+","+endorsementNo+","+exceptionName);
		url = "mailTriggerCPUHealth.jsp?rmCCMailId=" + rmCCMailId + "&clientToMailId=" + clientToMailId
				+ "&clientMailReceivedDate=" + clientMailReceivedDate + "&interactionId=" + interactionId
				+ "&endorsementNo=" + endorsementNo + "&exceptionName=" + exceptionName;
		// //System.out.println("docUpload URL: " + url);
		showMailPage(url, "docupload");
	}
	// End
	
	private static TrustManager[] get_trust_mgr() {
		TrustManager[] certs = new TrustManager[] { new X509TrustManager() {
			@Override
			public void checkClientTrusted(X509Certificate[] certs, String t) {
			}

			@Override
			public void checkServerTrusted(X509Certificate[] certs, String t) {
			}

			@Override
			public X509Certificate[] getAcceptedIssuers() {
				return null;
			}
		} };
		return certs;
	}


	public static String executeWS(String envelope, String endPoint) {
		StringBuffer response = new StringBuffer(5000);
		URL url;
		try {
			SSLContext ssl_ctx = SSLContext.getInstance("TLS");
			TrustManager[] trust_mgr = get_trust_mgr();
			ssl_ctx.init(null, // key manager
					trust_mgr, // trust manager
					new SecureRandom()); // random number generator
			HttpsURLConnection.setDefaultSSLSocketFactory(ssl_ctx.getSocketFactory());

			url = new URL(endPoint);
			HttpsURLConnection con = (HttpsURLConnection) url.openConnection();

			// URL url = new URL(endPoint);
			// HttpURLConnection urlConnection = (HttpURLConnection)
			// url.openConnection();
			con.setRequestProperty("SOAPAction", "http://tempuri.org/URNGeneration");

			ByteArrayOutputStream bout = new ByteArrayOutputStream();
			byte[] buffer = new byte[envelope.length()];
			buffer = envelope.getBytes();
			bout.write(buffer);
			byte[] b = bout.toByteArray();

			con.setRequestProperty("Content-Length", String.valueOf(b.length));
			con.setRequestProperty("Content-Type", "text/xml; charset=utf-8");
			con.setDoInput(true);
			con.setDoOutput(true);
			OutputStream out = con.getOutputStream();
			out.write(b);
			out.flush();

			String line = null;
			BufferedReader reader = null;
			System.out.println(con.getResponseCode());
			if (con.getResponseCode() == 200) {
				reader = new BufferedReader(new InputStreamReader(con.getInputStream()));
			} else {
				reader = new BufferedReader(new InputStreamReader(con.getErrorStream()));
			}

			while ((line = reader.readLine()) != null) {
				response.append(line + "\n");
			}

			reader.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return response.toString();
	}

	public static String TagValue(String TagName, String xmlString) {
		int startPos = xmlString.indexOf("<" + TagName + ">");
		if (startPos == -1) {
			return "";
		} else {
			int endPos = xmlString.indexOf("</" + TagName + ">");
			startPos += (new String("<" + TagName + ">")).length();
			return (xmlString.substring(startPos, endPos));
		}
	}

	private static String DateToString(String strDate) {

		try {

			SimpleDateFormat sdfSource = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");

			java.util.Date date = sdfSource.parse(strDate);

			SimpleDateFormat sdfDestination = new SimpleDateFormat("DD/MM/YYYY");

			strDate = sdfDestination.format(date);

		} catch (ParseException pe) {
			System.out.println("Parse Exception : " + pe);
		}
		return strDate;

	}
	
	public String SoapProcessing() 
	{
		String URN = "";
		String sStatus = "";
		String sError = "";
		
		
		//HashMap hm = new HashMap();		
		try {			

			String sUrl = "https://cldilpfapp02.cloudapp.net/URNGeneration/URNGeneration.asmx";
			String SOAP_inxml = "<soap:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\" "
								+ "xmlns:tem=\"http://tempuri.org/\"><soap:Header/><soap:Body><tem:URNGeneration>"
								+ "<!--Optional:--><tem:SourceSystem>IPARTNER</tem:SourceSystem>"
								+ "<!--Optional:--><tem:CPI>?</tem:CPI><!--Optional:-->"
								+ "<tem:ProductCode>1001</tem:ProductCode><!--Optional:-->"
								+ "<tem:RiskInceptionDate>12/08/2017</tem:RiskInceptionDate>"
								+ "<!--Optional:--><tem:CoinsuranceType>Leader</tem:CoinsuranceType>"
								+ "<!--Optional:--><tem:PolicyNo></tem:PolicyNo><!--Optional:-->"
								+ "<tem:URN>?</tem:URN><!--Optional:--><tem:EndorsementFlag>N</tem:EndorsementFlag>"
								+ "<!--Optional:--><tem:CancelRebook>N</tem:CancelRebook>"
								+ "<tem:RequestDateTime>2017-01-17T00:00:00</tem:RequestDateTime><!--Optional:-->"
								+ "<tem:UserID>SYSESB00</tem:UserID>"
								+ "<!--Optional:--><tem:Password>OS8076T56G</tem:Password>"
								+ "</tem:URNGeneration></soap:Body></soap:Envelope>";
			System.out.println("" + SOAP_inxml);
			String SOAPResponse_xml = executeWS(SOAP_inxml, sUrl);
			System.out.println("SOAPResponse_xml" + SOAPResponse_xml);

			int startPos1 = SOAPResponse_xml.indexOf("<URNGenerationResult>");
			// int startPos1 = SOAPResponse_xml.indexOf("<a:CPIDetails>");
			System.out.println("length" + startPos1);
			if (startPos1 != -1) {
				System.out.println("inside");
				URN = TagValue("URNNo", SOAPResponse_xml);
				//hm.put("URN", URN);
				if (URN != null || URN.equalsIgnoreCase("")) {
					sError = TagValue("ErrorMessage", SOAPResponse_xml);
					//hm.put("ErrorMessage", sError);
				}
				sStatus = TagValue("Status", SOAPResponse_xml);
				//hm.put("URNStatus", sStatus);

			} else {
				//hm.put("aWiname", "");
				//hm.put("aFolderIndex", "");
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		
		return (sStatus + "," + URN + "," + sError);
		// return (sWiname);
	}

}